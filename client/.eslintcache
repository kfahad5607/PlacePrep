[{"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\index.js":"1","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\App.js":"2","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\configureStore.js":"3","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\reducers\\reducer.js":"4","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\actions\\authActions.js":"5","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\auth\\Register.js":"6","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\mainview\\MainView.js":"8","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js":"9","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js":"10","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\layout\\Navbar.js":"11","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\layout\\Home.js":"12","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js":"13","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js":"14","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js":"15","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\reducers\\practiceProblemReducers.js":"16","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js":"17","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js":"18","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js":"19","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js":"20","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js":"21","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizPageSub.js":"22","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\coding\\Coding.js":"23","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js":"24","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\QuizCardPage.js":"25","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizPage.js":"26","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeProblem.js":"27","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubmissions.js":"28","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\AddTopics.js":"29","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\EditPracticeProblem.js":"30","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\EditQuiz.js":"31","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\code\\CodeQuestions.js":"32","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js":"33","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js":"34","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\actions\\quizActions.js":"35","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizQuesSub.js":"36","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js":"37","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js":"38","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\layout\\Spinner.js":"39","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js":"40","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js":"41","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js":"42","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\code\\paginate.js":"43","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\QuizTimer.js":"44","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\actions\\codeActions.js":"45","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\code\\Pagination.js":"46","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\actions\\practiceProblemActions.js":"47","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\CreateAptiQuestion.js":"48","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubTabRow.js":"49","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\AptiTopicsTemplate.js":"50","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizQues.js":"51","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js":"52","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js":"53","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizOptionSub.js":"54","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\layout\\MyModal.js":"55","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\ViewAnswer.js":"56","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizOption.js":"57","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\code\\CodeTableRow.js":"58","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\auth\\Resetpassword.js":"59","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\auth\\ResPassModal.js":"60","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\dashboard\\Dashboard.js":"61"},{"size":339,"mtime":1614161180401,"results":"62","hashOfConfig":"63"},{"size":1814,"mtime":1614335518083,"results":"64","hashOfConfig":"63"},{"size":292,"mtime":1614161180419,"results":"65","hashOfConfig":"63"},{"size":400,"mtime":1614161180425,"results":"66","hashOfConfig":"63"},{"size":3845,"mtime":1614337076910,"results":"67","hashOfConfig":"63"},{"size":4973,"mtime":1614161180243,"results":"68","hashOfConfig":"63"},{"size":4041,"mtime":1614341435718,"results":"69","hashOfConfig":"63"},{"size":2332,"mtime":1614341169507,"results":"70","hashOfConfig":"63"},{"size":521,"mtime":1614161180363,"results":"71","hashOfConfig":"63"},{"size":6813,"mtime":1614161180366,"results":"72","hashOfConfig":"63"},{"size":2099,"mtime":1614317916936,"results":"73","hashOfConfig":"63"},{"size":3260,"mtime":1614412698362,"results":"74","hashOfConfig":"63"},{"size":3107,"mtime":1614161180423,"results":"75","hashOfConfig":"63"},{"size":2034,"mtime":1614161180421,"results":"76","hashOfConfig":"63"},{"size":3339,"mtime":1614161180425,"results":"77","hashOfConfig":"63"},{"size":2374,"mtime":1614161180424,"results":"78","hashOfConfig":"63"},{"size":3192,"mtime":1614334541235,"results":"79","hashOfConfig":"63"},{"size":8210,"mtime":1614328870416,"results":"80","hashOfConfig":"63"},{"size":787,"mtime":1614161180242,"results":"81","hashOfConfig":"63"},{"size":7935,"mtime":1614161180365,"results":"82","hashOfConfig":"63"},{"size":7801,"mtime":1614322146561,"results":"83","hashOfConfig":"63"},{"size":2025,"mtime":1614161180360,"results":"84","hashOfConfig":"63"},{"size":1781,"mtime":1614161180283,"results":"85","hashOfConfig":"63"},{"size":2240,"mtime":1614161180357,"results":"86","hashOfConfig":"63"},{"size":1316,"mtime":1614161180356,"results":"87","hashOfConfig":"63"},{"size":1807,"mtime":1614161180327,"results":"88","hashOfConfig":"63"},{"size":1050,"mtime":1614161180325,"results":"89","hashOfConfig":"63"},{"size":7862,"mtime":1614508134583,"results":"90","hashOfConfig":"63"},{"size":6730,"mtime":1614161180321,"results":"91","hashOfConfig":"63"},{"size":6082,"mtime":1614161180325,"results":"92","hashOfConfig":"63"},{"size":8671,"mtime":1614161180331,"results":"93","hashOfConfig":"63"},{"size":8949,"mtime":1614498526358,"results":"94","hashOfConfig":"63"},{"size":14005,"mtime":1614165173164,"results":"95","hashOfConfig":"63"},{"size":2904,"mtime":1614161180364,"results":"96","hashOfConfig":"63"},{"size":7419,"mtime":1614161180418,"results":"97","hashOfConfig":"63"},{"size":1793,"mtime":1614161180362,"results":"98","hashOfConfig":"63"},{"size":545,"mtime":1614161180283,"results":"99","hashOfConfig":"63"},{"size":5157,"mtime":1614161180330,"results":"100","hashOfConfig":"63"},{"size":358,"mtime":1614161180286,"results":"101","hashOfConfig":"63"},{"size":2180,"mtime":1614161180281,"results":"102","hashOfConfig":"63"},{"size":3021,"mtime":1614161180358,"results":"103","hashOfConfig":"63"},{"size":5362,"mtime":1614161180281,"results":"104","hashOfConfig":"63"},{"size":211,"mtime":1614161180280,"results":"105","hashOfConfig":"63"},{"size":1724,"mtime":1614161180358,"results":"106","hashOfConfig":"63"},{"size":4225,"mtime":1614161180414,"results":"107","hashOfConfig":"63"},{"size":1218,"mtime":1614162492375,"results":"108","hashOfConfig":"63"},{"size":4666,"mtime":1614161180416,"results":"109","hashOfConfig":"63"},{"size":5557,"mtime":1614166398688,"results":"110","hashOfConfig":"63"},{"size":1748,"mtime":1614161180362,"results":"111","hashOfConfig":"63"},{"size":4680,"mtime":1614161180322,"results":"112","hashOfConfig":"63"},{"size":2240,"mtime":1614161180327,"results":"113","hashOfConfig":"63"},{"size":3802,"mtime":1614161180331,"results":"114","hashOfConfig":"63"},{"size":751,"mtime":1614161180357,"results":"115","hashOfConfig":"63"},{"size":1106,"mtime":1614161180359,"results":"116","hashOfConfig":"63"},{"size":1910,"mtime":1614161180285,"results":"117","hashOfConfig":"63"},{"size":817,"mtime":1614161180328,"results":"118","hashOfConfig":"63"},{"size":1197,"mtime":1614161180326,"results":"119","hashOfConfig":"63"},{"size":2504,"mtime":1614162407394,"results":"120","hashOfConfig":"63"},{"size":2522,"mtime":1614341608590,"results":"121","hashOfConfig":"63"},{"size":1935,"mtime":1614341442271,"results":"122","hashOfConfig":"63"},{"size":12456,"mtime":1614508206959,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"zpwc4q",{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"126"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"126"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"126"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"126"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"126"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"126"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"126"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"126"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"126"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"126"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"126"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"126"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"126"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"126"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"126"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"126"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"126"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"126"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"126"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"126"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"126"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"126"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"126"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"126"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"126"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"126"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"126"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\index.js",[],["276","277"],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\App.js",["278","279","280","281","282","283","284"],"import React, { useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Auth.css\";\r\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\nimport SideBar from \"./components/sidebar/SideBar\";\r\nimport MainView from \"./components/mainview/MainView\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Home from \"./components/layout/Home\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadUser } from \"./store/actions/authActions\";\r\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\r\nimport ResetPassword from './components/auth/Resetpassword';\r\n\r\nconst App = (props) => {\r\n    const { auth: { user }, loadUser } = props;\r\n\r\n    useEffect(() => {\r\n        loadUser(false, true);\r\n        return () => {\r\n        };\r\n    }, []);\r\n    {\r\n        /* <div style={{ display: 'flex', height: '100vh' }}> */\r\n    }\r\n\r\n    {\r\n        /* </div> */\r\n    }\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                <Route exact path=\"/ResetPassword/:token\" component={ResetPassword} />\r\n                {user && <PrivateRoute path=\"/\" component={Home} />}\r\n                {/* <>\r\n                    <Navbar />\r\n                    <div style={{ display: \"flex\", height: \"100vh\" }}>\r\n                        <SideBar />\r\n                        <MainView />\r\n                    </div>\r\n                </> */}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUser })(App);\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\configureStore.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\reducers\\reducer.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\actions\\authActions.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\auth\\Login.js",["285"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport MessagePanel from \"./MessagePanel\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../store/actions/authActions\";\r\nimport ResPassModal from './ResPassModal';\r\n\r\nconst Login = (props) => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n\r\n\r\n    const { login } = props;\r\n    const { error, isAuthenticated } = props.auth;\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            props.history.push(\"/\");\r\n        }\r\n        if (error) {\r\n            console.log(error);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [isAuthenticated, props.history]);\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const { email, password } = user;\r\n    const messageContent = {\r\n        title: \"New here ?\",\r\n        message:\r\n            \"SignUp and start your journey of campus placements preparations with your own campus faculties.\",\r\n        btnLink: \"/register\",\r\n        btnName: \"Sign up\",\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (email === \"\" || password === \"\") {\r\n            console.log(\"Please enter all fields\", \"danger\");\r\n        } else {\r\n            login({\r\n                email,\r\n                password,\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"credentials-section\">\r\n            <ResPassModal show={modalShow} onHide={() => setModalShow(false)} />\r\n\r\n            <Row className=\"login-container\">\r\n                <Col className=\"panel-container\">\r\n                    <MessagePanel content={messageContent} />\r\n                </Col>\r\n                <Col className=\"form-container\">\r\n                    <div className=\"sign-in-form\">\r\n                        <form\r\n                            className=\"sign-in-form auth-form\"\r\n                            onSubmit={handleOnSubmit}\r\n                        >\r\n                            <h2 className=\"title\">Sign in</h2>\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fa fa-user\"></i>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email\"\r\n                                    name=\"email\"\r\n                                    value={email}\r\n                                    onChange={handleOnChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fa fa-lock\"></i>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    value={password}\r\n                                    onChange={handleOnChange}\r\n                                />\r\n                            </div>\r\n                            <input\r\n                                type=\"submit\"\r\n                                value=\"Login\"\r\n                                className=\"btn-login solid\"\r\n                            />\r\n                            <div className=\"forgot-password\">\r\n                                <p onClick={() => setModalShow(true)}>\r\n                                    Forgot Password?\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\mainview\\MainView.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\layout\\Navbar.js",["286","287","288"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/authActions\";\r\n\r\nconst Navbars = (props) => {\r\n    const { logout, onClick } = props;\r\n    const { isAuthenticated, user } = props.auth;\r\n\r\n\r\n    const onlogout = () => {\r\n        logout();\r\n    }\r\n\r\n    const authLinks = (\r\n        <Fragment>\r\n            <span>\r\n                <img className=\"nav__user-img\" src={`/img/users/${user.photo}`} />\r\n                <span className='user-name'>Hello {user && user.name.split(' ')[0]}</span>\r\n            </span>\r\n            <span className=\"logout-div\">\r\n                <a href=\"#\" onClick={onlogout}>\r\n                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                    <span className=\"hide-sm\"> Logout</span>\r\n                </a>\r\n            </span>\r\n        </Fragment>\r\n    );\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <Link to=\"/register\">Register</Link>\r\n            <Link to=\"/login\">Login</Link>\r\n        </Fragment>\r\n    );\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n            <div id='sidebar-btn' onClick={onClick} >\r\n                <i className='fas fa-bars menu-icon' ></i>\r\n            </div>\r\n            <Navbar.Brand className=\"brand-name\">\r\n                <img\r\n                    alt=\"\"\r\n                    src=\"./assets/img/logo.png\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{\" \"}\r\n                PlacePrep\r\n            </Navbar.Brand>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    {isAuthenticated ? authLinks : guestLinks}\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbars);\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\layout\\Home.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js",["289"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    USER_LOADED,\r\n    USER_LOADED_JWT,\r\n    AUTH_ERROR,\r\n    SET_USER_NULL,\r\n    SET_USER_FROM_START_QUIZ,\r\n    UPDATE_ME,\r\n    UPDATE_ERROR,\r\n    AUTH_LOADING\r\n    // CLEAR_ERRORS,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    isAuthenticated: null,\r\n    user: null,\r\n    error: null,\r\n    loading: true,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n        case USER_LOADED_JWT:\r\n        case UPDATE_ME:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user: action.payload.user,\r\n                loading: false,\r\n                error: null,\r\n            };\r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:\r\n        case AUTH_ERROR:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                user: null,\r\n                error: action.payload,\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                error: null,\r\n            };\r\n        case SET_USER_NULL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            };\r\n        case SET_USER_FROM_START_QUIZ:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                error: null,\r\n            };\r\n        case UPDATE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\reducers\\practiceProblemReducers.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js",["290"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./UserProfile.css\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateMe } from \"../../store/actions/authActions\";\r\n\r\nconst UserProfile = (props) => {\r\n    const { updateMe } = props;\r\n    const { user, isAuthenticated } = props.auth;\r\n\r\n    const [userDetails, setUserDetails] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        photo: \"\"\r\n    });\r\n    const [userPasswordDetails, setUserPasswordDetails] = useState({\r\n        passwordCurrent: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            setUserDetails({\r\n                name: user.name,\r\n                email: user.email,\r\n                photo: \"\"\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const handleOnChange = (e) => {\r\n        setUserDetails({\r\n            ...userDetails,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    const handleOnImageChange = (e) => {\r\n        setUserDetails({\r\n            ...userDetails,\r\n            photo: e.target.files[0],\r\n        });\r\n    };\r\n    const handleOnChangePassword = (e) => {\r\n        setUserPasswordDetails({\r\n            ...userPasswordDetails,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (userDetails.name === \"\" || userDetails.email === \"\") {\r\n            console.log(\"Please enter all fields\", \"danger\");\r\n        } else {\r\n            const form = new FormData();\r\n            form.append('name', userDetails.name);\r\n            form.append('email', userDetails.email);\r\n            form.append('photo', userDetails.photo);\r\n            updateMe(form, 'data');\r\n        }\r\n    };\r\n\r\n    const handleOnSubmitPassword = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            userPasswordDetails.passwordCurrent === \"\" ||\r\n            userPasswordDetails.password === \"\" ||\r\n            userPasswordDetails.passwordConfirm === \"\"\r\n        ) {\r\n            console.log(\"Please enter all fields\", \"danger\");\r\n        } else if (\r\n            userPasswordDetails.password !== userPasswordDetails.passwordConfirm\r\n        ) {\r\n            console.log(\"Password do not match\", \"danger\");\r\n        } else {\r\n            updateMe(userPasswordDetails, 'password')\r\n        }\r\n        setTimeout(() => {\r\n            setUserPasswordDetails({\r\n                passwordCurrent: \"\",\r\n                password: \"\",\r\n                passwordConfirm: \"\",\r\n            })\r\n        }, 2000);\r\n    };\r\n\r\n    return (\r\n        <Container className=\"container-user\">\r\n            <h3 className=\"text-center mb-3 pt-4 \">ACCOUNT SETTINGS</h3>\r\n            <div className=\"title-border mb-4\">\r\n                <span></span>\r\n            </div>\r\n            <div className=\"userform\">\r\n                <Form className=\"\">\r\n                    <Form.Group controlId=\"Name\">\r\n                        <Form.Label>\r\n                            <b>Name</b>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            className=\"user-inputFiled\"\r\n                            type=\"name\"\r\n                            placeholder=\"Enter name\"\r\n                            name=\"name\"\r\n                            value={userDetails.name}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>\r\n                            <b>Email address</b>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            className=\"user-inputFiled mb-4\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            value={userDetails.email}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </Form.Group>\r\n                    {/* <p><b>Choose Photo</b></p> */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <img\r\n                                src={`/img/users/${user.photo}`}\r\n                                className=\"profilephoto\"\r\n                                alt=\"\"\r\n                            ></img>\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"photo\"\r\n                                className=\"photo\"\r\n                                accept=\"image/*\"\r\n                                onChange={handleOnImageChange}\r\n                            ></input>\r\n                            <label className=\"photolabel\">\r\n                                Choose new photo\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <Button\r\n                                className=\" savesetting setting mt-4\"\r\n                                onClick={handleOnSubmit}\r\n                            >\r\n                                Save settings\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n                <hr></hr>\r\n                <h3 className=\"text-center mt-5 mb-3\">PASSWORD CHANGE</h3>\r\n                <div className=\"title-border mb-4\">\r\n                    <span></span>\r\n                </div>\r\n                <Form className=\"\">\r\n                    <Form.Group controlId=\"currentpassword\">\r\n                        <Form.Label>\r\n                            <b>Current password</b>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            className=\"user-inputFiled \"\r\n                            type=\"password\"\r\n                            name=\"passwordCurrent\"\r\n                            placeholder=\"••••••••\"\r\n                            value={userPasswordDetails.passwordCurrent}\r\n                            onChange={handleOnChangePassword}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"newPassword\">\r\n                        <Form.Label>\r\n                            <b>New password</b>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            className=\"user-inputFiled\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"••••••••\"\r\n                            value={userPasswordDetails.password}\r\n                            onChange={handleOnChangePassword}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"confirmPassword\">\r\n                        <Form.Label>\r\n                            <b>Confirm password</b>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            className=\"user-inputFiled\"\r\n                            type=\"password\"\r\n                            name=\"passwordConfirm\"\r\n                            placeholder=\"••••••••\"\r\n                            value={userPasswordDetails.passwordConfirm}\r\n                            onChange={handleOnChangePassword}\r\n                        />\r\n                    </Form.Group>\r\n                    <div className=\"text-center\">\r\n                        <Button\r\n                            className=\"savepassword setting mt-2 \"\r\n                            onClick={handleOnSubmitPassword}\r\n                        >\r\n                            Save password\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateMe })(UserProfile);\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js",["291","292"],"import React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Link } from 'react-router-dom';\r\nimport * as menuItemArrays from './MenuItemData';\r\nimport { connect } from 'react-redux';\r\n\r\nconst MenuList = (props) => {\r\n    const { auth: { user } } = props;\r\n\r\n    useEffect(() => {\r\n        if (user !== null) {\r\n            if (user.role === 'faculty') {\r\n                setMenuItems(menuItemArrays.faculty);\r\n            }\r\n            else if (user.role === 'admin') {\r\n                setMenuItems(menuItemArrays.admin);\r\n            }\r\n            else {\r\n                setMenuItems(menuItemArrays.student);\r\n            }\r\n        } else {\r\n            setMenuItems(menuItemArrays.student);\r\n        }\r\n    }, [user]);\r\n\r\n    let [menuItems, setMenuItems] = useState(menuItemArrays.student);\r\n\r\n\r\n    const [selected, setSelected] = useState(menuItems[0].name);\r\n    const [subMenus, setSubMenus] = useState({});\r\n\r\n    useLayoutEffect(() => {\r\n        let path = window.location.pathname;\r\n        if (path !== '/') {\r\n            path = path.endsWith('/') ? path.replace(/\\/$/, \"\") : path;\r\n        }\r\n        const parts = path.split('/');\r\n\r\n        if (parts.length !== 3) {\r\n            const selectedItem = menuItems.filter((ele) => {\r\n                return ele.to === path;\r\n            })[0];\r\n            setSelected(selectedItem?.name);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const newSubMenus = {};\r\n\r\n        menuItems.forEach((ele, index) => {\r\n            const hasSubMenus = !!ele.subMenuItems.length;\r\n\r\n            if (hasSubMenus) {\r\n                newSubMenus[index] = {};\r\n                newSubMenus[index]['isOpen'] = false;\r\n                newSubMenus[index]['selectedSubMenu'] = null;\r\n            }\r\n\r\n            let path = window.location.pathname;\r\n            path = path.endsWith('/') ? path.replace(/\\/$/, \"\") : path;\r\n            const parts = path.split('/');\r\n\r\n            let selectedItemIndex;\r\n            let selectedSubItemIndex;\r\n            if (parts.length === 3) {\r\n                const selectedItem = menuItems.filter((ele, index) => {\r\n                    if (ele.to === '/' + parts[1]) {\r\n                        selectedItemIndex = index;\r\n                    }\r\n                    return ele.to === '/' + parts[1];\r\n                })[0];\r\n\r\n                // const selectedItem = parts[1].toLowerCase();\r\n\r\n                selectedItem?.subMenuItems.filter((subEle, index) => {\r\n                    if (subEle.to === '/' + parts[2]) {\r\n                        selectedSubItemIndex = index;\r\n                    }\r\n                    return subEle.to === '/' + parts[2];\r\n                });\r\n\r\n                // const subSelectedItem = parts[2].toLowerCase();\r\n                // const selectedItemIndex = menuItems.findIndex(item => item.name.toLowerCase() === selectedItem);\r\n                // const selectedSubItemIndex = menuItems[selectedItemIndex] && menuItems[selectedItemIndex].subMenuItems.findIndex(subItem => subItem.name.toLowerCase() === subSelectedItem);\r\n\r\n                setSelected(selectedItem?.name);\r\n                if (selectedItemIndex !== -1) {\r\n                    newSubMenus[selectedItemIndex] = {};\r\n                    newSubMenus[selectedItemIndex]['isOpen'] = true;\r\n                }\r\n                if (selectedItemIndex !== -1 && selectedSubItemIndex !== -1) {\r\n                    newSubMenus[selectedItemIndex]['selectedSubMenu'] = selectedSubItemIndex;\r\n                }\r\n            }\r\n\r\n            setSubMenus(newSubMenus);\r\n        });\r\n    }, []);\r\n\r\n    const handleMenuItemClick = (name, index) => {\r\n        setSelected(name);\r\n\r\n        if (subMenus.hasOwnProperty(index)) {\r\n            const subMenusCopy = { ...subMenus };\r\n\r\n            subMenusCopy[index]['isOpen'] = !subMenus[index]['isOpen'];\r\n            subMenusCopy[index]['selectedSubMenu'] = null;\r\n            setSubMenus(subMenusCopy);\r\n        }\r\n        else {\r\n            const subMenusCopy = { ...subMenus };\r\n\r\n            for (let item in subMenus) {\r\n                subMenusCopy[item]['isOpen'] = false;\r\n                subMenusCopy[item]['selectedSubMenu'] = null;\r\n            }\r\n            setSubMenus(subMenusCopy);\r\n        }\r\n\r\n    };\r\n\r\n    const handleSubMenuItemClick = (menuItemIdx, subMenuIdx) => {\r\n        const subMenusCopy = { ...subMenus };\r\n        subMenusCopy[menuItemIdx]['selectedSubMenu'] = subMenuIdx;\r\n\r\n        setSubMenus(subMenusCopy);\r\n    };\r\n\r\n    return (\r\n        user ? <ul className='menu-list'>\r\n            {menuItems.map((ele, index) => {\r\n                const isItemSelected = selected === ele.name;\r\n                const hasSubMenus = !!ele.subMenuItems.length;\r\n                const isOpen = subMenus[index] && subMenus[index].isOpen;\r\n\r\n                const SubMenuListJSX = <div className='submenu-list'>\r\n                    <ul>\r\n                        {ele.subMenuItems.map((subMenuEle, subMenuIndex) => {\r\n                            const isSubMenuSelected = (subMenus[index] && subMenus[index].selectedSubMenu) === subMenuIndex;\r\n\r\n                            return (<Link key={subMenuIndex} to={`${ele.to}${subMenuEle.to}`} style={{ textDecoration: 'none' }} >\r\n                                <li className={`submenu-item ${isSubMenuSelected ? 'active' : ''}`} onClick={() => handleSubMenuItemClick(index, subMenuIndex)} >\r\n                                    <i className={`${subMenuEle.icon} menu-icon`} ></i>\r\n                                    <span className='menu-text' >{subMenuEle.name}</span>\r\n                                </li>\r\n                            </Link>);\r\n                        })}\r\n                    </ul>\r\n                </div>;\r\n\r\n\r\n                return ele.subMenuItems.length ?\r\n                    (<div key={index} >\r\n                        <Link to={ele.to} style={{ textDecoration: 'none' }}>\r\n                            <li className={`menu-item ${isItemSelected ? 'active' : ''}`} onClick={() => handleMenuItemClick(ele.name, index)} >\r\n                                <i className={`${ele.icon} menu-icon`} ></i>\r\n                                <span className='menu-text' >{ele.name}</span>\r\n                                {isOpen ? <i className=\"fas fa-angle-up dropdown-icon\" style={{ paddingTop: '4px' }}></i>\r\n                                    : <i className=\"fas fa-angle-down dropdown-icon\" style={{ paddingTop: '7px' }} ></i>}\r\n\r\n                            </li>\r\n                        </Link>\r\n                        <AnimatePresence>\r\n                            {(hasSubMenus && isOpen) &&\r\n                                <motion.nav\r\n                                    initial={{ opacity: 0, y: -15 }}\r\n                                    animate={{ opacity: 1, y: 0 }}\r\n                                    transition={{ duration: 0.35 }}\r\n                                    exit={{ opacity: 0, x: -30 }}\r\n                                >\r\n                                    {SubMenuListJSX}\r\n                                </motion.nav>\r\n                            }\r\n                        </AnimatePresence>\r\n                    </div>)\r\n                    :\r\n                    (<Link key={index} to={ele.to} style={{ textDecoration: 'none' }}>\r\n                        <li className={`menu-item ${isItemSelected ? 'active' : ''}`} onClick={() => handleMenuItemClick(ele.name, index)} >\r\n                            <i className={`${ele.icon} menu-icon`} ></i>\r\n                            <span className='menu-text' >{ele.name}</span>\r\n                        </li>\r\n                    </Link>);\r\n            }\r\n\r\n            )}\r\n        </ul> : <h3>Loading...</h3>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(MenuList);\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizPageSub.js",["293","294"],"import React, { useEffect, useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport QuizQuesSub from './QuizQuesSub';\r\nimport Spinner from '../../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport { getQuizSubmission } from '../../../store/actions/quizActions';\r\n\r\nconst QuizPageSub = (props) => {\r\n    const {\r\n        quiz: { currentSubmission },\r\n        getQuizSubmission,\r\n        match\r\n    } = props;\r\n    const quizSubId = match.params.id;\r\n\r\n    useEffect(() => {\r\n            getQuizSubmission(quizSubId);\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        (currentSubmission && currentSubmission.quiz.questions) ?\r\n            (<Container className='mt-3'>\r\n                <Card.Header className='quiz_header'>\r\n                    <Row >\r\n                        <Col lg={9} md={8} sm={7} xs={8} className='quiz_title_col' >\r\n                            <div  >{currentSubmission.quiz.title}</div>\r\n                        </Col>\r\n                        <Col lg={3} md={4} sm={5} xs={4} className='quiz_timer_col' >\r\n                            <span className='time_sec float-right mt-1 pr-1' >{currentSubmission.timeTaken.minutes < 10 ? `0${currentSubmission.timeTaken.minutes}` : currentSubmission.timeTaken.minutes}:{currentSubmission.timeTaken.seconds < 10 ? `0${currentSubmission.timeTaken.seconds}` : currentSubmission.timeTaken.seconds}</span>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <QuizQuesSub key={currentSubmission._id} userAns={currentSubmission.userAnswers} questions={currentSubmission.quiz.questions} quizId={currentSubmission.quiz._id} />\r\n            </Container>)\r\n            :\r\n            <Spinner />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuizSubmission })(QuizPageSub);\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\coding\\Coding.js",["295"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"./Coding.css\";\r\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\r\nimport CodeDescription from \"./CodeDescription\";\r\nimport CodingSolution from \"./CodingSolution\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport {useParams} from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestion } from \"../../store/actions/codeActions\";\r\nimport Spinner from '../layout/Spinner'\r\n\r\nconst Coding = (props) => {\r\n\r\n    const { getQuestion } = props;\r\n    const { current } = props.code\r\n    const {slug} = useParams()\r\n\r\n    useEffect(() => {\r\n        getQuestion(slug)\r\n    }, [])\r\n\r\n    const [key, setKey] = useState(\"description\");\r\n    \r\n    return (\r\n        <Fragment>\r\n        { current !== null ?\r\n        <Row className=\"coding-container\">\r\n            <Col>\r\n                <Tabs className='navTabs' activeKey={key} onSelect={(e) => setKey(e)}>\r\n                    <Tab eventKey=\"description\" title={<span><i className=\"fa fa-list-alt\" aria-hidden=\"true\"></i>Description</span>}>\r\n                        <CodeDescription current={current}/>\r\n                    </Tab>\r\n                    {/* {current.solution &&} */}\r\n                    <Tab eventKey=\"solution\" title={<span><i className=\"fa fa-flask\" aria-hidden=\"true\"></i>Solution</span>}>\r\n                        <CodingSolution current={current}/>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Col>\r\n            <Col className=\"editor-container\">\r\n                <CodeEditor/>\r\n            </Col>\r\n        </Row> : <Spinner /> }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code\r\n});\r\n\r\nexport default connect(mapStateToProps,{ getQuestion})(Coding);","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js",["296","297","298"],"import React, { useEffect, useRef } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport QuizQues from './QuizQues';\r\nimport QuizTimer from './QuizTimer';\r\nimport Spinner from '../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport { getQuiz, submitQuiz } from '../../store/actions/quizActions';\r\nimport { loadUser, setUserNull } from '../../store/actions/authActions';\r\n\r\nconst QuizPage = (props) => {\r\n    const quizQuesRef = useRef(null);\r\n\r\n    const {\r\n        quiz: { current },\r\n        auth: { user },\r\n        loadUser,\r\n        getQuiz,\r\n        match\r\n    } = props;\r\n    const slug = match.params.slug;\r\n\r\n    useEffect(() => {\r\n        getQuiz(slug);\r\n        // loadUser(false, true);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        current ?\r\n            (<Container className='mt-3'>\r\n                <Card.Header className='quiz_header'>\r\n                    <Row >\r\n                        <Col lg={9} md={8} sm={7} xs={8} className='quiz_title_col' >\r\n                            <div  >{current.title}</div>\r\n                        </Col>\r\n                        <Col lg={3} md={4} sm={5} xs={4} className='quiz_timer_col' >\r\n                            {/* <span className='time_sec float-right mt-1 pr-1' >{timer.minutes}:{timer.seconds}</span> */}\r\n                            {user && <QuizTimer endAt={user.testWillEndAt} triggerSubmit={() => quizQuesRef.current.click()} />}\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <QuizQues key={current._id} questions={current.questions} refProp={quizQuesRef} quizId={current._id} />\r\n                {/* <div className=\"text-center\" style={{ width: '200px', margin: 'auto' }}>\r\n                    <Button className=\"createquiz mb-4\" type=\"submit\"  >Submit Quiz</Button>\r\n                </div> */}\r\n            </Container>)\r\n            :\r\n            <Spinner />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuiz, submitQuiz, loadUser })(QuizPage);\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\QuizCardPage.js",["299","300","301","302","303"],"import React, { useEffect } from 'react';\r\nimport QuizCard from './QuizCard';\r\nimport Spinner from '../layout/Spinner';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getQuizzes } from '../../store/actions/quizActions';\r\n\r\nconst QuizCardPage = (props) => {\r\n    const {\r\n        auth: { user },\r\n        quiz: { quizzes, loading: quizLoading }, getQuizzes } = props;\r\n\r\n    useEffect(() => {\r\n        if (user?.role === 'faculty' || user?.role === 'admin') {\r\n            // getQuizzes(user._id);\r\n            getQuizzes();\r\n\r\n        }\r\n        else if (user?.role === 'student') {\r\n            getQuizzes();\r\n        }\r\n        return () => {\r\n\r\n        };\r\n    }, []);\r\n    // }, [user]);\r\n\r\n    if (quizzes !== null && quizzes.length === 0) {\r\n        return <h4>Currently There are No Quizzes Available</h4>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {quizzes ? quizzes.map((ele) => <QuizCard key={ele._id} quizObj={ele} />)\r\n                : <Spinner />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuizzes })(QuizCardPage);\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizPage.js",["304","305","306","307"],"import React, { useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PracticeQuizQues from './PracticeQuizQues';\r\nimport QuizTimer from '../quiz/QuizTimer';\r\nimport Spinner from '../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport { getPracticeProblems } from '../../store/actions/practiceProblemActions';\r\nimport { loadUser } from '../../store/actions/authActions';\r\n\r\nconst QuizPage = (props) => {\r\n    const {\r\n        practiceProblem: { questions },\r\n        auth: { user },\r\n        loadUser,\r\n        getPracticeProblems,\r\n        match\r\n    } = props;\r\n    const { categorySlug, topicSlug } = match.params;\r\n    console.log('params', match.params);\r\n\r\n    useEffect(() => {\r\n        getPracticeProblems(categorySlug, topicSlug);\r\n        // loadUser(false, true);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            { questions ?\r\n                (<Container className='mt-3'>\r\n                    <Card.Header className='quiz_header'>\r\n                        <Row >\r\n                            <Col lg={9} md={8} sm={7} xs={8} className='quiz_title_col' >\r\n                                <div  >{questions[0]?.topic}</div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <PracticeQuizQues key={0} questions={questions} />\r\n                </Container>)\r\n                :\r\n                <Spinner />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    practiceProblem: state.practiceProblem,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPracticeProblems, loadUser })(QuizPage);\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeProblem.js",["308"],"import React, { useEffect } from 'react';\r\nimport AptiTopicsTemplate from './AptiTopicsTemplate';\r\nimport Spinner from '../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport { getCategoryAndTopic } from '../../store/actions/practiceProblemActions';\r\n\r\n\r\nconst PracticeProblem = (props) => {\r\n    const { practiceProblem: { catAndTopic }, getCategoryAndTopic } = props;\r\n\r\n    useEffect(() => {\r\n        getCategoryAndTopic();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {catAndTopic ?\r\n                <>\r\n                    { catAndTopic.distinctCategory.map((ele, index) => <AptiTopicsTemplate\r\n                        key={index}\r\n                        title={ele}\r\n                        topics={catAndTopic.distinctTopicByCat[index]}\r\n                    />)}\r\n                </>\r\n                : <Spinner />}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    practiceProblem: state.practiceProblem\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCategoryAndTopic })(PracticeProblem);","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubmissions.js",["309","310","311","312"],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\AddTopics.js",["313"],"import React, { useState } from 'react';\r\nimport '../quiz/quiz.css';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CreateAptiQuestion from './CreateAptiQuestion';\r\nimport { connect } from 'react-redux';\r\nimport { addTopic } from '../../store/actions/practiceProblemActions';\r\n\r\nconst AddTopics = (props) => {\r\n    const { auth: { user }, addTopic } = props;\r\n\r\n    const [aptiInfo, setAptiInfo] = useState({\r\n        topic: '',\r\n        category: 'quantitative analysis'\r\n    });\r\n    const [apti, setApti] = useState([{\r\n        id: 0,\r\n        author: '',\r\n        topic: '',\r\n        category: '',\r\n        question: '',\r\n        answers: ['', '', '', ''],\r\n        correctAnswer: '',\r\n        explanation: ''\r\n    }]);\r\n\r\n    const [lastId, setLastId] = useState(0);\r\n\r\n    const handleAddQuesClick = () => {\r\n        const newQuesObj = {\r\n            id: lastId + 1,\r\n            author: aptiInfo.author,\r\n            topic: aptiInfo.topic,\r\n            category: aptiInfo.category,\r\n            question: '',\r\n            answers: ['', '', '', ''],\r\n            correctAnswer: '',\r\n            explanation: ''\r\n        };\r\n\r\n        setLastId(lastId + 1);\r\n\r\n        const newQuesArray = [...apti, newQuesObj];\r\n        setApti(newQuesArray);\r\n\r\n    };\r\n\r\n    const handleOnChangeQues = (e, index) => {\r\n        const quesArray = [...apti];\r\n        if (e.target.name === 'question' || e.target.name === 'correctAnswer' || e.target.name === 'explanation') {\r\n            quesArray[index][e.target.name] = e.target.value;\r\n            setApti(quesArray);\r\n        }\r\n        else {\r\n            let optIndex = 0;\r\n            if (e.target.name === 'optionB') {\r\n                optIndex = 1;\r\n            }\r\n            else if (e.target.name === 'optionC') {\r\n                optIndex = 2;\r\n            }\r\n            else if (e.target.name === 'optionD') {\r\n                optIndex = 3;\r\n            }\r\n            quesArray[index].answers[optIndex] = e.target.value;\r\n            setApti(quesArray);\r\n        }\r\n\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setAptiInfo({\r\n            ...aptiInfo,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleOnDelete = (eleId) => {\r\n        const newQuesArray = apti.filter((ele) => {\r\n            return ele.id !== eleId;\r\n        });\r\n        setApti(newQuesArray);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let tempApti = apti.map((ele) => {\r\n            ele.topic = aptiInfo.topic;\r\n            ele.category = aptiInfo.category;\r\n            ele.author = user._id;\r\n            return ele;\r\n        });\r\n        // addTopic(tempApti);\r\n        // {\r\n        //     aptiQuestions : []\r\n        // }\r\n        console.log('temp', tempApti);\r\n        addTopic({\r\n            aptiQuestions: tempApti\r\n        });\r\n\r\n        setAptiInfo({\r\n            topic: '',\r\n            category: 'quantitative analysis'\r\n        });\r\n\r\n        setApti([{\r\n            id: 0,\r\n            author: '',\r\n            topic: '',\r\n            category: '',\r\n            question: '',\r\n            answers: ['', '', '', ''],\r\n            correctAnswer: '',\r\n            explanation: ''\r\n        }]);\r\n    };\r\n\r\n    return (\r\n        <Container className=\"container-quiz\">\r\n            <h3 className=\"text-center  mb-2 pt-4 \">TOPIC DETAILS</h3>\r\n            <div className=\"title-border mb-4\">\r\n                <span></span>\r\n            </div>\r\n            <div className=\"createquizform pb-1\">\r\n                <Form onSubmit={onSubmit}  >\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Form.Group controlId=\"topic\" >\r\n                                <Form.Label><b>Enter Topic</b></Form.Label>\r\n                                <Form.Control className=\"quiz-inputFiled\" name=\"topic\" value={aptiInfo.topic} onChange={handleOnChange} placeholder=\"Enter Topic\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <Form.Group controlId=\"category\" >\r\n                                <Form.Label><b>Select Category</b></Form.Label>\r\n                                <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                    <Form.Control as=\"select\" className=\"quiz-inputFiled\" name='category' value={aptiInfo.category} onChange={handleOnChange}  >\r\n                                        <option className=\"optionSelect\" value='quantitative analysis' >Quantitative Analysis</option>\r\n                                        <option className=\"optionSelect\" value='logical reasoning' >Logical Reasoning</option>\r\n                                        <option className=\"optionSelect\" value='verbal ability' >Verbal Ability</option>\r\n                                        <option className=\"optionSelect\" value='other topics' >Other Topics</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                    <h3 className=\"text-center  mb-2 pt-2 \">ADD QUESTIONS</h3>\r\n                    <div className=\"title-border mb-3\">\r\n                        <span></span>\r\n                    </div>\r\n\r\n                    {/* Questions Samples start Here */}\r\n                    {apti.map((ele, index) => <CreateAptiQuestion\r\n                        key={ele.id}\r\n                        index={index}\r\n                        onDeleteFunc={() => handleOnDelete(ele.id)}\r\n                        onChangeFunc={(e) => handleOnChangeQues(e, index)}\r\n                        quesObj={ele}\r\n                    />)}\r\n                    {/* Question sample end here */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Button className=\"addquestbtn mb-2\" onClick={handleAddQuesClick}  > Add Next Question  </Button>\r\n                        </div>\r\n                        <div className=\"col-sm-6 text-center\">\r\n                            <Button className=\"createquiz mb-4\" type='submit' >Add Topic</Button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        auth: state.auth,\r\n        practiceProblem: state.practiceProblem\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, { addTopic })(AddTopics);","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\EditPracticeProblem.js",["314","315","316"],"import React, { useState, useEffect } from 'react';\r\nimport '../quiz/quiz.css';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CreateAptiQuestion from './CreateAptiQuestion';\r\nimport { connect } from 'react-redux';\r\nimport { updatePracticeProblem, getPracticeProblem } from '../../store/actions/practiceProblemActions';\r\n\r\nconst EditPracticeProblem = (props) => {\r\n    const { auth: { user },\r\n        practiceProblem: { current },\r\n        updatePracticeProblem,\r\n        getPracticeProblem,\r\n        match\r\n    } = props;\r\n    const id = match.params.id;\r\n\r\n    useEffect(() => {\r\n        getPracticeProblem(id);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (current !== null) {\r\n            let tempDeepCopy = JSON.parse(JSON.stringify(current));\r\n\r\n            setApti(tempDeepCopy);\r\n        } else {\r\n            setApti({\r\n                author: '',\r\n                topic: '',\r\n                category: 'quantitative analysis',\r\n                question: '',\r\n                answers: ['', '', '', ''],\r\n                correctAnswer: '',\r\n                explanation: ''\r\n            });\r\n        }\r\n    }, [current]);\r\n\r\n    const [apti, setApti] = useState({\r\n        author: '',\r\n        topic: '',\r\n        category: 'quantitative analysis',\r\n        question: '',\r\n        answers: ['', '', '', ''],\r\n        correctAnswer: '',\r\n        explanation: ''\r\n    });\r\n\r\n    const handleOnChangeQues = (e, index) => {\r\n        const quesObj = { ...apti };\r\n        if (e.target.name === 'question' || e.target.name === 'correctAnswer' || e.target.name === 'explanation') {\r\n            quesObj[e.target.name] = e.target.value;\r\n            setApti(quesObj);\r\n        }\r\n        else {\r\n            let optIndex = 0;\r\n            if (e.target.name === 'optionB') {\r\n                optIndex = 1;\r\n            }\r\n            else if (e.target.name === 'optionC') {\r\n                optIndex = 2;\r\n            }\r\n            else if (e.target.name === 'optionD') {\r\n                optIndex = 3;\r\n            }\r\n            quesObj.answers[optIndex] = e.target.value;\r\n            setApti(quesObj);\r\n        }\r\n\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setApti({\r\n            ...apti,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // addTopic(tempApti);\r\n        // {\r\n        //     aptiQuestions : []\r\n        // }\r\n        console.log('temp', apti);\r\n        updatePracticeProblem(apti);\r\n\r\n        // setApti([{\r\n        //     id: 0,\r\n        //     author: aptiInfo.author,\r\n        //     topic: aptiInfo.topic,\r\n        //     category: aptiInfo.category,\r\n        //     question: '',\r\n        //     answers: ['', '', '', ''],\r\n        //     correctAnswer: '',\r\n        //     explanation: ''\r\n        // }]);\r\n    };\r\n\r\n    return (\r\n        <Container className=\"container-quiz\">\r\n            <h3 className=\"text-center  mb-2 pt-4 \">TOPIC DETAILS</h3>\r\n            <div className=\"title-border mb-4\">\r\n                <span></span>\r\n            </div>\r\n            <div className=\"createquizform pb-1\">\r\n                <Form onSubmit={onSubmit}  >\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Form.Group controlId=\"topic\" >\r\n                                <Form.Label><b>Enter Topic</b></Form.Label>\r\n                                <Form.Control className=\"quiz-inputFiled\" name=\"topic\" value={apti.topic} onChange={handleOnChange} placeholder=\"Enter Topic\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <Form.Group controlId=\"category\" >\r\n                                <Form.Label><b>Select Category</b></Form.Label>\r\n                                <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                    <Form.Control as=\"select\" className=\"quiz-inputFiled\" name='category' value={apti.category} onChange={handleOnChange}  >\r\n                                        <option className=\"optionSelect\" value='quantitative analysis'  >Quantitative Analysis</option>\r\n                                        <option className=\"optionSelect\" value='logical reasoning'  >Logical Reasoning</option>\r\n                                        <option className=\"optionSelect\" value='verbal ability' >Verbal Ability</option>\r\n                                        <option className=\"optionSelect\" value='other topics' >Other Topics</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                    <h3 className=\"text-center  mb-2 pt-2 \">ADD QUESTIONS</h3>\r\n                    <div className=\"title-border mb-3\">\r\n                        <span></span>\r\n                    </div>\r\n\r\n                    {/* Questions Samples start Here */}\r\n                    <CreateAptiQuestion\r\n                        key={apti._id}\r\n                        index={0}\r\n                        onChangeFunc={(e) => handleOnChangeQues(e, 0)}\r\n                        quesObj={apti} />\r\n                    {/* Question sample end here */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-4 text-center\" style={{ margin: 'auto' }}>\r\n                            <Button className=\"createquiz mb-4\" type='submit' >Update</Button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        auth: state.auth,\r\n        practiceProblem: state.practiceProblem\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, { updatePracticeProblem, getPracticeProblem })(EditPracticeProblem);","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\EditQuiz.js",["317","318"],"import React, { useState, useEffect } from 'react';\r\nimport './quiz.css';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport QuizQuestion from './CreateQuizQuestion';\r\nimport Spinner from '../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getQuiz,\r\n    updateQuiz,\r\n    deleteQuizQuestion,\r\n    setCurrentQuiz\r\n} from '../../store/actions/quizActions';\r\n\r\nconst EditQuiz = (props) => {\r\n    const { quiz: { current },\r\n        getQuiz,\r\n        updateQuiz,\r\n        deleteQuizQuestion,\r\n        setCurrentQuiz,\r\n        match } = props;\r\n\r\n    const slug = match.params.slug;\r\n    useEffect(() => {\r\n        getQuiz(slug);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (current !== null) {\r\n            // if User updates Quiz title then slug also updates\r\n            // Hence updating slug in the url\r\n            props.history.replace({ pathname: `/editQuiz/${current.slug}` });\r\n\r\n            let tempDeepCopy = JSON.parse(JSON.stringify(current));\r\n            setQuizLocal(tempDeepCopy);\r\n        }\r\n        else {\r\n            setQuizLocal({\r\n                title: '',\r\n                category: '',\r\n                topic: '',\r\n                duration: '',\r\n                questions: [{\r\n                    id: 0,\r\n                    question: '',\r\n                    answers: ['', '', '', ''],\r\n                    correctAnswer: ''\r\n                }]\r\n            });\r\n        }\r\n    }, [current]);\r\n\r\n    // let tempDeepCopy = JSON.parse(JSON.stringify(current));\r\n    const [quizLocal, setQuizLocal] = useState({\r\n        title: '',\r\n        category: '',\r\n        topic: '',\r\n        duration: '',\r\n        questions: [{\r\n            id: 0,\r\n            question: '',\r\n            answers: ['', '', '', ''],\r\n            correctAnswer: ''\r\n        }]\r\n    });\r\n\r\n    const [lastId, setLastId] = useState(0);\r\n\r\n    const handleAddQuesClick = () => {\r\n        const newQuesObj = {\r\n            id: lastId + 1,\r\n            question: '',\r\n            answers: ['', '', '', ''],\r\n            correctAnswer: ''\r\n        };\r\n\r\n        setLastId(lastId + 1);\r\n\r\n        const newQuesArray = [...quizLocal.questions, newQuesObj];\r\n        setQuizLocal({\r\n            ...quizLocal,\r\n            questions: newQuesArray\r\n        });\r\n\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setQuizLocal({\r\n            ...quizLocal,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleOnChangeQues = (e, index) => {\r\n        const quesArray = [...quizLocal.questions];\r\n        if (e.target.name === 'question' || e.target.name === 'correctAnswer') {\r\n            quesArray[index][e.target.name] = e.target.value;\r\n            setQuizLocal({\r\n                ...quizLocal,\r\n                questions: quesArray\r\n            });\r\n        }\r\n        else {\r\n            let optIndex = 0;\r\n            if (e.target.name === 'optionB') {\r\n                optIndex = 1;\r\n            }\r\n            else if (e.target.name === 'optionC') {\r\n                optIndex = 2;\r\n            }\r\n            else if (e.target.name === 'optionD') {\r\n                optIndex = 3;\r\n            }\r\n            quesArray[index].answers[optIndex] = e.target.value;\r\n            setQuizLocal({\r\n                ...quizLocal,\r\n                questions: quesArray\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    const handleOnDelete = (eleId) => {\r\n        const newQuesArray = quizLocal.questions.filter((ele) => {\r\n            let tempId = ele.id || ele._id;\r\n            return eleId !== tempId;\r\n        });\r\n\r\n        if (isNaN(eleId)) {\r\n            deleteQuizQuestion(eleId);\r\n        }\r\n\r\n        setQuizLocal({\r\n            ...quizLocal,\r\n            questions: newQuesArray\r\n        });\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        updateQuiz(quizLocal);\r\n        setCurrentQuiz(quizLocal);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {current ? (<Container className=\"container-quiz\">\r\n                <h3 className=\"text-center  mb-2 pt-4 \">QUIZ DETAILS</h3>\r\n                <div className=\"title-border mb-4\">\r\n                    <span></span>\r\n                </div>\r\n                <div className=\"createquizform pb-1\">\r\n                    <Form onSubmit={onSubmit} >\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"quiztitle\" >\r\n                                    <Form.Label><b>Quiz title</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled\" name=\"title\" value={quizLocal.title} onChange={handleOnChange} type=\"\" placeholder=\"Enter Title\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"category\" >\r\n                                    <Form.Label><b>Select Category</b></Form.Label>\r\n                                    <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                        <Form.Control as=\"select\" className=\"quiz-inputFiled\" name='category' value={quizLocal.category} onChange={handleOnChange} >\r\n                                            <option className=\"optionSelect\" value='quantitative analysis' >Quantitative Analysis</option>\r\n                                            <option className=\"optionSelect\" value='logical reasoning' >Logical Reasoning</option>\r\n                                            <option className=\"optionSelect\" value='verbal ability' >Verbal Ability</option>\r\n                                            <option className=\"optionSelect\" value='other topics' >Others</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6 responsivelabel\">\r\n                                <Form.Group controlId=\"topics\" >\r\n                                    <Form.Label><b>Quiz topics</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" name=\"topic\" value={quizLocal.topic} onChange={handleOnChange} type=\"\" placeholder=\"Example: Probability, Trains...\" />\r\n                                </Form.Group>\r\n\r\n                            </div>\r\n                            <div className=\"col-sm-6 responsivelabel\">\r\n                                <Form.Group controlId=\"duration\" >\r\n                                    <Form.Label><b >Duration</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled quizDuration \" name=\"duration\" value={quizLocal.duration} onChange={handleOnChange} type=\"number\" placeholder=\"Minutes only\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <h3 className=\"text-center  mb-2 pt-2 \">ADD QUESTIONS</h3>\r\n                        <div className=\"title-border mb-3\">\r\n                            <span></span>\r\n                        </div>\r\n\r\n\r\n                        {quizLocal.questions.map((ele, index) => <QuizQuestion\r\n                            key={ele._id || ele.id}\r\n                            index={index}\r\n                            onDeleteFunc={() => handleOnDelete(ele.id || ele._id)}\r\n                            onChangeFunc={(e) => handleOnChangeQues(e, index)}\r\n                            quesObj={ele}\r\n                        />\r\n                        )}\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <Button className=\"addquestbtn mb-2\" onClick={handleAddQuesClick} > Add Next Question  </Button>\r\n                            </div>\r\n                            <div className=\"col-sm-6 text-center\">\r\n                                <Button className=\"createquiz mb-4\" type=\"submit\" > Update Quiz</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </Container>) : <Spinner />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        quiz: state.quiz\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    getQuiz,\r\n    updateQuiz,\r\n    deleteQuizQuestion,\r\n    setCurrentQuiz\r\n})(EditQuiz);","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\code\\CodeQuestions.js",["319"],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js",["320","321"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./createCode.css\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    addQuestion,\r\n    getQuestion,\r\n    updateQuestion,\r\n    clearCurrent\r\n} from \"../../store/actions/codeActions\";\r\n\r\nconst CreateCodeQuestion = (props) => {\r\n    const { addQuestion, getQuestion, updateQuestion, clearCurrent } = props;\r\n    const { current } = props.code;\r\n    const [codeQuestion, setCodeQuestion] = useState({\r\n        title: \"\",\r\n        difficulty: \"10\",\r\n        description: \"\",\r\n        testcases: \"\",\r\n        sampleInputs: [],\r\n    });\r\n    const [lastId, setLastId] = useState(0);\r\n    const [sampleArray, setSampleArray] = useState([\r\n        {\r\n            id: 0,\r\n            sampleInput: \"\",\r\n            sampleOutput: \"\",\r\n        },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (props.match.path.includes(\"editCodeQuestion\")) {\r\n            console.log(props.match.params.slug);\r\n            getQuestion(props.match.params.slug);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (current !== null && props.match.path.includes(\"editCodeQuestion\")) {\r\n            props.history.replace({ pathname: `/editCodeQuestion/${current.slug}` });\r\n            setCodeQuestion(current);\r\n            if (current.sampleInputs) {\r\n                const newArray = current.sampleInputs.map(curr => ({ ...curr }));\r\n                setSampleArray(newArray);\r\n                setLastId(current.sampleInputs.length - 1);\r\n            }\r\n        } else {\r\n            clearCurrent();\r\n            setCodeQuestion({\r\n                title: \"\",\r\n                difficulty: \"10\",\r\n                description: \"\",\r\n                testcases: \"\",\r\n                sampleInputs: [],\r\n            });\r\n        }\r\n    }, [current]);\r\n\r\n    const handleAddSampleClick = () => {\r\n        const newSampleObj = {\r\n            id: lastId + 1,\r\n            sampleInput: \"\",\r\n            sampleOutput: \"\",\r\n        };\r\n        setLastId(lastId + 1);\r\n\r\n        const newSampleArray = [...sampleArray, newSampleObj];\r\n        setSampleArray(newSampleArray);\r\n    };\r\n\r\n    const handleOnSampleChange = (e, index) => {\r\n        const newSampleArray = [...sampleArray];\r\n        newSampleArray[index][e.target.name] = e.target.value;\r\n\r\n        setSampleArray(newSampleArray);\r\n    };\r\n\r\n    const handleDeleteSample = (e, eleId) => {\r\n        const newSampleArray = sampleArray.filter((ele) => {\r\n            return ele.id !== eleId;\r\n        });\r\n        setSampleArray(newSampleArray);\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n\r\n        setCodeQuestion({\r\n            ...codeQuestion,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            codeQuestion.title === \"\" ||\r\n            codeQuestion.description === \"\" ||\r\n            codeQuestion.testcases === \"\"\r\n        ) {\r\n            console.log(\"Please enter all fields\", \"danger\");\r\n        } else {\r\n            let temp = JSON.parse(JSON.stringify(codeQuestion));\r\n            temp.sampleInputs = sampleArray;\r\n            setCodeQuestion({ ...codeQuestion, sampleInputs: sampleArray });\r\n            // console.log(codeQuestion);\r\n            console.log(temp);\r\n            current !== null\r\n                ? updateQuestion(temp)\r\n                : addQuestion(temp);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className=\"container-createCodeQuest\">\r\n            <h3 className=\"text-center mb-2 pt-4 \"> Create Coding Question</h3>\r\n            <div className=\"title-border mb-4\">\r\n                <span></span>\r\n            </div>\r\n            <div className=\"codequestForm \">\r\n                <Form>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Form.Group controlId=\"quiztitle\">\r\n                                <Form.Label>\r\n                                    <b>Title</b>\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    className=\"createC-inputFiled\"\r\n                                    type=\"text\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Enter Title\"\r\n                                    value={codeQuestion.title}\r\n                                    onChange={handleOnChange}\r\n                                />\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Form.Group controlId=\"quiztitle\">\r\n                                <Form.Label>\r\n                                    <b>Description</b>\r\n                                </Form.Label>\r\n                                <TextareaAutosize\r\n                                    className=\"createC-inputFiled questiontextarea\"\r\n                                    placeholder=\"Provide Description....\"\r\n                                    name=\"description\"\r\n                                    value={codeQuestion.description}\r\n                                    onChange={handleOnChange}\r\n                                ></TextareaAutosize>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n\r\n                    <h3 className=\"text-center  mb-2 pt-1 \">Add Samples</h3>\r\n                    <div className=\"title-border mb-4\">\r\n                        <span></span>\r\n                    </div>\r\n                    {/* Sampless starts from below */}\r\n                    {sampleArray.map((ele, index) => {\r\n                        return (\r\n                            <div className=\"\" key={ele.id}>\r\n                                <div className=\"row \">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <Form.Group controlId=\"quiztitle\">\r\n                                            <Form.Label>\r\n                                                <b>Sample Input</b>\r\n                                            </Form.Label>\r\n                                            <TextareaAutosize\r\n                                                className=\"createC-inputFiled questiontextarea\"\r\n                                                placeholder=\"\"\r\n                                                name=\"sampleInput\"\r\n                                                value={ele.sampleInput}\r\n                                                onChange={(e) =>\r\n                                                    handleOnSampleChange(\r\n                                                        e,\r\n                                                        index\r\n                                                    )\r\n                                                }\r\n                                            ></TextareaAutosize>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <Form.Group controlId=\"quiztitle\">\r\n                                            <Form.Label>\r\n                                                <b>Sample Output</b>\r\n                                            </Form.Label>\r\n                                            <TextareaAutosize\r\n                                                className=\"createC-inputFiled questiontextarea\"\r\n                                                placeholder=\"\"\r\n                                                name=\"sampleOutput\"\r\n                                                value={ele.sampleOutput}\r\n                                                onChange={(e) =>\r\n                                                    handleOnSampleChange(\r\n                                                        e,\r\n                                                        index\r\n                                                    )\r\n                                                }\r\n                                            ></TextareaAutosize>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row \">\r\n                                    <div className=\"col-sm-12 \">\r\n                                        <Button\r\n                                            className=\"delsamplebtn mb-2\"\r\n                                            onClick={(e) =>\r\n                                                handleDeleteSample(e, ele.id)\r\n                                            }\r\n                                        >\r\n                                            {\" \"}\r\n                                            Delete{\" \"}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n                    {/* samples end here */}\r\n                    <div className=\" text-center\">\r\n                        <Button\r\n                            className=\" addsample mt-3\"\r\n                            onClick={handleAddSampleClick}\r\n                        >\r\n                            {\" \"}\r\n                            Add More Samples{\" \"}\r\n                        </Button>\r\n                    </div>\r\n                    <hr></hr>\r\n\r\n                    <h3 className=\"text-center  mb-2 pt-1 \">Add TestCases</h3>\r\n                    <div className=\"title-border mb-4\">\r\n                        <span></span>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Form.Group controlId=\"quiztitle\">\r\n                                <TextareaAutosize\r\n                                    className=\"createC-inputFiled questiontextarea \"\r\n                                    minRows=\"2\"\r\n                                    placeholder=\"\"\r\n                                    name=\"testcases\"\r\n                                    value={codeQuestion.testcases}\r\n                                    onChange={handleOnChange}\r\n                                ></TextareaAutosize>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <hr className=\"mt-2\"></hr>\r\n\r\n                    <div className=\"row pt-2 pb-3\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Form.Label>\r\n                                <b className=\"mr-2\">Solution </b>\r\n                            </Form.Label>\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"Sfile \"\r\n                                accept=\"\"\r\n                            ></input>\r\n                            <label className=\"filelabel \">\r\n                                Upload Solution\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-sm-2 pt-1 difflabel\">\r\n                            <Form.Label>\r\n                                <b className=\"\"> Set Difficulty </b>\r\n                            </Form.Label>\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Form.Group controlId=\"SelectDifficulty\">\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"difficulty\"\r\n                                    className=\"createC-inputFiled diffdrop \"\r\n                                    value={codeQuestion.difficulty}\r\n                                    onChange={handleOnChange}\r\n                                >\r\n                                    <option\r\n                                        value={\"10\"}\r\n                                        className=\"optionSelect\"\r\n                                    >\r\n                                        Easy\r\n                                    </option>\r\n                                    <option\r\n                                        value={\"20\"}\r\n                                        className=\"optionSelect\"\r\n                                    >\r\n                                        Medium\r\n                                    </option>\r\n                                    <option\r\n                                        value={\"30\"}\r\n                                        className=\"optionSelect\"\r\n                                    >\r\n                                        Hard\r\n                                    </option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\" text-center\">\r\n                        <Button\r\n                            className=\"createquestbtn mb-4\"\r\n                            onClick={handleOnSubmit}\r\n                        >\r\n                            {current !== null ? ' Edit Question ' : ' Create Question '}\r\n\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    addQuestion,\r\n    getQuestion,\r\n    updateQuestion,\r\n    clearCurrent\r\n})(CreateCodeQuestion);\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js",["322"],"\r\nexport const admin = [\r\n    { name: 'Dashboard', to: '/', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'My Profile', to: '/me', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'Create a quiz', to: '/createQuiz', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Coding Questions', to: '/codeQuestions', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Create code question', to: '/createCodeQuestion', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'See all quizzes', to: '/quizzes', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Practice Problems', to: '/practiceProblems', icon: 'fa fa-pie-chart', subMenuItems: [] },\r\n];\r\n\r\n\r\nexport const faculty = [\r\n    { name: 'Dashboard', to: '/', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'My Profile', to: '/me', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'Create a quiz', to: '/createQuiz', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Coding Questions', to: '/codeQuestions', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Create code question', to: '/createCodeQuestion', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'See all quizzes', to: '/quizzes', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Practice Problems', to: '/practiceProblems', icon: 'fa fa-pie-chart', subMenuItems: [] }\r\n];\r\n\r\n\r\nexport const student = [\r\n    { name: 'Dashboard', to: '/', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'My Profile', to: '/me', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'Coding Questions', to: '/codeQuestions', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'See all quizzes', to: '/quizzes', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Quiz Submissions', to: '/quizSubmissions', icon: 'fa fa-pie-chart', subMenuItems: [] },\r\n    { name: 'Practice Problems', to: '/practiceProblems', icon: 'fa fa-pie-chart', subMenuItems: [] },\r\n];\r\n\r\nexport default [\r\n    { name: 'Dashboard', to: '/', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'My Profile', to: '/me', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'Create a quiz', to: '/createQuiz', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Coding', to: '/code', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Coding Questions', to: '/codeQuestions', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Create a code question', to: '/createCodeQuestion', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'See all quizzes', to: '/quizzes', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Start a quiz', to: '/quiz', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Quiz Submissions', to: '/quizSubmissions', icon: 'fa fa-pie-chart', subMenuItems: [] },\r\n    { name: 'Practice Problems', to: '/practiceProblems', icon: 'fa fa-pie-chart', subMenuItems: [] },\r\n];\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\actions\\quizActions.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizQuesSub.js",["323","324"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport QuizOptionSub from './QuizOptionSub';\r\nimport '../quiz.css';\r\nimport { connect } from 'react-redux';\r\nimport { submitQuiz } from '../../../store/actions/quizActions';\r\n\r\nconst QuizQues = (props) => {\r\n    const { userAns } = props;\r\n\r\n    const [userAnswers, setUserAnswers] = useState(userAns);\r\n\r\n    return (\r\n        <>\r\n            { props.questions.map((ele, index) => (\r\n                userAnswers ? (\r\n                    <Accordion key={index} className='my-2'>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    {`${index + 1}.`} {ele.question}\r\n                                </Card.Title>\r\n                                {ele.answers.map((ansEle, ansIdx) => <QuizOptionSub\r\n                                    key={ansIdx}\r\n                                    isCorrect={ansEle === ele.correctAnswer}\r\n                                    isClicked={ansEle === userAnswers[index].selectedAnswer}\r\n                                    text={ansEle} />)}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Accordion>) :\r\n                    <h3 key={index}>Loading...</h3>)\r\n            )}\r\n            {/* <div className=\"text-center\" onClick={handleOnClick} style={{ width: '200px', margin: 'auto' }}>\r\n                <Button className=\"createquiz mb-4\"  >Submit Quiz</Button>\r\n            </div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitQuiz })(QuizQues);","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js",["325"],"import React, { useState, useRef } from 'react';\r\n// import './quiz.css';\r\nimport { Button, Form, Alert, Row, Accordion } from 'react-bootstrap';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\n\r\nfunction QuizQuestion(props) {\r\n    const [toggle, setToggle] = useState(false);\r\n    const inpRef = useRef(null);\r\n\r\n    const handleOnFocus = () => {\r\n        if (!toggle) {\r\n            inpRef.current.click();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n\r\n            <Accordion>\r\n                {/* <Accordion.Toggle as={Row} eventKey=\"0\" style={{ cursor: 'pointer', backgroundColor: 'rgb(164, 166, 179)'}}> */}\r\n                <div className=\"row \">\r\n                    <div className=\"col-12\">\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\" >\r\n                            <Form.Label> <b>Question {props.index + 1}</b></Form.Label>\r\n                            <Accordion.Toggle as={Alert.Link}\r\n                                ref={inpRef}\r\n                                onClick={() => setToggle(!toggle)}\r\n                                eventKey=\"0\"\r\n                                style={{ float: 'right', paddingRight: '20px', color: \"#775ecf\" }}\r\n                            >\r\n                                {toggle ? 'Collapse' : 'Expand'}\r\n                            </Accordion.Toggle>\r\n                            <TextareaAutosize\r\n                                className=\"quiz-inputFiled questiontextarea\"\r\n                                name=\"question\"\r\n                                onFocus={handleOnFocus}\r\n                                onChange={props.onChangeFunc}\r\n                                value={props.quesObj.question}\r\n                                placeholder=\"Type question here..\">\r\n\r\n                            </TextareaAutosize>\r\n                        </Form.Group>\r\n                    </div>\r\n                </div>\r\n                {/* </Accordion.Toggle> */}\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionA-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option A</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled\" onChange={props.onChangeFunc} value={props.quesObj.answers[0]} name=\"optionA\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionB-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option B</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[1]} name=\"optionB\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionC-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option C</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[2]} name=\"optionC\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionD-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option D</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[3]} name=\"optionD\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`correctOption-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Correct option</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.correctAnswer} name=\"correctAnswer\" placeholder=\"Enter answer/text\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Button className=\"deletebtn\" onClick={props.onDeleteFunc} >Delete question</Button>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n            <hr className=\"mt-3 \"></hr>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default QuizQuestion;","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js",["326"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Button from 'react-bootstrap/Button';\r\nimport QuizOption from './QuizOption';\r\nimport './quiz.css';\r\nimport { connect } from 'react-redux';\r\nimport { submitQuiz } from '../../store/actions/quizActions';\r\n\r\nconst QuizQues = (props) => {\r\n    let history = useHistory();\r\n    const { submitQuiz } = props;\r\n\r\n    let tempUserAnswers;\r\n    useEffect(() => {\r\n        tempUserAnswers = props.questions.map((ele) => {\r\n            return {\r\n                questionId: ele._id,\r\n                selectedAnswer: ''\r\n            };\r\n        });\r\n        setUserAnswers(tempUserAnswers);\r\n    }, [tempUserAnswers]);\r\n\r\n    const [userAnswers, setUserAnswers] = useState(null);\r\n\r\n    const handleOptClick = (index, ans) => {\r\n        console.log('clcic', index);\r\n        let tempArr = [...userAnswers];\r\n        tempArr[index] = { ...tempArr[index], selectedAnswer: ans };\r\n        setUserAnswers(tempArr);\r\n    };\r\n\r\n    const handleOnClick = () => {\r\n\r\n        console.log('Submitting');\r\n        submitQuiz(props.quizId, { userAnswers: userAnswers });\r\n        tempUserAnswers = props.questions.map((ele) => {\r\n            return {\r\n                questionId: ele._id,\r\n                selectedAnswer: ''\r\n            };\r\n        });\r\n        setUserAnswers(tempUserAnswers);\r\n        window.alert('Quiz Submitted successfully!. Redirectng to /quizzes after 2 sec');\r\n        setTimeout(() => {\r\n            history.push('/quizzes');\r\n        }, 2000);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            { props.questions.map((ele, index) => (\r\n                userAnswers ? (\r\n                    <Accordion key={index} className='my-2'>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    {`${index + 1}.`} {ele.question}\r\n                                </Card.Title>\r\n                                {ele.answers.map((ansEle, ansIdx) => <QuizOption\r\n                                    key={ansIdx}\r\n                                    onClickFunc={() => handleOptClick(index, ansEle)}\r\n                                    isClicked={ansEle === userAnswers[index].selectedAnswer}\r\n                                    text={ansEle} />)}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Accordion>) :\r\n                    <h3 key={index}>Loading...</h3>)\r\n            )}\r\n            <div className=\"text-center\" style={{ width: '200px', margin: 'auto' }}>\r\n                <Button className=\"createquiz mb-4\" ref={props.refProp} onClick={handleOnClick}  >Submit Quiz</Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitQuiz })(QuizQues);","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js",["327"],"import React, { Fragment, useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/eclipse.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/blackboard.css\";\r\nimport \"codemirror/theme/base16-light.css\";\r\nimport \"codemirror/theme/ayu-mirage.css\";\r\nimport \"codemirror/addon/edit/matchbrackets\";\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport \"codemirror/addon/scroll/simplescrollbars.css\";\r\nimport \"codemirror/addon/scroll/simplescrollbars\";\r\nimport \"codemirror/mode/clike/clike\";\r\nimport \"codemirror/mode/python/python\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    runCode,\r\n    submitCode,\r\n    resetCode,\r\n} from \"../../store/actions/codeActions\";\r\n\r\n// require(\"codemirror/addon/scroll/simplescrollbars.js\");\r\n\r\nconst CodeEditor = (props) => {\r\n    const { runCode, submitCode, resetCode } = props;\r\n\r\n    const [editorSelect, setEditorSelect] = useState({\r\n        lang: \"text/x-csrc\",\r\n        theme: \"material\",\r\n        mime: \"text/x-csrc\",\r\n    });\r\n    const [code, setCode] = useState(\"\");\r\n    const handleOnChange = (e) => {\r\n        let selectedMime = e.target.selectedOptions[0].getAttribute(\r\n            \"data-mime\"\r\n        );\r\n        setEditorSelect({\r\n            ...editorSelect,\r\n            [e.target.name]: e.target.value,\r\n            mime: selectedMime,\r\n        });\r\n    };\r\n    let options = {\r\n        lineNumbers: true,\r\n        mode: editorSelect.lang,\r\n        theme: editorSelect.theme,\r\n        mime: editorSelect.mime,\r\n        styleActiveLine: true,\r\n        lineWrapping: true,\r\n        matchBrackets: true,\r\n        autoCloseBrackets: true,\r\n        scrollbarStyle: \"overlay\",\r\n    };\r\n\r\n    // const handleOnBeforeChangeCode = (editor, data, value) => {\r\n    //     setCode(value)\r\n\r\n    // }\r\n\r\n    const handleOnChangeCode = (editor, data, newCode) => {\r\n        setCode(newCode);\r\n    };\r\n\r\n    const handleOnClick = (e) => {\r\n        if (e.target.value === \"resetCode\") {\r\n            setCode(\"\");\r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <div className=\"head\">\r\n                <Form inline className=\"editor-option-form\">\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"lang\"\r\n                        className=\"mr-sm-2 editor-select\"\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        <option value=\"text/x-csrc\" data-mime=\"text/x-csrc\">\r\n                            C\r\n                        </option>\r\n                        <option value=\"text/x-c++src\" data-mime=\"text/x-c++src\">\r\n                            C++\r\n                        </option>\r\n                        <option value=\"text/x-java\" data-mime=\"text/x-java\">\r\n                            Java\r\n                        </option>\r\n                        <option value=\"text/x-python\" data-mime=\"text/x-python\">\r\n                            Python\r\n                        </option>\r\n                    </Form.Control>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"theme\"\r\n                        className=\"mr-sm-2 editor-select\"\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        <option value=\"material\">Material</option>\r\n                        <option value=\"ayu-mirage\">Ayu Mirage</option>\r\n                        <option value=\"base16-light\">light</option>\r\n                        <option value=\"blackboard\">Blackboard</option>\r\n                        <option value=\"eclipse\">Eclipse</option>\r\n                    </Form.Control>\r\n                </Form>\r\n            </div>\r\n            <CodeMirror\r\n                value={code}\r\n                options={options}\r\n                autoFocus={true}\r\n                onBeforeChange={handleOnChangeCode}\r\n                onChange={handleOnChangeCode}\r\n            />\r\n            <div className=\"editor-controls\">\r\n                <div>\r\n                    <Button\r\n                        className=\"button reset-code-btn\"\r\n                        value=\"resetCode\"\r\n                        onClick={handleOnClick}\r\n                    >\r\n                        <i className=\"fa fa-undo\" aria-hidden=\"true\"></i>\r\n                        Reset Code\r\n                    </Button>\r\n                </div>\r\n                <div className=\"editor-actions\">\r\n                    <Button className=\"button run-code-btn\" onClick={() => runCode(code)}>\r\n                        <i className=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                        <span>Run Code</span>\r\n                    </Button>\r\n                    <Button className=\"button submit-code-btn\" onClick={() => submitCode(code)}>Submit</Button>\r\n                </div>\r\n            </div>\r\n            <div className=\"console-container\">\r\n                <pre>\r\n                    <Alert variant=\"success\">Run Code Result: Success!</Alert>\r\n                </pre>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code,\r\n});\r\n\r\nexport default connect(mapStateToProps, { runCode, submitCode, resetCode })(\r\n    CodeEditor\r\n);\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\code\\paginate.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\QuizTimer.js",["328","329","330"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst QuizTimer = (props) => {\r\n\r\n    let durInSec = Math.round((new Date(props.endAt).getTime() - new Date().getTime()) / 1000);\r\n    let durMin = Math.floor(durInSec / 60);\r\n    let durSec = durInSec % 60;\r\n\r\n    const [countdownDate, setCountdownDate] = useState(new Date(props.endAt).getTime());\r\n    const [timer, setTimer] = useState({\r\n        minutes: durMin,\r\n        seconds: durSec\r\n    });\r\n\r\n    let myInterval;\r\n    useEffect(() => {\r\n        myInterval = setInterval(() => setNewTime(), 1000);\r\n\r\n        return () => clearInterval(myInterval);\r\n    }, [timer]);\r\n\r\n    const setNewTime = () => {\r\n        if (timer.seconds <= 0 && timer.minutes <= 0) {\r\n            if(timer.seconds > -6 && timer.minutes > -2){\r\n                props.triggerSubmit();\r\n            }\r\n            return clearInterval(myInterval);\r\n        }\r\n        else if (countdownDate) {\r\n            const currentTime = new Date().getTime();\r\n\r\n            const distanceToDate = countdownDate - currentTime;\r\n\r\n            let minutes = Math.floor(\r\n                (distanceToDate % (1000 * 60 * 60)) / (1000 * 60),\r\n            );\r\n            let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000);\r\n            setTimer({ minutes, seconds });\r\n        }\r\n    };\r\n\r\n    return (\r\n        (timer.minutes <= 0 && timer.seconds <= 0) ?\r\n            (<span className='time_sec float-right mt-1 pr-1' >Time's Up!</span>)\r\n            :\r\n        (<span className='time_sec float-right mt-1 pr-1' >{timer.minutes < 10 ? `0${timer.minutes}` : timer.minutes}:{timer.seconds < 10 ? `0${timer.seconds}` : timer.seconds}</span>)\r\n    );\r\n};\r\n\r\nexport default QuizTimer;\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\actions\\codeActions.js",["331","332","333","334"],"import {\r\n    GET_CODE_QUESTIONS,\r\n    GET_CODE_QUESTION,\r\n    ADD_CODE_QUESTION,\r\n    DELETE_CODE_QUESTION,\r\n    UPDATE_CODE_QUESTION,\r\n    CODE_QUESTION_ERROR,\r\n    FILTER_CODE_QUESTIONS,\r\n    CLEAR_FILTER,\r\n    CLEAR_CURRENT_CODE_QUESTION,\r\n    RUN_CODE,\r\n    SUBMIT_CODE,\r\n    RESET_CODE,\r\n    CODE_LOADING\r\n} from \"../actions/actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const getQuestions = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CODE_LOADING });\r\n        const res = await axios.get(\"/api/v1/questions\");\r\n        dispatch({\r\n            type: GET_CODE_QUESTIONS,\r\n            payload: res.data.data.questions\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: CODE_QUESTION_ERROR,\r\n            payload: err.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getQuestion = (slug) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`/api/v1/questions/${slug}`);\r\n        dispatch({\r\n            type: GET_CODE_QUESTION,\r\n            payload: res.data.data.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: CODE_QUESTION_ERROR,\r\n            payload: err.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const addQuestion = (question) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    try {\r\n        const res = await axios.post(`/api/v1/questions`, question, config);\r\n        console.log(res.data);\r\n        dispatch({\r\n            type: ADD_CODE_QUESTION,\r\n            payload: res.data.data.data\r\n        });\r\n    } catch (err) {\r\n        console.log(err.response);\r\n        dispatch({\r\n            type: CODE_QUESTION_ERROR,\r\n            payload: err.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateQuestion = (question) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    try {\r\n        const res = await axios.patch(`/api/v1/questions/${question._id}`, question, config);\r\n        console.log('res', res);\r\n        dispatch({\r\n            type: UPDATE_CODE_QUESTION,\r\n            payload: res.data.data.data\r\n        });\r\n    } catch (err) {\r\n        console.log('res', err);\r\n        dispatch({\r\n            type: CODE_QUESTION_ERROR,\r\n            payload: err.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteQuestion = (id) => async (dispatch) => {\r\n    try {\r\n        await axios.delete(`/api/v1/questions/${id}`);\r\n        dispatch({\r\n            type: DELETE_CODE_QUESTION,\r\n            payload: id\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: CODE_QUESTION_ERROR,\r\n            payload: err.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const runCode = (code) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    try {\r\n        // const res = await axios.patch(`/api/v1/questions/`,code, config);\r\n        // dispatch({\r\n        //     type: RUN_CODE,\r\n        //     payload : res.data.data.data\r\n        // });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: CODE_QUESTION_ERROR,\r\n            payload: err.response.data.message,\r\n        });\r\n    }\r\n};\r\nexport const submitCode = (code) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    try {\r\n        // const res = await axios.patch(`/api/v1/questions/`,code, config);\r\n        // dispatch({\r\n        //     type: SUBMIT_CODE,\r\n        //     payload : res.data.data.data\r\n        // });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: CODE_QUESTION_ERROR,\r\n            payload: err.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const resetCode = () => ({ type: RESET_CODE });\r\n\r\nexport const clearCurrent = () => ({ type: CLEAR_CURRENT_CODE_QUESTION });\r\n\r\nexport const filterQuestions = questions => async dispatch => {\r\n    dispatch({ type: FILTER_CODE_QUESTIONS, payload: questions });\r\n};\r\n\r\nexport const clearFilter = () => ({ type: CLEAR_FILTER });","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\code\\Pagination.js",["335","336"],"import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = (props) => {\r\n    const { itemCounts, pageSize, currentPage, onPageChange } = props;\r\n    const pageCounts = Math.ceil(itemCounts / pageSize);\r\n    if (pageCounts === 1) return null;\r\n    const pages = _.range(1, pageCounts + 1);\r\n\r\n    return (\r\n        <div className=\" paginatt \">\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination nav2\">\r\n                    {pages.map((page) => (\r\n                        <li\r\n                            className=\" \"\r\n                            key={page}\r\n                            className={currentPage === page ? \"active\" : \" \"}\r\n                        >\r\n                            <a\r\n                                className=\"page-link pagntColor\"\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => onPageChange(page)}\r\n                            >\r\n                                {page}\r\n                            </a>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\store\\actions\\practiceProblemActions.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\CreateAptiQuestion.js",["337"],"import React, { useState, useRef } from 'react';\r\n// import './quiz.css';\r\nimport { Button, Form, Alert, Row, Accordion } from 'react-bootstrap';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nconst CreateAptiQuestion = (props) => {\r\n    const [toggle, setToggle] = useState(false);\r\n    const inpRef = useRef(null);\r\n\r\n    const handleOnFocus = () => {\r\n        if (!toggle) {\r\n            inpRef.current.click();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n\r\n            <Accordion>\r\n                <div className=\"row \">\r\n                    <div className=\"col-12\">\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\" >\r\n                            <Form.Label> <b>Question {props.index + 1}</b></Form.Label>\r\n                            <Accordion.Toggle as={Alert.Link}\r\n                                ref={inpRef}\r\n                                onClick={() => setToggle(!toggle)}\r\n                                eventKey=\"0\"\r\n                                style={{ float: 'right', paddingRight: '20px', color: \"#775ecf\" }}\r\n                            >\r\n                                {toggle ? 'Collapse' : 'Expand'}\r\n                            </Accordion.Toggle>\r\n                            <TextareaAutosize\r\n                                className=\"quiz-inputFiled questiontextarea\"\r\n                                name=\"question\"\r\n                                onFocus={handleOnFocus}\r\n                                onChange={props.onChangeFunc}\r\n                                value={props.quesObj.question}\r\n                                placeholder=\"Type question here..\">\r\n\r\n                            </TextareaAutosize>\r\n                        </Form.Group>\r\n                    </div>\r\n                </div>\r\n                {/* </Accordion.Toggle> */}\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionA-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option A</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled\" onChange={props.onChangeFunc} value={props.quesObj.answers[0]} name=\"optionA\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionB-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option B</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[1]} name=\"optionB\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionC-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option C</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[2]} name=\"optionC\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionD-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option D</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[3]} name=\"optionD\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`correctOption-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Correct option</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.correctAnswer} name=\"correctAnswer\" placeholder=\"Enter answer/text\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-sm-9\">\r\n                                <Form.Label><b>Explanation</b></Form.Label>\r\n                                <TextareaAutosize className=\"quiz-inputFiled questiontextarea\" onChange={props.onChangeFunc} value={props.quesObj.explanation} name=\"explanation\" placeholder=\"\" ></TextareaAutosize>\r\n                            </div>\r\n                            {props.onDeleteFunc && <div className=\"col-sm-3\">\r\n                                <Button className=\"deletebtn\" onClick={props.onDeleteFunc} >Delete question</Button>\r\n                            </div>}\r\n                        </div>\r\n                        <hr className=\"mb-4 mt-4\"></hr>\r\n                    </>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n            \r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default CreateAptiQuestion;","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubTabRow.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\AptiTopicsTemplate.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizQues.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js",["338","339"],"import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { Link } from 'react-router-dom';\r\nimport './quiz.css';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    updateQuiz,\r\n    deleteQuiz,\r\n    startQuiz\r\n} from '../../store/actions/quizActions';\r\nimport { loadUser, setUserNull } from '../../store/actions/authActions';\r\n\r\nconst QuizCard = (props) => {\r\n    const {\r\n        auth: { user },\r\n        quizObj,\r\n        updateQuiz,\r\n        loadUser,\r\n        setUserNull,\r\n        deleteQuiz,\r\n        startQuiz } = props;\r\n\r\n    const handleOnClick = () => {\r\n        setUserNull();\r\n        startQuiz(quizObj._id);\r\n        // loadUser(false, true);\r\n    };\r\n\r\n    return (\r\n        <Card className='quiz_card'>\r\n            <Card.Header className='quiz_card_header text-center'>\r\n                <h3>{quizObj.title}</h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Table className='quiz_card_table text-center' >\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Category</th>\r\n                            <th scope=\"col\">Topics</th>\r\n                            <th scope=\"col\">Questions</th>\r\n                            <th scope=\"col\">Duration</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{quizObj.category}</td>\r\n                            <td>{quizObj.topic}</td>\r\n                            <td>{quizObj.questions.length}</td>\r\n                            <td>{quizObj.duration} Minutes</td>\r\n                        </tr>\r\n                        <tr>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n\r\n                {user.role === 'student' &&\r\n                    <div className='text-center' >\r\n                        <Link to={`/quiz/${quizObj.slug}`} onClick={handleOnClick} className=\"btn btn-primary start_quiz_btn mr-2\" >Start Quiz</Link>\r\n                    </div>}\r\n\r\n                {(user.role === 'faculty' || user.role === 'admin') &&\r\n\r\n                    <div className='text-center' >\r\n                        <Link to={`/editQuiz/${quizObj.slug}`} className=\"btn btn-primary start_quiz_btn mr-2\" >Edit</Link>\r\n                        <button onClick={() => deleteQuiz(quizObj._id)} className=\"btn btn-primary start_quiz_btn mr-2\" >Delete</button>\r\n                        <button onClick={() => updateQuiz({ _id: quizObj._id, active: !quizObj.active })} className=\"btn btn-primary start_quiz_btn mr-2\" >{quizObj.active ? 'Deactivate' : 'Activate'}</button>\r\n                    </div>\r\n                }\r\n            </Card.Body>\r\n            <Card.Footer className='quiz_card_footer' style={{ backgroundColor: 'white' }}>\r\n                {user.role === 'student' &&\r\n                    <label htmlFor=\"name\">Uploader: {quizObj.author ? quizObj.author.name : 'Fahad Khan'}</label>}\r\n                {(user.role === 'faculty' || user.role === 'admin') &&\r\n                    <Link to={`/quizSubmissions/${quizObj._id}`} className='alert-link' style={{ color: '#775ecf' }} >Submissions</Link>}\r\n                <label htmlFor=\"name\" style={{ float: 'right' }}>Last updated on {new Date(quizObj.createdAt).toLocaleString('en-us', { day: '2-digit', month: 'short', year: '2-digit', hour: '2-digit', minute: '2-digit' })}</label>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    quiz: state.quiz,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    updateQuiz,\r\n    deleteQuiz,\r\n    startQuiz,\r\n    loadUser,\r\n    setUserNull\r\n})(QuizCard);","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js",["340"],"import React, { Fragment, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport './quiz.css';\r\n\r\nconst QuizOption = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={`mt-3 mb-3 pr-2 rounded option ${(props.isClicked && 'correct')}`}>\r\n                <Accordion.Toggle as={Button} onClick={props.onClickFunc} variant=\"\" eventKey={props.isCorrect ? '0' : '1'}  >\r\n                    {props.text}\r\n                </Accordion.Toggle>\r\n                \r\n                {/* <div className='icon cross' ><i className=\"fa fa-times\" aria-hidden=\"true\"></i></div> */}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default QuizOption;\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizOptionSub.js",["341"],"import React, { Fragment, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport '../quiz.css';\r\n\r\nconst QuizOption = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <div className={`mt-3 mb-3 pr-2 rounded option ${(props.isClicked) ? (props.isCorrect ? 'correct' : 'incorrect') : (props.isCorrect && 'correct')}`}>\r\n                <Accordion.Toggle as={Button} onClick={props.onClickFunc} variant=\"\" eventKey={props.isCorrect ? '0' : '1'}  >\r\n                    {props.text}\r\n                </Accordion.Toggle>\r\n                {props.isClicked ? (props.isCorrect ?\r\n                    <div className='icon tick' ><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div> :\r\n                    <div className='icon cross' ><i className=\"fa fa-times\" aria-hidden=\"true\"></i></div>)\r\n                    : (props.isCorrect && <div className='icon tick' ><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>)\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default QuizOption;\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\layout\\MyModal.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\ViewAnswer.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizOption.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\code\\CodeTableRow.js",["342","343","344","345"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteQuestion } from \"../../store/actions/codeActions\";\r\n\r\nconst CodeTableRow = ({ auth: { user }, question, id, deleteQuestion }) => {\r\n    function capitalize(s) {\r\n        return s[0].toUpperCase() + s.slice(1);\r\n    }\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{id}</th>\r\n            <td>\r\n                <Link className=\"questTitle\" to={`/code/${question.slug}`}>\r\n                    {capitalize(question.title)}\r\n                </Link>\r\n            </td>\r\n            <td className=\"\">\r\n                <span>\r\n                    <a\r\n                        className=\"fa fa-book questSol\"\r\n                        aria-hidden=\"true\"\r\n                        href=\"#\"\r\n                    ></a>\r\n                </span>\r\n            </td>\r\n            <td className=\"\">\r\n                {question.difficulty === \"10\" && (\r\n                    <span className=\" diffMod badge badgeSuccess \">\r\n                        Easy\r\n                    </span>\r\n                )}\r\n                {question.difficulty === \"20\" && (\r\n                    <span className=\" diffMod badge badgeWarning \">\r\n                        Medium\r\n                    </span>\r\n                )}\r\n                {question.difficulty === \"30\" && (\r\n                    <span className=\" diffMod badge badgeDanger \">\r\n                        Hard\r\n                    </span>\r\n                )}\r\n            </td>\r\n            <td>53.4 %</td>\r\n            {/* {user.role === 'faculty' &&  */}\r\n\r\n            {(user.role === 'faculty' || user.role === 'admin') && <td>\r\n                <span>\r\n                    <Link\r\n                        className=\"fa fa-pencil-square operation-E mr-3 \"\r\n                        aria-hidden=\"true\"\r\n                        to={`/editCodeQuestion/${question.slug}`}\r\n                    ></Link>\r\n                </span>\r\n                <span>\r\n                    <a\r\n                        className=\"fa fa-trash operation-D\"\r\n                        aria-hidden=\"true\"\r\n                        href=\"#\"\r\n                        onClick={() => deleteQuestion(question._id)}\r\n                    ></a>\r\n                </span>\r\n            </td>}\r\n            {/* } */}\r\n        </tr>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteQuestion })(CodeTableRow);\r\n","C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\auth\\Resetpassword.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\auth\\ResPassModal.js",[],"C:\\Users\\ADMIN\\Desktop\\Project\\PlacePrep\\client\\src\\components\\dashboard\\Dashboard.js",["346","347","348","349","350","351","352","353","354","355","356","357","358","359"],{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","severity":1,"message":"365","line":4,"column":50,"nodeType":"366","messageId":"367","endLine":4,"endColumn":60},{"ruleId":"364","severity":1,"message":"368","line":7,"column":8,"nodeType":"366","messageId":"367","endLine":7,"endColumn":15},{"ruleId":"364","severity":1,"message":"369","line":8,"column":8,"nodeType":"366","messageId":"367","endLine":8,"endColumn":16},{"ruleId":"364","severity":1,"message":"370","line":9,"column":8,"nodeType":"366","messageId":"367","endLine":9,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":23,"column":8,"nodeType":"373","endLine":23,"endColumn":10,"suggestions":"374"},{"ruleId":"375","severity":1,"message":"376","line":24,"column":5,"nodeType":"377","messageId":"378","endLine":26,"endColumn":6},{"ruleId":"375","severity":1,"message":"376","line":28,"column":5,"nodeType":"377","messageId":"378","endLine":30,"endColumn":6},{"ruleId":"364","severity":1,"message":"379","line":4,"column":10,"nodeType":"366","messageId":"367","endLine":4,"endColumn":14},{"ruleId":"364","severity":1,"message":"380","line":1,"column":27,"nodeType":"366","messageId":"367","endLine":1,"endColumn":35},{"ruleId":"381","severity":1,"message":"382","line":19,"column":17,"nodeType":"383","endLine":19,"endColumn":83},{"ruleId":"384","severity":1,"message":"385","line":23,"column":17,"nodeType":"383","endLine":23,"endColumn":48},{"ruleId":"364","severity":1,"message":"386","line":14,"column":5,"nodeType":"366","messageId":"367","endLine":14,"endColumn":17},{"ruleId":"371","severity":1,"message":"387","line":30,"column":8,"nodeType":"373","endLine":30,"endColumn":10,"suggestions":"388"},{"ruleId":"371","severity":1,"message":"389","line":45,"column":8,"nodeType":"373","endLine":45,"endColumn":10,"suggestions":"390"},{"ruleId":"371","severity":1,"message":"391","line":98,"column":8,"nodeType":"373","endLine":98,"endColumn":10,"suggestions":"392"},{"ruleId":"364","severity":1,"message":"380","line":1,"column":28,"nodeType":"366","messageId":"367","endLine":1,"endColumn":36},{"ruleId":"371","severity":1,"message":"393","line":22,"column":8,"nodeType":"373","endLine":22,"endColumn":10,"suggestions":"394"},{"ruleId":"371","severity":1,"message":"395","line":20,"column":8,"nodeType":"373","endLine":20,"endColumn":10,"suggestions":"396"},{"ruleId":"364","severity":1,"message":"397","line":11,"column":20,"nodeType":"366","messageId":"367","endLine":11,"endColumn":31},{"ruleId":"364","severity":1,"message":"398","line":19,"column":9,"nodeType":"366","messageId":"367","endLine":19,"endColumn":17},{"ruleId":"371","severity":1,"message":"399","line":28,"column":8,"nodeType":"373","endLine":28,"endColumn":10,"suggestions":"400"},{"ruleId":"364","severity":1,"message":"401","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":17},{"ruleId":"364","severity":1,"message":"402","line":5,"column":8,"nodeType":"366","messageId":"367","endLine":5,"endColumn":14},{"ruleId":"364","severity":1,"message":"379","line":6,"column":10,"nodeType":"366","messageId":"367","endLine":6,"endColumn":14},{"ruleId":"364","severity":1,"message":"403","line":13,"column":35,"nodeType":"366","messageId":"367","endLine":13,"endColumn":46},{"ruleId":"371","severity":1,"message":"404","line":27,"column":8,"nodeType":"373","endLine":27,"endColumn":10,"suggestions":"405"},{"ruleId":"364","severity":1,"message":"406","line":7,"column":8,"nodeType":"366","messageId":"367","endLine":7,"endColumn":17},{"ruleId":"364","severity":1,"message":"407","line":16,"column":17,"nodeType":"366","messageId":"367","endLine":16,"endColumn":21},{"ruleId":"364","severity":1,"message":"398","line":17,"column":9,"nodeType":"366","messageId":"367","endLine":17,"endColumn":17},{"ruleId":"371","severity":1,"message":"408","line":27,"column":8,"nodeType":"373","endLine":27,"endColumn":10,"suggestions":"409"},{"ruleId":"371","severity":1,"message":"410","line":13,"column":8,"nodeType":"373","endLine":13,"endColumn":10,"suggestions":"411"},{"ruleId":"364","severity":1,"message":"412","line":12,"column":52,"nodeType":"366","messageId":"367","endLine":12,"endColumn":69},{"ruleId":"371","severity":1,"message":"413","line":25,"column":8,"nodeType":"373","endLine":25,"endColumn":14,"suggestions":"414"},{"ruleId":"384","severity":1,"message":"385","line":100,"column":41,"nodeType":"383","endLine":104,"endColumn":42},{"ruleId":"384","severity":1,"message":"385","line":138,"column":41,"nodeType":"383","endLine":142,"endColumn":42},{"ruleId":"364","severity":1,"message":"415","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":24},{"ruleId":"364","severity":1,"message":"415","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":24},{"ruleId":"364","severity":1,"message":"407","line":10,"column":21,"nodeType":"366","messageId":"367","endLine":10,"endColumn":25},{"ruleId":"371","severity":1,"message":"416","line":20,"column":8,"nodeType":"373","endLine":20,"endColumn":10,"suggestions":"417"},{"ruleId":"371","severity":1,"message":"399","line":25,"column":8,"nodeType":"373","endLine":25,"endColumn":10,"suggestions":"418"},{"ruleId":"371","severity":1,"message":"419","line":50,"column":8,"nodeType":"373","endLine":50,"endColumn":17,"suggestions":"420"},{"ruleId":"371","severity":1,"message":"421","line":39,"column":8,"nodeType":"373","endLine":39,"endColumn":18,"suggestions":"422"},{"ruleId":"371","severity":1,"message":"423","line":38,"column":8,"nodeType":"373","endLine":38,"endColumn":10,"suggestions":"424"},{"ruleId":"371","severity":1,"message":"425","line":59,"column":8,"nodeType":"373","endLine":59,"endColumn":17,"suggestions":"426"},{"ruleId":"427","severity":1,"message":"428","line":33,"column":1,"nodeType":"429","endLine":44,"endColumn":3},{"ruleId":"364","severity":1,"message":"430","line":1,"column":37,"nodeType":"366","messageId":"367","endLine":1,"endColumn":46},{"ruleId":"364","severity":1,"message":"431","line":12,"column":25,"nodeType":"366","messageId":"367","endLine":12,"endColumn":39},{"ruleId":"364","severity":1,"message":"432","line":3,"column":31,"nodeType":"366","messageId":"367","endLine":3,"endColumn":34},{"ruleId":"371","severity":1,"message":"433","line":17,"column":27,"nodeType":"434","endLine":22,"endColumn":11},{"ruleId":"364","severity":1,"message":"435","line":26,"column":34,"nodeType":"366","messageId":"367","endLine":26,"endColumn":43},{"ruleId":"364","severity":1,"message":"436","line":1,"column":38,"nodeType":"366","messageId":"367","endLine":1,"endColumn":44},{"ruleId":"364","severity":1,"message":"437","line":9,"column":27,"nodeType":"366","messageId":"367","endLine":9,"endColumn":43},{"ruleId":"371","severity":1,"message":"438","line":17,"column":22,"nodeType":"434","endLine":17,"endColumn":59},{"ruleId":"364","severity":1,"message":"439","line":11,"column":5,"nodeType":"366","messageId":"367","endLine":11,"endColumn":13},{"ruleId":"364","severity":1,"message":"440","line":12,"column":5,"nodeType":"366","messageId":"367","endLine":12,"endColumn":16},{"ruleId":"364","severity":1,"message":"441","line":109,"column":11,"nodeType":"366","messageId":"367","endLine":109,"endColumn":17},{"ruleId":"364","severity":1,"message":"441","line":128,"column":11,"nodeType":"366","messageId":"367","endLine":128,"endColumn":17},{"ruleId":"442","severity":1,"message":"443","line":18,"column":29,"nodeType":"444","endLine":18,"endColumn":78},{"ruleId":"384","severity":1,"message":"445","line":20,"column":29,"nodeType":"383","endLine":24,"endColumn":30},{"ruleId":"364","severity":1,"message":"432","line":3,"column":31,"nodeType":"366","messageId":"367","endLine":3,"endColumn":34},{"ruleId":"364","severity":1,"message":"446","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":13},{"ruleId":"364","severity":1,"message":"398","line":20,"column":9,"nodeType":"366","messageId":"367","endLine":20,"endColumn":17},{"ruleId":"364","severity":1,"message":"380","line":1,"column":27,"nodeType":"366","messageId":"367","endLine":1,"endColumn":35},{"ruleId":"364","severity":1,"message":"380","line":1,"column":27,"nodeType":"366","messageId":"367","endLine":1,"endColumn":35},{"ruleId":"447","severity":1,"message":"448","line":20,"column":21,"nodeType":"383","endLine":24,"endColumn":22},{"ruleId":"384","severity":1,"message":"385","line":20,"column":21,"nodeType":"383","endLine":24,"endColumn":22},{"ruleId":"447","severity":1,"message":"448","line":56,"column":21,"nodeType":"383","endLine":61,"endColumn":22},{"ruleId":"384","severity":1,"message":"385","line":56,"column":21,"nodeType":"383","endLine":61,"endColumn":22},{"ruleId":"364","severity":1,"message":"402","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":16},{"ruleId":"364","severity":1,"message":"449","line":4,"column":10,"nodeType":"366","messageId":"367","endLine":4,"endColumn":17},{"ruleId":"450","severity":1,"message":"451","line":50,"column":29,"nodeType":"383","endLine":50,"endColumn":105},{"ruleId":"384","severity":1,"message":"385","line":55,"column":37,"nodeType":"383","endLine":55,"endColumn":92},{"ruleId":"450","severity":1,"message":"451","line":62,"column":29,"nodeType":"383","endLine":62,"endColumn":106},{"ruleId":"384","severity":1,"message":"385","line":67,"column":37,"nodeType":"383","endLine":67,"endColumn":92},{"ruleId":"450","severity":1,"message":"451","line":74,"column":29,"nodeType":"383","endLine":74,"endColumn":107},{"ruleId":"384","severity":1,"message":"385","line":79,"column":37,"nodeType":"383","endLine":79,"endColumn":92},{"ruleId":"447","severity":1,"message":"448","line":135,"column":41,"nodeType":"383","endLine":135,"endColumn":113},{"ruleId":"384","severity":1,"message":"385","line":135,"column":41,"nodeType":"383","endLine":135,"endColumn":113},{"ruleId":"384","severity":1,"message":"385","line":156,"column":41,"nodeType":"383","endLine":156,"endColumn":113},{"ruleId":"447","severity":1,"message":"448","line":156,"column":41,"nodeType":"383","endLine":156,"endColumn":113},{"ruleId":"447","severity":1,"message":"448","line":177,"column":41,"nodeType":"383","endLine":177,"endColumn":113},{"ruleId":"384","severity":1,"message":"385","line":177,"column":41,"nodeType":"383","endLine":177,"endColumn":113},"no-native-reassign",["452"],"no-negated-in-lhs",["453"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'SideBar' is defined but never used.","'MainView' is defined but never used.","'Navbar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["454"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Link' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'AUTH_LOADING' is defined but never used.","React Hook useEffect has missing dependencies: 'isAuthenticated', 'user.email', and 'user.name'. Either include them or remove the dependency array.",["455"],"React Hook useLayoutEffect has a missing dependency: 'menuItems'. Either include it or remove the dependency array.",["456"],"React Hook useEffect has a missing dependency: 'menuItems'. Either include it or remove the dependency array.",["457"],"React Hook useEffect has missing dependencies: 'getQuizSubmission' and 'quizSubId'. Either include them or remove the dependency array.",["458"],"React Hook useEffect has missing dependencies: 'getQuestion' and 'slug'. Either include them or remove the dependency array.",["459"],"'setUserNull' is defined but never used.","'loadUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQuiz' and 'slug'. Either include them or remove the dependency array.",["460"],"'Container' is defined but never used.","'Button' is defined but never used.","'quizLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQuizzes' and 'user?.role'. Either include them or remove the dependency array.",["461"],"'QuizTimer' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'categorySlug', 'getPracticeProblems', and 'topicSlug'. Either include them or remove the dependency array.",["462"],"React Hook useEffect has a missing dependency: 'getCategoryAndTopic'. Either include it or remove the dependency array.",["463"],"'getQuizSubmission' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQuizSubmissions' and 'quizId'. Either include them or remove the dependency array.",["464"],"'TextareaAutosize' is defined but never used.","React Hook useEffect has missing dependencies: 'getPracticeProblem' and 'id'. Either include them or remove the dependency array.",["465"],["466"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["467"],"React Hook useEffect has a missing dependency: 'clearFilter'. Either include it or remove the dependency array.",["468"],"React Hook useEffect has missing dependencies: 'getQuestion', 'props.match.params.slug', and 'props.match.path'. Either include them or remove the dependency array.",["469"],"React Hook useEffect has missing dependencies: 'clearCurrent', 'props.history', and 'props.match.path'. Either include them or remove the dependency array.",["470"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'setUserAnswers' is assigned a value but never used.","'Row' is defined but never used.","Assignments to the 'tempUserAnswers' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'resetCode' is assigned a value but never used.","'useRef' is defined but never used.","'setCountdownDate' is assigned a value but never used.","Assignments to the 'myInterval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'RUN_CODE' is defined but never used.","'SUBMIT_CODE' is defined but never used.","'config' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Alert' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'connect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"475","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},{"desc":"482","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},"Update the dependencies array to be: [loadUser]",{"range":"503","text":"504"},"Update the dependencies array to be: [isAuthenticated, user.email, user.name]",{"range":"505","text":"506"},"Update the dependencies array to be: [menuItems]",{"range":"507","text":"508"},{"range":"509","text":"508"},"Update the dependencies array to be: [getQuizSubmission, quizSubId]",{"range":"510","text":"511"},"Update the dependencies array to be: [getQuestion, slug]",{"range":"512","text":"513"},"Update the dependencies array to be: [getQuiz, slug]",{"range":"514","text":"515"},"Update the dependencies array to be: [getQuizzes, user?.role]",{"range":"516","text":"517"},"Update the dependencies array to be: [categorySlug, getPracticeProblems, topicSlug]",{"range":"518","text":"519"},"Update the dependencies array to be: [getCategoryAndTopic]",{"range":"520","text":"521"},"Update the dependencies array to be: [getQuizSubmissions, quizId, user]",{"range":"522","text":"523"},"Update the dependencies array to be: [getPracticeProblem, id]",{"range":"524","text":"525"},{"range":"526","text":"515"},"Update the dependencies array to be: [current, props.history]",{"range":"527","text":"528"},"Update the dependencies array to be: [clearFilter, filtered]",{"range":"529","text":"530"},"Update the dependencies array to be: [getQuestion, props.match.params.slug, props.match.path]",{"range":"531","text":"532"},"Update the dependencies array to be: [clearCurrent, current, props.history, props.match.path]",{"range":"533","text":"534"},[903,905],"[loadUser]",[866,868],"[isAuthenticated, user.email, user.name]",[1452,1454],"[menuItems]",[3651,3653],[690,692],"[getQuizSubmission, quizSubId]",[666,668],"[getQuestion, slug]",[863,865],"[getQuiz, slug]",[810,812],"[getQuizzes, user?.role]",[950,952],"[categorySlug, getPracticeProblems, topicSlug]",[448,450],"[getCategoryAndTopic]",[889,895],"[getQuizSubmissions, quizId, user]",[701,703],"[getPracticeProblem, id]",[673,675],[1450,1459],"[current, props.history]",[1197,1207],"[clearFilter, filtered]",[1182,1184],"[getQuestion, props.match.params.slug, props.match.path]",[1941,1950],"[clearCurrent, current, props.history, props.match.path]"]