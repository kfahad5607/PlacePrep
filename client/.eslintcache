[{"E:\\project\\PlacePrep\\client\\src\\index.js":"1","E:\\project\\PlacePrep\\client\\src\\App.js":"2","E:\\project\\PlacePrep\\client\\src\\components\\auth\\Login.js":"3","E:\\project\\PlacePrep\\client\\src\\components\\auth\\Register.js":"4","E:\\project\\PlacePrep\\client\\src\\components\\coding\\Coding.js":"5","E:\\project\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js":"6","E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js":"7","E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js":"8","E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js":"9","E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeQuestions.js":"10","E:\\project\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js":"11","E:\\project\\PlacePrep\\client\\src\\components\\mainview\\MainView.js":"12","E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js":"13","E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js":"14","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js":"15","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js":"16","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js":"17","E:\\project\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js":"18","E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js":"19","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js":"20","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js":"21","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js":"22","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\ViewAnswer.js":"23","E:\\project\\PlacePrep\\client\\src\\components\\layout\\Navbar.js":"24","E:\\project\\PlacePrep\\client\\src\\store\\configureStore.js":"25","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\reducer.js":"26","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js":"27","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js":"28","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\practiceQuizReducers.js":"29","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js":"30","E:\\project\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js":"31","E:\\project\\PlacePrep\\client\\src\\store\\actions\\authActions.js":"32","E:\\project\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js":"33","E:\\project\\PlacePrep\\client\\src\\store\\actions\\codeActions.js":"34","E:\\project\\PlacePrep\\client\\src\\components\\coding\\codeTableRow.js":"35","E:\\project\\PlacePrep\\client\\src\\components\\layout\\Spinner.js":"36","E:\\project\\PlacePrep\\client\\src\\components\\layout\\Home.js":"37"},{"size":345,"mtime":1613386251797,"results":"38","hashOfConfig":"39"},{"size":1467,"mtime":1613731597027,"results":"40","hashOfConfig":"39"},{"size":3843,"mtime":1613473901886,"results":"41","hashOfConfig":"39"},{"size":4973,"mtime":1613644342651,"results":"42","hashOfConfig":"39"},{"size":1726,"mtime":1613643047224,"results":"43","hashOfConfig":"39"},{"size":787,"mtime":1613041950809,"results":"44","hashOfConfig":"39"},{"size":545,"mtime":1612959040740,"results":"45","hashOfConfig":"39"},{"size":5000,"mtime":1612959041030,"results":"46","hashOfConfig":"39"},{"size":1133,"mtime":1613555665819,"results":"47","hashOfConfig":"39"},{"size":8287,"mtime":1613642974063,"results":"48","hashOfConfig":"39"},{"size":3111,"mtime":1613196434970,"results":"49","hashOfConfig":"39"},{"size":1114,"mtime":1613730658038,"results":"50","hashOfConfig":"39"},{"size":6953,"mtime":1612959040224,"results":"51","hashOfConfig":"39"},{"size":7164,"mtime":1613041920888,"results":"52","hashOfConfig":"39"},{"size":4637,"mtime":1613041920888,"results":"53","hashOfConfig":"39"},{"size":1104,"mtime":1613196434973,"results":"54","hashOfConfig":"39"},{"size":1830,"mtime":1613196434972,"results":"55","hashOfConfig":"39"},{"size":13371,"mtime":1613736616048,"results":"56","hashOfConfig":"39"},{"size":1129,"mtime":1613041920888,"results":"57","hashOfConfig":"39"},{"size":4749,"mtime":1613041920888,"results":"58","hashOfConfig":"39"},{"size":3420,"mtime":1612959040220,"results":"59","hashOfConfig":"39"},{"size":1261,"mtime":1612959040220,"results":"60","hashOfConfig":"39"},{"size":812,"mtime":1613196434973,"results":"61","hashOfConfig":"39"},{"size":2193,"mtime":1613476507986,"results":"62","hashOfConfig":"39"},{"size":274,"mtime":1613196485705,"results":"63","hashOfConfig":"39"},{"size":388,"mtime":1613196435051,"results":"64","hashOfConfig":"39"},{"size":1535,"mtime":1613733479536,"results":"65","hashOfConfig":"39"},{"size":1909,"mtime":1613736751994,"results":"66","hashOfConfig":"39"},{"size":353,"mtime":1613646904391,"results":"67","hashOfConfig":"39"},{"size":492,"mtime":1613196435051,"results":"68","hashOfConfig":"39"},{"size":1911,"mtime":1613555784050,"results":"69","hashOfConfig":"39"},{"size":2327,"mtime":1613647043546,"results":"70","hashOfConfig":"39"},{"size":521,"mtime":1613733327068,"results":"71","hashOfConfig":"39"},{"size":2564,"mtime":1613736857193,"results":"72","hashOfConfig":"39"},{"size":2450,"mtime":1613739523857,"results":"73","hashOfConfig":"39"},{"size":358,"mtime":1585907253897,"results":"74","hashOfConfig":"39"},{"size":1818,"mtime":1613732346295,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"kwzxpx",{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\project\\PlacePrep\\client\\src\\index.js",[],["160","161"],"E:\\project\\PlacePrep\\client\\src\\App.js",["162","163","164","165","166","167"],"E:\\project\\PlacePrep\\client\\src\\components\\auth\\Login.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\auth\\Register.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\Coding.js",["168"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"./Coding.css\";\r\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\r\nimport CodeDescription from \"./CodeDescription\";\r\nimport CodingSolution from \"./CodingSolution\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport {useParams} from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestion } from \"../../store/actions/codeActions\";\r\nimport Spinner from '../layout/Spinner'\r\n\r\nconst Coding = (props) => {\r\n\r\n    const { getQuestion } = props;\r\n    const { current } = props.code\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        getQuestion(id)\r\n    }, [])\r\n\r\n    const [key, setKey] = useState(\"description\");\r\n    \r\n    return (\r\n        <Fragment>\r\n        { current !== null ?\r\n        <Row className=\"coding-container\">\r\n            <Col>\r\n                <Tabs className='navTabs' activeKey={key} onSelect={(e) => setKey(e)}>\r\n                    <Tab eventKey=\"description\" title={<span><i className=\"fa fa-list-alt\" aria-hidden=\"true\"></i>Description</span>}>\r\n                        <CodeDescription current={current}/>\r\n                    </Tab>\r\n                    <Tab eventKey=\"solution\" title={<span><i className=\"fa fa-flask\" aria-hidden=\"true\"></i>Solution</span>}>\r\n                        <CodingSolution current={current}/>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Col>\r\n            <Col className=\"editor-container\">\r\n                <CodeEditor/>\r\n            </Col>\r\n        </Row> : <Spinner /> }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code\r\n});\r\n\r\nexport default connect(mapStateToProps,{ getQuestion})(Coding);","E:\\project\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeQuestions.js",["169","170"],"import React, { useEffect, Fragment } from \"react\";\r\nimport \"./CodeQuestDisp.css\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestions } from \"../../store/actions/codeActions\";\r\nimport CodeTableRow from \"./codeTableRow\";\r\nimport Spinner from '../layout/Spinner'\r\n\r\nconst CodeQuestions = (props) => {\r\n    const { getQuestions } = props;\r\n    const { user } = props.auth;\r\n    const { questions } = props.code;\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            getQuestions();\r\n        }, 2000);\r\n        //     eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (questions !== null && questions.length === 0) {\r\n        return <h4>Currently There are No Question Available</h4>;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {questions !== null ? (\r\n                <Container className=\"container-codeQuest\">\r\n                    <h3 className=\"text-center  mb-2 pt-4 \">\r\n                        Coding Questions\r\n                    </h3>\r\n                    <div className=\"title-border mb-4\">\r\n                        <span></span>\r\n                    </div>\r\n                    <div className=\"displayQuest pb-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 pb-2\">\r\n                                <Form>\r\n                                    <Form.Group controlId=\"codingquestionSearch\">\r\n                                        <Form.Control\r\n                                            className=\" codingQuestSearch\"\r\n                                            type=\"\"\r\n                                            placeholder=\"Search question titles, descriptions or ID\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                        <table className=\"table  \">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Title</th>\r\n                                    <th scope=\"col\">Solution</th>\r\n                                    <th scope=\"col\">Difficulty</th>\r\n                                    <th scope=\"col\">Acceptance</th>\r\n                                    <th scope=\"col\">Operations</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tbodyCode\">\r\n                                {questions.map((question, index) => (\r\n                                    <CodeTableRow\r\n                                        question={question}\r\n                                        key={index}\r\n                                        id={index}\r\n                                        user={user}\r\n                                    />\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"row\">\r\n                            <div className=\"ml-3 \">\r\n                                <Form>\r\n                                    <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            className=\"dispCode-inputFiled rowsPerPg\"\r\n                                        >\r\n                                            <option className=\"optionSelect\">\r\n                                                10\r\n                                            </option>\r\n                                            <option className=\"optionSelect\">\r\n                                                25\r\n                                            </option>\r\n                                            <option className=\"optionSelect\">\r\n                                                50\r\n                                            </option>\r\n                                            <option className=\"optionSelect\">\r\n                                                100\r\n                                            </option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div>\r\n                            <span className=\"labelRowsPerPg mt-2 col-4\">\r\n                                rows per page.\r\n                            </span>\r\n\r\n                            <div className=\" paginatt \">\r\n                                <nav aria-label=\"Page navigation example\">\r\n                                    <ul className=\"pagination nav2\">\r\n                                        <li className=\"\">\r\n                                            <a\r\n                                                className=\"page-link\"\r\n                                                href=\"#\"\r\n                                                aria-label=\"Previous\"\r\n                                            >\r\n                                                <span\r\n                                                    aria-hidden=\"true\"\r\n                                                    className=\"pagntColor\"\r\n                                                >\r\n                                                    &laquo;\r\n                                                </span>\r\n                                            </a>\r\n                                        </li>\r\n                                        <li className=\" \">\r\n                                            <a\r\n                                                className=\"page-link pagntColor\"\r\n                                                href=\"#1\"\r\n                                            >\r\n                                                1\r\n                                            </a>\r\n                                        </li>\r\n                                        <li className=\"active\">\r\n                                            <a\r\n                                                className=\"page-link pagntColor \"\r\n                                                href=\"#2\"\r\n                                            >\r\n                                                2\r\n                                            </a>\r\n                                        </li>\r\n                                        <li className=\" \">\r\n                                            <a\r\n                                                className=\"page-link pagntColor \"\r\n                                                href=\"#3\"\r\n                                            >\r\n                                                3\r\n                                            </a>\r\n                                        </li>\r\n                                        <li className=\"\">\r\n                                            <a\r\n                                                className=\"page-link\"\r\n                                                href=\"#\"\r\n                                                aria-label=\"Next\"\r\n                                            >\r\n                                                <span\r\n                                                    aria-hidden=\"true\"\r\n                                                    className=\"pagntColor\"\r\n                                                >\r\n                                                    &raquo;\r\n                                                </span>\r\n                                            </a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            ) : (\r\n                <Spinner />\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    code: state.code,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuestions })(CodeQuestions);\r\n","E:\\project\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\mainview\\MainView.js",["171"],"E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js",["172"],"import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport './quiz.css';\r\n\r\nconst QuizCard = () => {\r\n\r\n    return (\r\n        <Card className='quiz_card'>\r\n            <Card.Header className='quiz_card_header text-center'>\r\n                <h3>Quantitative Analysis Aptitude</h3>\r\n\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Table className='quiz_card_table text-center' >\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Category</th>\r\n                            <th scope=\"col\">Topics</th>\r\n                            <th scope=\"col\">Questions</th>\r\n                            <th scope=\"col\">Duration</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Quantitative Analysis</td>\r\n                            <td>Train problems, Time and work, Speed distance time, Probability, Average, Ages</td>\r\n                            <td>25</td>\r\n                            <td>1 Hour</td>\r\n                        </tr>\r\n                        <tr>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <div className='text-center' >\r\n                    <a href=\"#\" className=\"btn btn-primary start_quiz_btn\" >Start Quiz</a>\r\n                </div>\r\n            </Card.Body>\r\n            <Card.Footer className='quiz_card_footer' style={{ backgroundColor: 'white' }}>\r\n                <label htmlFor=\"name\">Uploader: Fahad khan</label>\r\n                <label htmlFor=\"name\" style={{ float: 'right' }}>Last updated on Jan 31, 2020</label>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default QuizCard;","E:\\project\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js",["173"],"E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js",["174"],"import React, { useState } from 'react';\r\n// import './quiz.css';\r\nimport { Button, Form, Alert, Row, Accordion } from 'react-bootstrap';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\n\r\nfunction QuizQuestion(props) {\r\n    const [toggle, setToggle] = useState(false);\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n\r\n            <Accordion>\r\n                {/* <Accordion.Toggle as={Row} eventKey=\"0\" style={{ cursor: 'pointer', backgroundColor: 'rgb(164, 166, 179)'}}> */}\r\n                <div className=\"row \">\r\n                    <div className=\"col-12\">\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\" >\r\n                            <Form.Label> <b>Question {props.index + 1}</b></Form.Label>\r\n                            <Accordion.Toggle as={Alert.Link}\r\n                                onClick={() => setToggle(!toggle)}\r\n                                eventKey=\"0\"\r\n                                style={{ float: 'right', paddingRight: '20px', color: \"#775ecf\" }}\r\n                            >\r\n                                {toggle ? 'Collapse' : 'Expand'}\r\n                            </Accordion.Toggle>\r\n                            <TextareaAutosize\r\n                                className=\"quiz-inputFiled questiontextarea\"\r\n                                name=\"question\"\r\n                                onChange={props.onChangeFunc}\r\n                                value={props.quesObj.ques}\r\n                                placeholder=\"Type question here..\">\r\n\r\n                            </TextareaAutosize>\r\n                        </Form.Group>\r\n                    </div>\r\n                </div>\r\n                {/* </Accordion.Toggle> */}\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"optionA\" >\r\n                                    <Form.Label><b>Option A</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled\" onChange={props.onChangeFunc} value={props.quesObj.optA} name=\"optionA\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"optionB\" >\r\n                                    <Form.Label><b>Option B</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.optB} name=\"optionB\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"optionC\" >\r\n                                    <Form.Label><b>Option C</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.optC} name=\"optionC\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"optionD\" >\r\n                                    <Form.Label><b>Option D</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.optD} name=\"optionD\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"correctOption\" >\r\n                                    <Form.Label><b>Correct option</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.correctOpt} name=\"correctOption\" placeholder=\"Enter answer/text\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Button className=\"deletebtn\" onClick={props.onDeleteFunc} >Delete question</Button>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n            <hr className=\"mt-3 \"></hr>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default QuizQuestion;","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js",["175","176","177"],"import React, { Fragment } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Button from 'react-bootstrap/Button';\r\nimport QuizOption from './QuizOption';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ViewAnswer from './ViewAnswer';\r\nimport './quiz.css';\r\n\r\nconst QuizQues = () => {\r\n    const temp = [{\r\n        question: 'What does HTML stand for?',\r\n        optionA: 'Hyper Text Preprocessor',\r\n        optionB: 'Hyper Text Markup Language',\r\n        optionC: 'Hyper Text Multiple Language',\r\n        optionD: 'Hyper Text Multi Language',\r\n        correctOption: 'Hyper Text Markup Language'\r\n    },\r\n    {\r\n        question: 'Who is making the Web standards?',\r\n        optionA: 'The World Wide Web Consortium',\r\n        optionB: 'Google',\r\n        optionC: 'Mozilla',\r\n        optionD: 'Firefox',\r\n        correctOption: 'The World Wide Web Consortium'\r\n    },\r\n    {\r\n        question: 'Choose the correct HTML element for the largest heading:',\r\n        optionA: '<head>',\r\n        optionB: '<heading>',\r\n        optionC: '<h1>',\r\n        optionD: '<h6>',\r\n        correctOption: '<h1>'\r\n    },\r\n    {\r\n        question: 'Choose the correct HTML element to define important text',\r\n        optionA: '<strong>',\r\n        optionB: '<i>',\r\n        optionC: '<important>',\r\n        optionD: '<b>',\r\n        correctOption: '<strong>'\r\n    }\r\n\r\n    ];\r\n\r\n\r\n\r\n    return temp.map((ele, index) => {\r\n        return (\r\n            <Fragment key={index}>\r\n                <Accordion className='my-2'>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                                {`${index + 1}.`} {ele.question}\r\n                            </Card.Title>\r\n                            <QuizOption key={1} text={ele.optionA} isCorrect={ele.optionA === ele.correctOption ? true : false} />\r\n                            <QuizOption key={2} text={ele.optionB} isCorrect={ele.optionB === ele.correctOption ? true : false} />\r\n                            <QuizOption key={3} text={ele.optionC} isCorrect={ele.optionC === ele.correctOption ? true : false} />\r\n                            <QuizOption key={4} text={ele.optionD} isCorrect={ele.optionD === ele.correctOption ? true : false} />\r\n                            <ViewAnswer eKey='0' correctOption={ele.correctOption} />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Accordion>\r\n            </Fragment>\r\n        );\r\n    });\r\n\r\n    // return (\r\n    //     <Fragment>\r\n    //         <Accordion className='my-2'>\r\n    //             <Card>\r\n    //                 <Card.Body>\r\n    //                     <Card.Title>\r\n    //                         1. What does HTML stand for?\r\n    //             </Card.Title>\r\n    //                     <QuizOption text='Hyper Text Preprocessor' eKey='1' />\r\n    //                     <QuizOption text='Hyper Text Markup Language' eKey='2' />\r\n    //                     <QuizOption text='Hyper Text Multiple Language' eKey='3' />\r\n    //                     <QuizOption text='Hyper Text Multi Language' eKey='4' />\r\n    //                     <ViewAnswer eKey='2' />\r\n    //                 </Card.Body>\r\n    //             </Card>\r\n    //         </Accordion>\r\n    //     </Fragment>\r\n    // );\r\n};\r\n\r\nexport default QuizQues;","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js",["178","179"],"import React, { Fragment, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport './quiz.css';\r\n\r\nconst QuizOption = (props) => {\r\n    const [ansClicked, setAnsClicked] = useState(false);\r\n\r\n    const handleOnCLick = () => {\r\n        setAnsClicked(true);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={`mt-3 mb-3 pr-2 rounded option ${ansClicked && (props.isCorrect ? 'correct' : 'incorrect')}`}>\r\n                <Accordion.Toggle as={Button} onClick={handleOnCLick} variant=\"\" eventKey={props.isCorrect ? '0' : '1'}  >\r\n                    {props.text}\r\n                </Accordion.Toggle>\r\n                {ansClicked && (props.isCorrect ?\r\n                    <div className='icon tick' ><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div> :\r\n                    <div className='icon cross' ><i className=\"fa fa-times\" aria-hidden=\"true\"></i></div>\r\n                )}\r\n                {/* <div className='icon cross' ><i className=\"fa fa-times\" aria-hidden=\"true\"></i></div> */}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default QuizOption;\r\n","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\ViewAnswer.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\layout\\Navbar.js",["180","181"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/authActions\";\r\n\r\nconst Navbars = (props) => {\r\n\r\n    const { logout } = props;\r\n    const {isAuthenticated, user } = props.auth;\r\n    const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n    const toggleSidebarBtn = () => {\r\n        setSidebarOpen(!sidebarOpen);\r\n    };\r\n\r\n    const onlogout = () => {\r\n        logout();\r\n    }\r\n\r\n    const authLinks = (\r\n        <Fragment>\r\n            <span>\r\n                <img className=\"nav__user-img\" src=\"/profile.jpg\" />\r\n                <span className='user-name'>Hello {user && user.name}</span>\r\n            </span>\r\n            <span>\r\n                <a href=\"#\" onClick={onlogout}>\r\n                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                    <span className=\"hide-sm\"> Logout</span>\r\n                </a>\r\n            </span>\r\n        </Fragment>\r\n    );\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <Link to=\"/register\">Register</Link>\r\n            <Link to=\"/login\">Login</Link>\r\n        </Fragment>\r\n    );\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n            <div id='sidebar-btn' onClick={toggleSidebarBtn} >\r\n                <i className='fas fa-bars menu-icon' ></i>\r\n            </div>\r\n            <Navbar.Brand className=\"brand-name\">\r\n                <img\r\n                    alt=\"\"\r\n                    src=\"./assets/img/logo.png\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{\" \"}\r\n                PlacePrep\r\n            </Navbar.Brand>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    { isAuthenticated ? authLinks: guestLinks}\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout})(Navbars);\r\n","E:\\project\\PlacePrep\\client\\src\\store\\configureStore.js",["182"],"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport rootReducer from './reducers/reducer';\r\n\r\n\r\nexport default function () {\r\n    return configureStore({\r\n        reducer: rootReducer,\r\n        middleware: [...getDefaultMiddleware()]\r\n    });\r\n}","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\reducer.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\reducers\\practiceQuizReducers.js",["183"],"import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    questions: [],\r\n    current: null,\r\n    filtered: null,\r\n    error: null,\r\n    loading: true\r\n    \r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\actions\\authActions.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\actions\\codeActions.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\codeTableRow.js",["184","185","186","187"],"E:\\project\\PlacePrep\\client\\src\\components\\layout\\Spinner.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\layout\\Home.js",["188"],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":4,"column":50,"nodeType":"195","messageId":"196","endLine":4,"endColumn":60},{"ruleId":"193","severity":1,"message":"197","line":7,"column":8,"nodeType":"195","messageId":"196","endLine":7,"endColumn":15},{"ruleId":"193","severity":1,"message":"198","line":8,"column":8,"nodeType":"195","messageId":"196","endLine":8,"endColumn":16},{"ruleId":"193","severity":1,"message":"199","line":9,"column":8,"nodeType":"195","messageId":"196","endLine":9,"endColumn":14},{"ruleId":"200","severity":1,"message":"201","line":18,"column":5,"nodeType":"202","messageId":"203","endLine":20,"endColumn":6},{"ruleId":"200","severity":1,"message":"201","line":22,"column":5,"nodeType":"202","messageId":"203","endLine":24,"endColumn":6},{"ruleId":"204","severity":1,"message":"205","line":20,"column":8,"nodeType":"206","endLine":20,"endColumn":10,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":101,"column":45,"nodeType":"210","endLine":105,"endColumn":46},{"ruleId":"208","severity":1,"message":"209","line":139,"column":45,"nodeType":"210","endLine":143,"endColumn":46},{"ruleId":"193","severity":1,"message":"211","line":11,"column":8,"nodeType":"195","messageId":"196","endLine":11,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":38,"column":21,"nodeType":"210","endLine":38,"endColumn":77},{"ruleId":"204","severity":1,"message":"212","line":36,"column":8,"nodeType":"206","endLine":36,"endColumn":10,"suggestions":"213"},{"ruleId":"193","severity":1,"message":"214","line":3,"column":31,"nodeType":"195","messageId":"196","endLine":3,"endColumn":34},{"ruleId":"193","severity":1,"message":"215","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":14},{"ruleId":"193","severity":1,"message":"214","line":6,"column":8,"nodeType":"195","messageId":"196","endLine":6,"endColumn":11},{"ruleId":"193","severity":1,"message":"216","line":7,"column":8,"nodeType":"195","messageId":"196","endLine":7,"endColumn":11},{"ruleId":"193","severity":1,"message":"217","line":3,"column":8,"nodeType":"195","messageId":"196","endLine":3,"endColumn":12},{"ruleId":"193","severity":1,"message":"218","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":13},{"ruleId":"219","severity":1,"message":"220","line":24,"column":17,"nodeType":"210","endLine":24,"endColumn":69},{"ruleId":"208","severity":1,"message":"209","line":28,"column":17,"nodeType":"210","endLine":28,"endColumn":48},{"ruleId":"221","severity":1,"message":"222","line":5,"column":1,"nodeType":"223","endLine":10,"endColumn":2},{"ruleId":"193","severity":1,"message":"224","line":1,"column":13,"nodeType":"195","messageId":"196","endLine":1,"endColumn":24},{"ruleId":"225","severity":1,"message":"226","line":20,"column":21,"nodeType":"210","endLine":24,"endColumn":22},{"ruleId":"208","severity":1,"message":"209","line":20,"column":21,"nodeType":"210","endLine":24,"endColumn":22},{"ruleId":"225","severity":1,"message":"226","line":55,"column":21,"nodeType":"210","endLine":60,"endColumn":22},{"ruleId":"208","severity":1,"message":"209","line":55,"column":21,"nodeType":"210","endLine":60,"endColumn":22},{"ruleId":"193","severity":1,"message":"198","line":5,"column":8,"nodeType":"195","messageId":"196","endLine":5,"endColumn":16},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'SideBar' is defined but never used.","'MainView' is defined but never used.","'Navbar' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getQuestion' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["229"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'PrivateRoute' is defined but never used.","React Hook useEffect has missing dependencies: 'getQuestion', 'props.match.params.id', and 'props.match.path'. Either include them or remove the dependency array.",["230"],"'Row' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Alert' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'actionTypes' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [getQuestion, id]",{"range":"235","text":"236"},"Update the dependencies array to be: [getQuestion, props.match.params.id, props.match.path]",{"range":"237","text":"238"},[662,664],"[getQuestion, id]",[1098,1100],"[getQuestion, props.match.params.id, props.match.path]"]