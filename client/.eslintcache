[{"C:\\Major Projects\\PlacePrep\\client\\src\\index.js":"1","C:\\Major Projects\\PlacePrep\\client\\src\\App.js":"2","C:\\Major Projects\\PlacePrep\\client\\src\\store\\configureStore.js":"3","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\reducer.js":"4","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\authActions.js":"5","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Login.js":"6","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Register.js":"7","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js":"8","C:\\Major Projects\\PlacePrep\\client\\src\\components\\mainview\\MainView.js":"9","C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Navbar.js":"10","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js":"11","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js":"12","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js":"13","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js":"14","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js":"15","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js":"16","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js":"17","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js":"18","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js":"19","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\EditQuiz.js":"20","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js":"21","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCardPage.js":"22","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\Coding.js":"23","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js":"24","C:\\Major Projects\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js":"25","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js":"26","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js":"27","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js":"28","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js":"29","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js":"30","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js":"31","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\quizActions.js":"32","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\codeActions.js":"33","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js":"34","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizTimer.js":"35","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizPageSub.js":"36","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizQuesSub.js":"37","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizOptionSub.js":"38","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubmissions.js":"39","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubTabRow.js":"40","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeProblem.js":"41","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\AptiTopicsTemplate.js":"42","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\AddTopics.js":"43","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\CreateAptiQuestion.js":"44","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\practiceProblemReducers.js":"45","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\practiceProblemActions.js":"46","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizPage.js":"47","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizQues.js":"48","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizOption.js":"49","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\ViewAnswer.js":"50","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\EditPracticeProblem.js":"51","C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Home.js":"52","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CodeQuestions.js":"53","C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Spinner.js":"54","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\codeTableRow.js":"55","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\Pagination.js":"56","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\paginate.js":"57","C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\MyModal.js":"58","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CodeTableRow.js":"59","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\RunCodeSuccess.js":"60","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\RunCodeFail.js":"61","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\SubmitCodeSuccess.js":"62","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeSubmissions.js":"63","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeSubTabRow.js":"64","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodingSub.js":"65","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeEditorSub.js":"66","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Resetpassword.js":"67","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\ResPassModal.js":"68","C:\\Major Projects\\PlacePrep\\client\\src\\components\\dashboard\\Dashboard.js":"69","C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Alerts.js":"70","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\alertReducers.js":"71","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\alertActions.js":"72","C:\\Major Projects\\PlacePrep\\client\\src\\components\\dashboard\\DashboardCard.js":"73","C:\\Major Projects\\PlacePrep\\client\\src\\components\\routing\\TestRoute.js":"74"},{"size":339,"mtime":1613570649133,"results":"75","hashOfConfig":"76"},{"size":1969,"mtime":1614860010830,"results":"77","hashOfConfig":"76"},{"size":292,"mtime":1613210742016,"results":"78","hashOfConfig":"76"},{"size":474,"mtime":1614588256762,"results":"79","hashOfConfig":"76"},{"size":5176,"mtime":1614861956780,"results":"80","hashOfConfig":"76"},{"size":4165,"mtime":1614607342068,"results":"81","hashOfConfig":"76"},{"size":5145,"mtime":1614588256305,"results":"82","hashOfConfig":"76"},{"size":6821,"mtime":1614783004206,"results":"83","hashOfConfig":"76"},{"size":2332,"mtime":1614520094101,"results":"84","hashOfConfig":"85"},{"size":2106,"mtime":1614607081163,"results":"86","hashOfConfig":"76"},{"size":3061,"mtime":1614858065299,"results":"87","hashOfConfig":"76"},{"size":6289,"mtime":1614866228749,"results":"88","hashOfConfig":"76"},{"size":5069,"mtime":1614864546860,"results":"89","hashOfConfig":"76"},{"size":8126,"mtime":1614783160783,"results":"90","hashOfConfig":"76"},{"size":5100,"mtime":1614867058774,"results":"91","hashOfConfig":"76"},{"size":787,"mtime":1613038343146,"results":"92","hashOfConfig":"76"},{"size":3042,"mtime":1614605910786,"results":"93","hashOfConfig":"76"},{"size":8328,"mtime":1614607342068,"results":"94","hashOfConfig":"76"},{"size":11053,"mtime":1614606787901,"results":"95","hashOfConfig":"76"},{"size":10209,"mtime":1614606758649,"results":"96","hashOfConfig":"76"},{"size":2578,"mtime":1614860195835,"results":"97","hashOfConfig":"76"},{"size":1193,"mtime":1614606666110,"results":"98","hashOfConfig":"76"},{"size":1988,"mtime":1614508676759,"results":"99","hashOfConfig":"76"},{"size":16443,"mtime":1614599836217,"results":"100","hashOfConfig":"76"},{"size":853,"mtime":1614861290506,"results":"101","hashOfConfig":"76"},{"size":7856,"mtime":1614606758698,"results":"102","hashOfConfig":"76"},{"size":4238,"mtime":1614865810788,"results":"103","hashOfConfig":"76"},{"size":3610,"mtime":1614863777152,"results":"104","hashOfConfig":"76"},{"size":2180,"mtime":1614008177486,"results":"105","hashOfConfig":"76"},{"size":545,"mtime":1612952888849,"results":"106","hashOfConfig":"76"},{"size":6578,"mtime":1614521198240,"results":"107","hashOfConfig":"76"},{"size":9625,"mtime":1614865863148,"results":"108","hashOfConfig":"76"},{"size":7581,"mtime":1614866525225,"results":"109","hashOfConfig":"76"},{"size":725,"mtime":1614606600784,"results":"110","hashOfConfig":"76"},{"size":1755,"mtime":1614606831217,"results":"111","hashOfConfig":"76"},{"size":2048,"mtime":1614606315760,"results":"112","hashOfConfig":"76"},{"size":1821,"mtime":1614606388973,"results":"113","hashOfConfig":"76"},{"size":1096,"mtime":1614606315735,"results":"114","hashOfConfig":"76"},{"size":11723,"mtime":1614606270028,"results":"115","hashOfConfig":"76"},{"size":2233,"mtime":1614865379019,"results":"116","hashOfConfig":"76"},{"size":1089,"mtime":1614606993128,"results":"117","hashOfConfig":"76"},{"size":5048,"mtime":1614868367662,"results":"118","hashOfConfig":"76"},{"size":9518,"mtime":1614606927786,"results":"119","hashOfConfig":"76"},{"size":5540,"mtime":1614607019102,"results":"120","hashOfConfig":"76"},{"size":3279,"mtime":1614867056652,"results":"121","hashOfConfig":"76"},{"size":5898,"mtime":1614868115037,"results":"122","hashOfConfig":"76"},{"size":2068,"mtime":1614868538205,"results":"123","hashOfConfig":"76"},{"size":2240,"mtime":1614012678800,"results":"124","hashOfConfig":"76"},{"size":1197,"mtime":1613926540827,"results":"125","hashOfConfig":"76"},{"size":817,"mtime":1613985192532,"results":"126","hashOfConfig":"76"},{"size":6360,"mtime":1614606993128,"results":"127","hashOfConfig":"76"},{"size":3729,"mtime":1614859807566,"results":"128","hashOfConfig":"76"},{"size":9035,"mtime":1614607341769,"results":"129","hashOfConfig":"76"},{"size":358,"mtime":1614008177597,"results":"130","hashOfConfig":"76"},{"size":2504,"mtime":1614159827515,"results":"131","hashOfConfig":"85"},{"size":1218,"mtime":1614008177457,"results":"132","hashOfConfig":"76"},{"size":211,"mtime":1614008177484,"results":"133","hashOfConfig":"76"},{"size":1910,"mtime":1614081232801,"results":"134","hashOfConfig":"76"},{"size":3298,"mtime":1614866825677,"results":"135","hashOfConfig":"76"},{"size":1125,"mtime":1614430326009,"results":"136","hashOfConfig":"76"},{"size":523,"mtime":1614425645853,"results":"137","hashOfConfig":"76"},{"size":1098,"mtime":1614430356296,"results":"138","hashOfConfig":"76"},{"size":8407,"mtime":1614519953580,"results":"139","hashOfConfig":"76"},{"size":1560,"mtime":1614511407157,"results":"140","hashOfConfig":"76"},{"size":2450,"mtime":1614519237572,"results":"141","hashOfConfig":"76"},{"size":7013,"mtime":1614521073190,"results":"142","hashOfConfig":"76"},{"size":2522,"mtime":1614520092836,"results":"143","hashOfConfig":"76"},{"size":1935,"mtime":1614520092790,"results":"144","hashOfConfig":"76"},{"size":14163,"mtime":1614607180481,"results":"145","hashOfConfig":"76"},{"size":460,"mtime":1614588256574,"results":"146","hashOfConfig":"76"},{"size":400,"mtime":1614588256735,"results":"147","hashOfConfig":"76"},{"size":428,"mtime":1614588256624,"results":"148","hashOfConfig":"76"},{"size":903,"mtime":1614607131600,"results":"149","hashOfConfig":"76"},{"size":656,"mtime":1614857748805,"results":"150","hashOfConfig":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"16xu8rh",{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"1u3doc7",{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"153"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"153"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"153"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"153"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"153"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"153"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"153"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"153"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"153"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"153"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"153"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"153"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"153"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Major Projects\\PlacePrep\\client\\src\\index.js",[],["316","317"],"C:\\Major Projects\\PlacePrep\\client\\src\\App.js",["318","319","320"],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\configureStore.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\reducer.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\authActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Login.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Register.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\mainview\\MainView.js",[],["321","322"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Navbar.js",["323"],"import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/authActions\";\r\n\r\nconst Navbars = (props) => {\r\n    const { logout, onClick } = props;\r\n    const { isAuthenticated, user } = props.auth;\r\n\r\n\r\n    const onlogout = () => {\r\n        logout();\r\n    };\r\n\r\n    const authLinks = (\r\n        <Fragment>\r\n            <span>\r\n                <img className=\"nav__user-img\" src={`/img/users/${user.photo}`} alt={user.name} />\r\n                <span className='user-name'>Hello {user && user.name.split(' ')[0]}</span>\r\n            </span>\r\n            <span className=\"logout-div\">\r\n                <a href=\"#\" onClick={onlogout}>\r\n                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                    <span className=\"hide-sm\"> Logout</span>\r\n                </a>\r\n            </span>\r\n        </Fragment>\r\n    );\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <Link to=\"/register\">Register</Link>\r\n            <Link to=\"/login\">Login</Link>\r\n        </Fragment>\r\n    );\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n            <div id='sidebar-btn' onClick={onClick} >\r\n                <i className='fas fa-bars menu-icon' ></i>\r\n            </div>\r\n            <Navbar.Brand className=\"brand-name\">\r\n                <img\r\n                    alt=\"\"\r\n                    src=\"./assets/img/logo.png\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{\" \"}\r\n                PlacePrep\r\n            </Navbar.Brand>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    {isAuthenticated ? authLinks : guestLinks}\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbars);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\EditQuiz.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js",["324"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCardPage.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\Coding.js",["325"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"./Coding.css\";\r\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\r\nimport CodeDescription from \"./CodeDescription\";\r\nimport CodingSolution from \"./CodingSolution\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestion } from \"../../store/actions/codeActions\";\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Coding = (props) => {\r\n\r\n    const { getQuestion } = props;\r\n    const { current } = props.code;\r\n    const { slug } = useParams();\r\n\r\n    useEffect(() => {\r\n        getQuestion(slug);\r\n    }, []);\r\n\r\n    const [key, setKey] = useState(\"description\");\r\n\r\n    return (\r\n        <Fragment>\r\n            { current !== null ?\r\n                <Row className=\"coding-container\">\r\n                    <Col>\r\n                        <Tabs className='navTabs' activeKey={key} onSelect={(e) => setKey(e)}>\r\n                            <Tab eventKey=\"description\" title={<span><i className=\"fa fa-list-alt\" aria-hidden=\"true\"></i>Description</span>}>\r\n                                <CodeDescription current={current} />\r\n                            </Tab>\r\n                            {/* {current.solution &&} */}\r\n                            <Tab eventKey=\"solution\" title={<span><i className=\"fa fa-flask\" aria-hidden=\"true\"></i>Solution</span>}>\r\n                                <CodingSolution current={current} />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Col>\r\n                    <Col className=\"editor-container\">\r\n                        <CodeEditor slugProp={slug} inputs={current.noOfInputs} quesId={current._id} />\r\n                    </Col>\r\n                </Row> : <Spinner />}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuestion })(Coding);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js",["326"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./createCode.css\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    addQuestion,\r\n    getQuestion,\r\n    updateQuestion,\r\n    clearCurrent,\r\n    clearCodeErrors,\r\n    clrCodeCreateSuccess\r\n} from \"../../store/actions/codeActions\";\r\nimport { setAlert } from \"../../store/actions/alertActions\";\r\n\r\nconst CreateCodeQuestion = (props) => {\r\n    const {\r\n        addQuestion,\r\n        getQuestion,\r\n        updateQuestion,\r\n        clearCurrent,\r\n        clearCodeErrors,\r\n        clrCodeCreateSuccess,\r\n        setAlert,\r\n    } = props;\r\n    const { current, error, isCreated } = props.code;\r\n    const [codeQuestion, setCodeQuestion] = useState({\r\n        title: \"\",\r\n        difficulty: \"10\",\r\n        description: \"\",\r\n        testcases: \"\",\r\n        sampleInputs: [],\r\n        solution: \"\",\r\n        noOfInputs: \"\"\r\n    });\r\n    const [lastId, setLastId] = useState(0);\r\n    const [clickSubmit, setClickSubmit] = useState(false);\r\n    const [sampleArray, setSampleArray] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (props.match.path.includes(\"editCodeQuestion\")) {\r\n            getQuestion(props.match.params.slug);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isCreated) {\r\n            if (props.match.path.includes(\"editCodeQuestion\")) {\r\n                setAlert('Question has been updated.', 'success');\r\n            }\r\n            else {\r\n                setAlert('Question has been created.', 'success');\r\n                setCodeQuestion({\r\n                    title: \"\",\r\n                    difficulty: \"10\",\r\n                    description: \"\",\r\n                    testcases: \"\",\r\n                    sampleInputs: [],\r\n                    solution: \"\",\r\n                    noOfInputs: \"\"\r\n                });\r\n                setSampleArray([]);\r\n            }\r\n            clrCodeCreateSuccess();\r\n        }\r\n\r\n\r\n    }, [isCreated]);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setAlert(error, \"danger\");\r\n            clearCodeErrors();\r\n        }\r\n        if (current !== null && props.match.path.includes(\"editCodeQuestion\")) {\r\n            props.history.replace({\r\n                pathname: `/editCodeQuestion/${current.slug}`,\r\n            });\r\n            setCodeQuestion(current);\r\n            if (current.sampleInputs) {\r\n                const newArray = current.sampleInputs.map((curr) => ({\r\n                    ...curr,\r\n                }));\r\n                setSampleArray(newArray);\r\n                setLastId(current.sampleInputs.length - 1);\r\n            }\r\n        } else {\r\n            clearCurrent();\r\n            if (\r\n                props.match.path.includes(\"createCodeQuestion\") &&\r\n                codeQuestion.title !== \"\" &&\r\n                current === null &&\r\n                !clickSubmit\r\n            ) {\r\n\r\n                setCodeQuestion({\r\n                    title: \"\",\r\n                    difficulty: \"10\",\r\n                    description: \"\",\r\n                    testcases: \"\",\r\n                    sampleInputs: [],\r\n                    solution: \"\",\r\n                    noOfInputs: \"\"\r\n                });\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [current, error, props.match.path]);\r\n\r\n    const handleAddSampleClick = () => {\r\n        const newSampleObj = {\r\n            id: lastId + 1,\r\n            sampleInput: \"\",\r\n            sampleOutput: \"\",\r\n        };\r\n        setLastId(lastId + 1);\r\n\r\n        const newSampleArray = [...sampleArray, newSampleObj];\r\n        setSampleArray(newSampleArray);\r\n    };\r\n\r\n    const handleOnSampleChange = (e, index) => {\r\n        const newSampleArray = [...sampleArray];\r\n        newSampleArray[index][e.target.name] = e.target.value;\r\n\r\n        setSampleArray(newSampleArray);\r\n    };\r\n\r\n    const handleDeleteSample = (e, eleId) => {\r\n        const newSampleArray = sampleArray.filter((ele) => {\r\n            return ele.id !== eleId;\r\n        });\r\n        setSampleArray(newSampleArray);\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setCodeQuestion({\r\n            ...codeQuestion,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        setClickSubmit(true);\r\n        if (\r\n            codeQuestion.title === \"\" ||\r\n            codeQuestion.description === \"\" ||\r\n            codeQuestion.testcases === \"\" ||\r\n            codeQuestion.noOfInputs === \"\"\r\n        ) {\r\n            setAlert(\"Please enter all fields\", \"danger\");\r\n        } else {\r\n            let temp = JSON.parse(JSON.stringify(codeQuestion));\r\n            temp.sampleInputs = sampleArray;\r\n\r\n            setCodeQuestion({ ...codeQuestion, sampleInputs: sampleArray });\r\n\r\n            current !== null\r\n                ? updateQuestion(temp)\r\n                : addQuestion(temp);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className=\"container-createCodeQuest\">\r\n            <h3 className=\"text-center mb-2 pt-4 \"> Create Coding Question</h3>\r\n            <div className=\"title-border mb-4\">\r\n                <span></span>\r\n            </div>\r\n            <div className=\"codequestForm \">\r\n                <Form encType=\"multipart/form-data\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Form.Group controlId=\"quiztitle\">\r\n                                <Form.Label>\r\n                                    <b>Title</b>\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    className=\"createC-inputFiled\"\r\n                                    type=\"text\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Enter Title\"\r\n                                    value={codeQuestion.title}\r\n                                    onChange={handleOnChange}\r\n                                />\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Form.Group controlId=\"quiztitle\">\r\n                                <Form.Label>\r\n                                    <b>Description</b>\r\n                                </Form.Label>\r\n                                <TextareaAutosize\r\n                                    className=\"createC-inputFiled questiontextarea\"\r\n                                    placeholder=\"Provide Description....\"\r\n                                    name=\"description\"\r\n                                    value={codeQuestion.description}\r\n                                    onChange={handleOnChange}\r\n                                ></TextareaAutosize>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n\r\n                    <h3 className=\"text-center  mb-2 pt-1 \">Add Samples</h3>\r\n                    <div className=\"title-border mb-4\">\r\n                        <span></span>\r\n                    </div>\r\n                    {/* Sampless starts from below */}\r\n                    {sampleArray.map((ele, index) => {\r\n                        return (\r\n                            <div className=\"\" key={ele.id}>\r\n                                <div className=\"row \">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <Form.Group controlId=\"quiztitle\">\r\n                                            <Form.Label>\r\n                                                <b>Sample Input</b>\r\n                                            </Form.Label>\r\n                                            <TextareaAutosize\r\n                                                className=\"createC-inputFiled questiontextarea\"\r\n                                                placeholder=\"\"\r\n                                                name=\"sampleInput\"\r\n                                                value={ele.sampleInput}\r\n                                                onChange={(e) =>\r\n                                                    handleOnSampleChange(\r\n                                                        e,\r\n                                                        index\r\n                                                    )\r\n                                                }\r\n                                            ></TextareaAutosize>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <Form.Group controlId=\"quiztitle\">\r\n                                            <Form.Label>\r\n                                                <b>Sample Output</b>\r\n                                            </Form.Label>\r\n                                            <TextareaAutosize\r\n                                                className=\"createC-inputFiled questiontextarea\"\r\n                                                placeholder=\"\"\r\n                                                name=\"sampleOutput\"\r\n                                                value={ele.sampleOutput}\r\n                                                onChange={(e) =>\r\n                                                    handleOnSampleChange(\r\n                                                        e,\r\n                                                        index\r\n                                                    )\r\n                                                }\r\n                                            ></TextareaAutosize>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row \">\r\n                                    <div className=\"col-sm-12 \">\r\n                                        <Button\r\n                                            className=\"delsamplebtn mb-2\"\r\n                                            onClick={(e) =>\r\n                                                handleDeleteSample(e, ele.id)\r\n                                            }\r\n                                        >\r\n                                            {\" \"}\r\n                                            Delete{\" \"}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n                    {/* samples end here */}\r\n                    <div className=\" text-center\">\r\n                        <Button\r\n                            className=\" addsample mt-3\"\r\n                            onClick={handleAddSampleClick}\r\n                        >\r\n                            {\" \"}\r\n                            Add Examples{\" \"}\r\n                        </Button>\r\n                    </div>\r\n                    <hr></hr>\r\n\r\n                    <h3 className=\"text-center  mb-2 pt-1 \">Add TestCases</h3>\r\n                    <div className=\"title-border mb-4\">\r\n                        <span></span>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Form.Group controlId=\"quiztitle\">\r\n                                <TextareaAutosize\r\n                                    className=\"createC-inputFiled questiontextarea \"\r\n                                    minRows=\"2\"\r\n                                    placeholder=\"\"\r\n                                    name=\"testcases\"\r\n                                    value={codeQuestion.testcases}\r\n                                    onChange={handleOnChange}\r\n                                ></TextareaAutosize>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <hr className=\"mt-2\"></hr>\r\n\r\n                    <div className=\"row pt-2 pb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <Form.Label>\r\n                                <b className=\"mr-2\">Solution </b>\r\n                            </Form.Label>\r\n                            <TextareaAutosize\r\n                                className=\"createC-inputFiled questiontextarea \"\r\n                                minRows=\"2\"\r\n                                placeholder=\"\"\r\n                                name=\"solution\"\r\n                                value={codeQuestion.solution}\r\n                                onChange={handleOnChange}\r\n                            ></TextareaAutosize>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"row pt-2 pb-3\">\r\n                        <div className=\"col-sm-2 pt-1 difflabel\">\r\n                            <Form.Label>\r\n                                <b className=\"\">No. of inputs</b>\r\n                            </Form.Label>\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Form.Group controlId=\"noOfInputs\" >\r\n                                <Form.Control className=\"quiz-inputFiled quizDuration\" name=\"noOfInputs\" value={codeQuestion.noOfInputs} onChange={handleOnChange} type=\"number\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-sm-2 pt-1 difflabel\">\r\n                            <Form.Label>\r\n                                <b className=\"\"> Set Difficulty </b>\r\n                            </Form.Label>\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Form.Group controlId=\"SelectDifficulty\">\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"difficulty\"\r\n                                    className=\"createC-inputFiled diffdrop \"\r\n                                    value={codeQuestion.difficulty}\r\n                                    onChange={handleOnChange}\r\n                                >\r\n                                    <option\r\n                                        value={\"10\"}\r\n                                        className=\"optionSelect\"\r\n                                    >\r\n                                        Easy\r\n                                    </option>\r\n                                    <option\r\n                                        value={\"20\"}\r\n                                        className=\"optionSelect\"\r\n                                    >\r\n                                        Medium\r\n                                    </option>\r\n                                    <option\r\n                                        value={\"30\"}\r\n                                        className=\"optionSelect\"\r\n                                    >\r\n                                        Hard\r\n                                    </option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\" text-center\">\r\n                        <Button\r\n                            className=\"createquestbtn mb-4\"\r\n                            onClick={handleOnSubmit}\r\n                        >\r\n                            {current !== null\r\n                                ? \" Edit Question \"\r\n                                : \" Create Question \"}\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    addQuestion,\r\n    getQuestion,\r\n    updateQuestion,\r\n    clearCurrent,\r\n    clearCodeErrors,\r\n    clrCodeCreateSuccess,\r\n    setAlert,\r\n})(CreateCodeQuestion);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js",["327"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js",["328","329"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js",["330","331"],"import React, { Fragment, useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/eclipse.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/blackboard.css\";\r\nimport \"codemirror/theme/base16-light.css\";\r\nimport \"codemirror/theme/ayu-mirage.css\";\r\nimport \"codemirror/addon/edit/matchbrackets\";\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport \"codemirror/addon/scroll/simplescrollbars.css\";\r\nimport \"codemirror/addon/scroll/simplescrollbars\";\r\nimport \"codemirror/mode/clike/clike\";\r\nimport \"codemirror/mode/python/python\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    runCode,\r\n    submitCode,\r\n    resetCode,\r\n} from \"../../store/actions/codeActions\";\r\nimport RunCodeSuccess from './RunCodeSuccess';\r\nimport RunCodeFail from './RunCodeFail';\r\nimport SubmitCodeSuccess from './SubmitCodeSuccess';\r\n\r\n// require(\"codemirror/addon/scroll/simplescrollbars.js\");\r\n\r\nconst CodeEditor = (props) => {\r\n    const { auth: { user }, code: { userCode, runSubmit }, runCode, submitCode, resetCode } = props;\r\n\r\n    const [editorSelect, setEditorSelect] = useState({\r\n        lang: \"text/x-csrc\",\r\n        theme: \"material\",\r\n        mime: \"text/x-csrc\",\r\n    });\r\n\r\n    const [showConsole, setShowConsole] = useState(false);\r\n    const [code, setCode] = useState(\"\");\r\n    const handleOnChange = (e) => {\r\n        let selectedMime = e.target.selectedOptions[0].getAttribute(\r\n            \"data-mime\"\r\n        );\r\n        setEditorSelect({\r\n            ...editorSelect,\r\n            [e.target.name]: e.target.value,\r\n            mime: selectedMime,\r\n        });\r\n    };\r\n    let options = {\r\n        lineNumbers: true,\r\n        mode: editorSelect.lang,\r\n        theme: editorSelect.theme,\r\n        mime: editorSelect.mime,\r\n        styleActiveLine: true,\r\n        lineWrapping: true,\r\n        matchBrackets: true,\r\n        autoCloseBrackets: true,\r\n        scrollbarStyle: \"overlay\",\r\n    };\r\n\r\n    // const handleOnBeforeChangeCode = (editor, data, value) => {\r\n    //     setCode(value)\r\n\r\n    // }\r\n    const handleOnRun = () => {\r\n        setShowConsole(true);\r\n        runCode({ code, lang: editorSelect.lang, slug: props.slugProp, noOfInputs: props.inputs });\r\n    };\r\n\r\n\r\n    const handleOnSubmit = () => {\r\n        setShowConsole(true);\r\n        submitCode({ code, lang: editorSelect.lang, slug: props.slugProp, noOfInputs: props.inputs }, props.quesId);\r\n    };\r\n\r\n    const handleOnChangeCode = (editor, data, newCode) => {\r\n        setCode(newCode);\r\n    };\r\n\r\n    const handleOnClick = (e) => {\r\n        if (e.target.value === \"resetCode\") {\r\n            setCode(\"\");\r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <div className=\"head\">\r\n                <Form inline className=\"editor-option-form\">\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"lang\"\r\n                        className=\"mr-sm-2 editor-select\"\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        <option value=\"text/x-csrc\" data-mime=\"text/x-csrc\">\r\n                            C\r\n                        </option>\r\n                        <option value=\"text/x-c++src\" data-mime=\"text/x-c++src\">\r\n                            C++\r\n                        </option>\r\n                        <option value=\"text/x-java\" data-mime=\"text/x-java\">\r\n                            Java\r\n                        </option>\r\n                        <option value=\"text/x-python\" data-mime=\"text/x-python\">\r\n                            Python\r\n                        </option>\r\n                    </Form.Control>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"theme\"\r\n                        className=\"mr-sm-2 editor-select\"\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        <option value=\"material\">Material</option>\r\n                        <option value=\"ayu-mirage\">Ayu Mirage</option>\r\n                        <option value=\"base16-light\">light</option>\r\n                        <option value=\"blackboard\">Blackboard</option>\r\n                        <option value=\"eclipse\">Eclipse</option>\r\n                    </Form.Control>\r\n                </Form>\r\n            </div>\r\n            <CodeMirror\r\n                value={code}\r\n                options={options}\r\n                autoFocus={true}\r\n                onBeforeChange={handleOnChangeCode}\r\n                onChange={handleOnChangeCode}\r\n            />\r\n            <div className=\"editor-controls\">\r\n                <div>\r\n                    <Button\r\n                        className=\"button reset-code-btn\"\r\n                        value=\"resetCode\"\r\n                        onClick={handleOnClick}\r\n                    >\r\n                        <i className=\"fa fa-undo\" aria-hidden=\"true\"></i>\r\n                        Reset Code\r\n                    </Button>\r\n                </div>\r\n                <div className=\"editor-actions\">\r\n                    <Button className=\"button run-code-btn\" onClick={handleOnRun}>\r\n                        <i className=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                        <span>Run Code</span>\r\n                    </Button>\r\n                    {user?.role === 'student' && <Button className=\"button submit-code-btn\" onClick={handleOnSubmit}>Submit</Button>}\r\n                </div>\r\n            </div>\r\n            <div className=\"console-container\" style={{ display: `${showConsole ? 'block' : 'none'}` }}>\r\n                {userCode ? (\r\n                    <div style={{ padding: '20px', backgroundColor: 'aliceblue' }} >\r\n                        {userCode.error ? (\r\n                            <RunCodeFail userCodeObj={userCode} />\r\n                        )\r\n                            : (\r\n                                runSubmit === 'run' ? <RunCodeSuccess userCodeObj={userCode} />\r\n                                    : <SubmitCodeSuccess userCodeObj={userCode} />\r\n\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                )\r\n                    : <h4>Processing...</h4>}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { runCode, submitCode, resetCode })(\r\n    CodeEditor\r\n);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\quizActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\codeActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizTimer.js",["332"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst QuizTimer = (props) => {\r\n\r\n    let durInSec = Math.round((new Date(props.endAt).getTime() - new Date().getTime()) / 1000);\r\n    let durMin = Math.floor(durInSec / 60);\r\n    let durSec = durInSec % 60;\r\n\r\n    const [countdownDate, setCountdownDate] = useState(new Date(props.endAt).getTime());\r\n    const [timer, setTimer] = useState({\r\n        minutes: durMin,\r\n        seconds: durSec\r\n    });\r\n\r\n    let myInterval;\r\n    useEffect(() => {\r\n        // eslint-disable-next-line\r\n        myInterval = setInterval(() => setNewTime(), 1000);\r\n\r\n        return () => clearInterval(myInterval);\r\n\r\n    }, [timer]);\r\n\r\n    const setNewTime = () => {\r\n        if (timer.seconds <= 0 && timer.minutes <= 0) {\r\n            if(timer.seconds > -6 && timer.minutes > -2){\r\n                props.triggerSubmit();\r\n            }\r\n            return clearInterval(myInterval);\r\n        }\r\n        else if (countdownDate) {\r\n            const currentTime = new Date().getTime();\r\n\r\n            const distanceToDate = countdownDate - currentTime;\r\n\r\n            let minutes = Math.floor(\r\n                (distanceToDate % (1000 * 60 * 60)) / (1000 * 60),\r\n            );\r\n            let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000);\r\n            setTimer({ minutes, seconds });\r\n        }\r\n    };\r\n\r\n    return (\r\n        (timer.minutes <= 0 && timer.seconds <= 0) ?\r\n            (<span className='time_sec float-right mt-1 pr-1' >Time's Up!</span>)\r\n            :\r\n        (<span className='time_sec float-right mt-1 pr-1' >{timer.minutes < 10 ? `0${timer.minutes}` : timer.minutes}:{timer.seconds < 10 ? `0${timer.seconds}` : timer.seconds}</span>)\r\n    );\r\n};\r\n\r\nexport default QuizTimer;\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizPageSub.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizQuesSub.js",["333"],"import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport QuizOptionSub from './QuizOptionSub';\r\nimport '../quiz.css';\r\nimport { connect } from 'react-redux';\r\nimport { submitQuiz } from '../../../store/actions/quizActions';\r\n\r\nconst QuizQues = (props) => {\r\n    const { userAns } = props;\r\n\r\n    // const [userAnswers] = useState(userAns);\r\n    const [userAnswers, setUserAnswers] = useState(userAns);\r\n\r\n    return (\r\n        <>\r\n            { props.questions.map((ele, index) => (\r\n                userAnswers ? (\r\n                    <Accordion key={index} className='my-2'>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    {`${index + 1}.`} {ele.question}\r\n                                </Card.Title>\r\n                                {ele.answers.map((ansEle, ansIdx) => <QuizOptionSub\r\n                                    key={ansIdx}\r\n                                    isCorrect={ansEle === ele.correctAnswer}\r\n                                    isClicked={ansEle === userAnswers[index].selectedAnswer}\r\n                                    text={ansEle} />)}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Accordion>) :\r\n                    <h3 key={index}>Loading...</h3>)\r\n            )}\r\n            {/* <div className=\"text-center\" onClick={handleOnClick} style={{ width: '200px', margin: 'auto' }}>\r\n                <Button className=\"createquiz mb-4\"  >Submit Quiz</Button>\r\n            </div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitQuiz })(QuizQues);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizOptionSub.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubmissions.js",["334","335"],"import React, { useEffect, Fragment, useState, useRef } from 'react';\r\nimport \"../../code/CodeQuestDisp.css\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport QuizSubTabRow from './QuizSubTabRow';\r\nimport Spinner from '../../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport Pagination from '../../code/Pagination';\r\nimport paginate from '../../code/paginate';\r\nimport {\r\n    getQuizSubmissions,\r\n    getQuizSubmission,\r\n    filterQuizSubmissions,\r\n    clearFilterQuizSub\r\n} from '../../../store/actions/quizActions';\r\n\r\nconst QuizSubmissions = (props) => {\r\n    const { auth: { user },\r\n        quiz: { submissions, filteredSubmissions },\r\n        getQuizSubmissions,\r\n        filterQuizSubmissions,\r\n        clearFilterQuizSub,\r\n        match } = props;\r\n\r\n    const text = useRef('');\r\n\r\n    const [pageDetails, setPageDetails] = useState({\r\n        pageSize: 10,\r\n        currentPage: 1,\r\n        sortColumn: { path: \"submittedAt\", order: \"asc\" },\r\n    });\r\n    const { pageSize, currentPage, sortColumn } = pageDetails;\r\n\r\n\r\n    const { quizId } = match.params;\r\n\r\n    useEffect(() => {\r\n        if (user?.role === 'student') {\r\n            getQuizSubmissions({ user: user._id });\r\n        }\r\n        else if (user?.role === 'faculty') {\r\n            getQuizSubmissions({ quiz: quizId });\r\n        }\r\n        return () => {\r\n        };\r\n\r\n        // eslint-disable-next-line\r\n    }, [user]);\r\n\r\n    if (submissions !== null && submissions.length === 0) {\r\n        return <h4>Currently There are No Quiz Submissions.</h4>;\r\n    }\r\n\r\n    const handleFilterChange = (e) => {\r\n        if (text.current.value !== \"\") {\r\n            filterQuizSubmissions(e.target.value, user?.role === 'student' ? true : false);\r\n        } else {\r\n            clearFilterQuizSub();\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        setPageDetails({ ...pageDetails, currentPage: page });\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setPageDetails({ ...pageDetails, pageSize: e.target.value });\r\n    };\r\n\r\n    const handleSort = (path) => {\r\n        const sortColumn = { ...pageDetails.sortColumn };\r\n        if (sortColumn.path === path)\r\n            sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n        else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = \"asc\";\r\n        }\r\n        setPageDetails({ ...pageDetails, sortColumn });\r\n    };\r\n\r\n    const filteredSub = filteredSubmissions !== null ? filteredSubmissions : submissions;\r\n\r\n    const sortedSub = _.orderBy(\r\n        filteredSub,\r\n        [\r\n            function (item) {\r\n                if (sortColumn.path === \"score\") {\r\n                    return item.score;\r\n                }\r\n                else if (sortColumn.path === 'name') {\r\n                    return item.user.name;\r\n                }\r\n                else if (sortColumn.path === 'submittedAt') {\r\n                    return new Date(item.createdAt).getTime();\r\n                }\r\n                else if (sortColumn.path === 'timeTaken') {\r\n                    let min = item.timeTaken.minutes;\r\n                    let sec = item.timeTaken.seconds;\r\n                    let totTimeInSec = (min * 60) + sec;\r\n                    return totTimeInSec;\r\n                }\r\n                else if (sortColumn.path === 'title') {\r\n                    return item.quiz.title;\r\n                }\r\n                else {\r\n                    return item.user.name.toLowerCase();\r\n                };\r\n\r\n            },\r\n        ],\r\n        [sortColumn.order]\r\n    );\r\n\r\n    const newSubmissions = paginate(sortedSub, currentPage, pageSize);\r\n    // const subNumber = _.range(1, newSubmissions.length + 1);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            {submissions !== null ? (<Container className=\"container-codeQuest\">\r\n                <h3 className=\"text-center  mb-2 pt-4 \">\r\n                    Quiz Submissions\r\n        </h3>\r\n                <div className=\"title-border mb-4\">\r\n                    <span></span>\r\n                </div>\r\n                <div className=\"displayQuest pb-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 pb-2\">\r\n                            <Form>\r\n                                <Form.Group controlId=\"codingquestionSearch\">\r\n                                    <Form.Control\r\n                                        className=\" codingQuestSearch\"\r\n                                        type=\"text\"\r\n                                        ref={text}\r\n                                        placeholder=\"Search submissions\"\r\n                                        onChange={handleFilterChange}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <div className='table-responsive' >\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(`${user?.role === 'student' ? 'title' : 'name'}`)}>{user?.role === 'student' ? 'Title' : 'Name'}</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(\"submittedAt\")} >Submitted At</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(\"timeTaken\")} >Time Taken</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(\"score\")} >Score</th>\r\n                                    {(user?.role === 'faculty' || user?.role === 'admin') && <th scope=\"col\">Operation</th>}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tbodyCode\">\r\n                                {/* {submissions.map((ele, index) => <QuizSubTabRow key={ele._id} name={ele.user.name} eleObj={ele} idx={index} />)} */}\r\n                                {newSubmissions.map((ele, index) => <QuizSubTabRow key={ele._id} name={ele.user.name} eleObj={ele} idx={index} />)}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"ml-3 \">\r\n                            <Form>\r\n                                <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        className=\"dispCode-inputFiled rowsPerPg\"\r\n                                        value={pageSize}\r\n                                        onChange={handleOnChange}\r\n                                    >\r\n                                        <option value={10} className=\"optionSelect\">\r\n                                            10\r\n                                </option>\r\n                                        <option value={25} className=\"optionSelect\">\r\n                                            25\r\n                                </option>\r\n                                        <option value={50} className=\"optionSelect\">\r\n                                            50\r\n                                </option>\r\n                                        <option value={100} className=\"optionSelect\">\r\n                                            100\r\n                                </option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                        <span className=\"labelRowsPerPg mt-2 col-4\">\r\n                            rows per page.\r\n                </span>\r\n                        <Pagination\r\n                            itemCounts={filteredSub.length}\r\n                            pageSize={pageSize}\r\n                            currentPage={currentPage}\r\n                            onPageChange={handlePageChange}\r\n                        />\r\n\r\n                        <div className=\" paginatt \">\r\n                            <nav aria-label=\"Page navigation example\">\r\n                                <ul className=\"pagination nav2\">\r\n                                    <li className=\"\">\r\n                                        <a\r\n                                            className=\"page-link\"\r\n                                            href=\"#\"\r\n                                            aria-label=\"Previous\"\r\n                                        >\r\n                                            <span\r\n                                                aria-hidden=\"true\"\r\n                                                className=\"pagntColor\"\r\n                                            >\r\n                                                &laquo;\r\n                                    </span>\r\n                                        </a>\r\n                                    </li>\r\n                                    <li className=\" \">\r\n                                        <a\r\n                                            className=\"page-link pagntColor\"\r\n                                            href=\"#1\"\r\n                                        >\r\n                                            1\r\n                                </a>\r\n                                    </li>\r\n                                    <li className=\"active\">\r\n                                        <a\r\n                                            className=\"page-link pagntColor \"\r\n                                            href=\"#2\"\r\n                                        >\r\n                                            2\r\n                                </a>\r\n                                    </li>\r\n                                    <li className=\" \">\r\n                                        <a\r\n                                            className=\"page-link pagntColor \"\r\n                                            href=\"#3\"\r\n                                        >\r\n                                            3\r\n                                </a>\r\n                                    </li>\r\n                                    <li className=\"\">\r\n                                        <a\r\n                                            className=\"page-link\"\r\n                                            href=\"#\"\r\n                                            aria-label=\"Next\"\r\n                                        >\r\n                                            <span\r\n                                                aria-hidden=\"true\"\r\n                                                className=\"pagntColor\"\r\n                                            >\r\n                                                &raquo;\r\n                                    </span>\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>) :\r\n                (\r\n                    <Spinner />\r\n                )\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getQuizSubmissions,\r\n    getQuizSubmission,\r\n    filterQuizSubmissions,\r\n    clearFilterQuizSub,\r\n})(QuizSubmissions);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubTabRow.js",["336"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeProblem.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\AptiTopicsTemplate.js",["337"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\AddTopics.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\CreateAptiQuestion.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\practiceProblemReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\practiceProblemActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizPage.js",["338"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizQues.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizOption.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\ViewAnswer.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\EditPracticeProblem.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Home.js",["339","340"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CodeQuestions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\codeTableRow.js",["341","342","343","344"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteQuestion } from \"../../store/actions/codeActions\";\r\n\r\nconst codeTableRow = ({ question, id, user, deleteQuestion }) => {\r\n    function capitalize(s) {\r\n        return s[0].toUpperCase() + s.slice(1);\r\n    }\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{id}</th>\r\n            <td>\r\n                <Link className=\"questTitle\" to={`/code/${question._id}`}>\r\n                {capitalize(question.title)}\r\n                </Link>\r\n            </td>\r\n            <td className=\"\">\r\n                <span>\r\n                    <a\r\n                        className=\"fa fa-book questSol\"\r\n                        aria-hidden=\"true\"\r\n                        href=\"#\"\r\n                    ></a>\r\n                </span>\r\n            </td>\r\n            <td className=\"\">\r\n                {question.difficulty === \"easy\" && (\r\n                    <span className=\" diffMod badge badgeSuccess \">\r\n                        {capitalize(question.difficulty)}\r\n                    </span>\r\n                )}\r\n                {question.difficulty === \"medium\" && (\r\n                    <span className=\" diffMod badge badgeWarning \">\r\n                        {capitalize(question.difficulty)}\r\n                    </span>\r\n                )}\r\n                {question.difficulty === \"hard\" && (\r\n                    <span className=\" diffMod badge badgeDanger \">\r\n                        {capitalize(question.difficulty)}\r\n                    </span>\r\n                )}\r\n            </td>\r\n            <td>53.4 %</td>\r\n            {/* {user.role === 'faculty' &&  */}\r\n            <td>\r\n                <span>\r\n                    <Link\r\n                        className=\"fa fa-pencil-square operation-E mr-3 \"\r\n                        aria-hidden=\"true\"\r\n                        to={`/editCodeQuestion/${question._id}`}\r\n                    ></Link>\r\n                </span>\r\n                <span>\r\n                    <a\r\n                        className=\"fa fa-trash operation-D\"\r\n                        aria-hidden=\"true\"\r\n                        href=\"#\"\r\n                        onClick={() => deleteQuestion(question._id)}\r\n                    ></a>\r\n                </span>\r\n            </td>\r\n            {/* } */}\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default connect(null, { deleteQuestion })(codeTableRow);\r\n",["345","346"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\Pagination.js",["347","348"],"import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = (props) => {\r\n    const { itemCounts, pageSize, currentPage, onPageChange } = props;\r\n    const pageCounts = Math.ceil(itemCounts / pageSize);\r\n    if (pageCounts === 1) return null;\r\n    const pages = _.range(1, pageCounts + 1);\r\n\r\n    return (\r\n        <div className=\" paginatt \">\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination nav2\">\r\n                    {pages.map((page) => (\r\n                        <li\r\n                            className=\" \"\r\n                            key={page}\r\n                            className={currentPage === page ? \"active\" : \" \"}\r\n                        >\r\n                            <a\r\n                                className=\"page-link pagntColor\"\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => onPageChange(page)}\r\n                            >\r\n                                {page}\r\n                            </a>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\paginate.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\MyModal.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CodeTableRow.js",["349","350","351","352","353","354"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\RunCodeSuccess.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\RunCodeFail.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\SubmitCodeSuccess.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeSubmissions.js",["355","356"],"import React, { useEffect, Fragment, useState, useRef } from 'react';\r\nimport \"../../code/CodeQuestDisp.css\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport CodeSubTabRow from './CodeSubTabRow';\r\nimport Spinner from '../../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport Pagination from '../../code/Pagination';\r\nimport paginate from '../../code/paginate';\r\nimport {\r\n    getCodeSubmissions,\r\n    filterCodeSubmissions,\r\n    clearFilterCodeSub,\r\n} from '../../../store/actions/codeActions';\r\n\r\nconst CodeSubmissions = (props) => {\r\n    const { auth: { user },\r\n        code: { submissions, filteredSubmissions },\r\n        getCodeSubmissions,\r\n        filterCodeSubmissions,\r\n        clearFilterCodeSub,\r\n        match } = props;\r\n\r\n    const text = useRef('');\r\n\r\n    const [pageDetails, setPageDetails] = useState({\r\n        pageSize: 10,\r\n        currentPage: 1,\r\n        sortColumn: { path: \"submittedAt\", order: \"asc\" },\r\n    });\r\n    const { pageSize, currentPage, sortColumn } = pageDetails;\r\n\r\n\r\n    const { codeId } = match.params;\r\n\r\n    useEffect(() => {\r\n        if (user?.role === 'student') {\r\n            getCodeSubmissions({ user: user._id });\r\n        }\r\n        else if (user?.role === 'faculty') {\r\n            getCodeSubmissions({ code: codeId });\r\n        }\r\n        return () => {\r\n        };\r\n    }, [user]);\r\n\r\n    if (submissions !== null && submissions.length === 0) {\r\n        return <h4>Currently There are No Code Submissions.</h4>;\r\n    }\r\n\r\n    const handleFilterChange = (e) => {\r\n        if (text.current.value !== \"\") {\r\n            filterCodeSubmissions(e.target.value, user?.role === 'student' ? true : false);\r\n        } else {\r\n            clearFilterCodeSub();\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        setPageDetails({ ...pageDetails, currentPage: page });\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setPageDetails({ ...pageDetails, pageSize: e.target.value });\r\n    };\r\n\r\n    const handleSort = (path) => {\r\n        const sortColumn = { ...pageDetails.sortColumn };\r\n        if (sortColumn.path === path)\r\n            sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n        else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = \"asc\";\r\n        }\r\n        setPageDetails({ ...pageDetails, sortColumn });\r\n    };\r\n\r\n    const filteredSub = filteredSubmissions !== null ? filteredSubmissions : submissions;\r\n\r\n    const sortedSub = _.orderBy(\r\n        filteredSub,\r\n        [\r\n            function (item) {\r\n                if (sortColumn.path === \"status\") {\r\n                    return item.status;\r\n                }\r\n                else if (sortColumn.path === 'name') {\r\n                    return item.user.name;\r\n                }\r\n                else if (sortColumn.path === 'submittedAt') {\r\n                    return new Date(item.createdAt).getTime();\r\n                }\r\n                else if (sortColumn.path === 'language') {\r\n                    return item.language;\r\n                }\r\n                else if (sortColumn.path === 'title') {\r\n                    return item.question.title;\r\n                }\r\n                else {\r\n                    return item.user.name.toLowerCase();\r\n                };\r\n\r\n            },\r\n        ],\r\n        [sortColumn.order]\r\n    );\r\n\r\n    const newSubmissions = paginate(sortedSub, currentPage, pageSize);\r\n    const subNumber = _.range(1, newSubmissions.length + 1);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            {submissions !== null ? (<Container className=\"container-codeQuest\">\r\n                <h3 className=\"text-center  mb-2 pt-4 \">\r\n                    Code Submissions\r\n        </h3>\r\n                <div className=\"title-border mb-4\">\r\n                    <span></span>\r\n                </div>\r\n                <div className=\"displayQuest pb-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 pb-2\">\r\n                            <Form>\r\n                                <Form.Group controlId=\"codingquestionSearch\">\r\n                                    <Form.Control\r\n                                        className=\" codingQuestSearch\"\r\n                                        type=\"text\"\r\n                                        ref={text}\r\n                                        placeholder=\"Search submissions\"\r\n                                        onChange={handleFilterChange}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <div className='table-responsive' >\r\n                        <table className=\"table  \">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(`${user?.role === 'student' ? 'title' : 'name'}`)}>{user?.role === 'student' ? 'Title' : 'Name'}</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(\"submittedAt\")} >Submitted At</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(\"language\")} >Language</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(\"status\")} >Status</th>\r\n                                    {user?.role === 'student' && <th scope=\"col\">Operation</th>}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tbodyCode\">\r\n                                {/* {submissions.map((ele, index) => <QuizSubTabRow key={ele._id} name={ele.user.name} eleObj={ele} idx={index} />)} */}\r\n                                {newSubmissions.map((ele, index) => <CodeSubTabRow key={ele._id} name={ele.user.name} eleObj={ele} idx={index} />)}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"ml-3 \">\r\n                            <Form>\r\n                                <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        className=\"dispCode-inputFiled rowsPerPg\"\r\n                                        value={pageSize}\r\n                                        onChange={handleOnChange}\r\n                                    >\r\n                                        <option value={10} className=\"optionSelect\">\r\n                                            10\r\n                                </option>\r\n                                        <option value={25} className=\"optionSelect\">\r\n                                            25\r\n                                </option>\r\n                                        <option value={50} className=\"optionSelect\">\r\n                                            50\r\n                                </option>\r\n                                        <option value={100} className=\"optionSelect\">\r\n                                            100\r\n                                </option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                        <span className=\"labelRowsPerPg mt-2 col-4\">\r\n                            rows per page.\r\n                </span>\r\n                        <Pagination\r\n                            itemCounts={filteredSub.length}\r\n                            pageSize={pageSize}\r\n                            currentPage={currentPage}\r\n                            onPageChange={handlePageChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Container>) :\r\n                (\r\n                    <Spinner />\r\n                )\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getCodeSubmissions,\r\n    filterCodeSubmissions,\r\n    clearFilterCodeSub\r\n})(CodeSubmissions);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeSubTabRow.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodingSub.js",["357"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"../Coding.css\";\r\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\r\nimport CodeDescription from \"../CodeDescription\";\r\nimport CodingSolution from \"../CodingSolution\";\r\nimport CodeEditorSub from \"./CodeEditorSub\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCodeSubmission } from \"../../../store/actions/codeActions\";\r\nimport Spinner from '../../layout/Spinner';\r\n\r\nconst CodingSub = (props) => {\r\n\r\n    const { getCodeSubmission } = props;\r\n    const { currentSubmission } = props.code;\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getCodeSubmission(id);\r\n    }, []);\r\n\r\n    const [key, setKey] = useState(\"description\");\r\n\r\n    return (\r\n        <Fragment>\r\n            { currentSubmission !== null ?\r\n                <Row className=\"coding-container\">\r\n                    <Col>\r\n                        <Tabs className='navTabs' activeKey={key} onSelect={(e) => setKey(e)}>\r\n                            <Tab eventKey=\"description\" title={<span><i className=\"fa fa-list-alt\" aria-hidden=\"true\"></i>Description</span>}>\r\n                                <CodeDescription current={currentSubmission.question} />\r\n                            </Tab>\r\n                            {/* {current.solution &&} */}\r\n                            <Tab eventKey=\"solution\" title={<span><i className=\"fa fa-flask\" aria-hidden=\"true\"></i>Solution</span>}>\r\n                                <CodingSolution current={currentSubmission.question} />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Col>\r\n                    <Col className=\"editor-container\">\r\n                        <CodeEditorSub\r\n                            key={currentSubmission.question._id}\r\n                            slugProp={currentSubmission.question.slug}\r\n                            userSolution={currentSubmission.userSolution}\r\n                            language={currentSubmission.language}\r\n                            inputs={currentSubmission.question.noOfInputs}\r\n                            quesId={currentSubmission.question._id} />\r\n                    </Col>\r\n                </Row> : <Spinner />}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCodeSubmission })(CodingSub);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeEditorSub.js",["358","359"],"import React, { Fragment, useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/eclipse.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/blackboard.css\";\r\nimport \"codemirror/theme/base16-light.css\";\r\nimport \"codemirror/theme/ayu-mirage.css\";\r\nimport \"codemirror/addon/edit/matchbrackets\";\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport \"codemirror/addon/scroll/simplescrollbars.css\";\r\nimport \"codemirror/addon/scroll/simplescrollbars\";\r\nimport \"codemirror/mode/clike/clike\";\r\nimport \"codemirror/mode/python/python\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    runCode,\r\n    submitCode,\r\n    resetCode,\r\n} from \"../../../store/actions/codeActions\";\r\nimport RunCodeSuccess from '../RunCodeSuccess';\r\nimport RunCodeFail from '../RunCodeFail';\r\nimport SubmitCodeSuccess from '../SubmitCodeSuccess';\r\n\r\n// require(\"codemirror/addon/scroll/simplescrollbars.js\");\r\n\r\nconst CodeEditor = (props) => {\r\n    let { auth: { user }, code: { userCode, runSubmit },\r\n        runCode,\r\n        submitCode,\r\n        resetCode,\r\n        userSolution, language } = props;\r\n\r\n    if (language === 'C') {\r\n        language = 'text/x-csrc';\r\n    }\r\n    else if (language === 'C++') {\r\n        language = 'text/x-c++src';\r\n    }\r\n    else if (language === 'Java') {\r\n        language = 'text/x-java';\r\n    }\r\n    else if (language === 'Python') {\r\n        language = 'text/x-python';\r\n    }\r\n\r\n    const [editorSelect, setEditorSelect] = useState({\r\n        lang: language,\r\n        theme: \"material\",\r\n        mime: \"text/x-csrc\",\r\n    });\r\n\r\n    const [showConsole, setShowConsole] = useState(false);\r\n    const [code, setCode] = useState(userSolution);\r\n    const handleOnChange = (e) => {\r\n        let selectedMime = e.target.selectedOptions[0].getAttribute(\r\n            \"data-mime\"\r\n        );\r\n        setEditorSelect({\r\n            ...editorSelect,\r\n            [e.target.name]: e.target.value,\r\n            mime: selectedMime,\r\n        });\r\n    };\r\n    let options = {\r\n        lineNumbers: true,\r\n        mode: editorSelect.lang,\r\n        theme: editorSelect.theme,\r\n        mime: editorSelect.mime,\r\n        styleActiveLine: true,\r\n        lineWrapping: true,\r\n        matchBrackets: true,\r\n        autoCloseBrackets: true,\r\n        scrollbarStyle: \"overlay\",\r\n    };\r\n\r\n    // const handleOnBeforeChangeCode = (editor, data, value) => {\r\n    //     setCode(value)\r\n\r\n    // }\r\n    const handleOnRun = () => {\r\n        setShowConsole(true);\r\n        runCode({ code, lang: editorSelect.lang, slug: props.slugProp, noOfInputs: props.inputs });\r\n    };\r\n\r\n\r\n    const handleOnSubmit = () => {\r\n        setShowConsole(true);\r\n        submitCode({ code, lang: editorSelect.lang, slug: props.slugProp, noOfInputs: props.inputs }, props.quesId);\r\n    };\r\n\r\n    const handleOnChangeCode = (editor, data, newCode) => {\r\n        setCode(newCode);\r\n    };\r\n\r\n    const handleOnClick = (e) => {\r\n        if (e.target.value === \"resetCode\") {\r\n            setCode(\"\");\r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <div className=\"head\">\r\n                <Form inline className=\"editor-option-form\">\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"lang\"\r\n                        value={editorSelect.lang}\r\n                        className=\"mr-sm-2 editor-select\"\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        <option value=\"text/x-csrc\" data-mime=\"text/x-csrc\">\r\n                            C\r\n                        </option>\r\n                        <option value=\"text/x-c++src\" data-mime=\"text/x-c++src\">\r\n                            C++\r\n                        </option>\r\n                        <option value=\"text/x-java\" data-mime=\"text/x-java\">\r\n                            Java\r\n                        </option>\r\n                        <option value=\"text/x-python\" data-mime=\"text/x-python\">\r\n                            Python\r\n                        </option>\r\n                    </Form.Control>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"theme\"\r\n                        className=\"mr-sm-2 editor-select\"\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        <option value=\"material\">Material</option>\r\n                        <option value=\"ayu-mirage\">Ayu Mirage</option>\r\n                        <option value=\"base16-light\">light</option>\r\n                        <option value=\"blackboard\">Blackboard</option>\r\n                        <option value=\"eclipse\">Eclipse</option>\r\n                    </Form.Control>\r\n                </Form>\r\n            </div>\r\n            <CodeMirror\r\n                value={code}\r\n                options={options}\r\n                autoFocus={true}\r\n                onBeforeChange={handleOnChangeCode}\r\n                onChange={handleOnChangeCode}\r\n            />\r\n            <div className=\"editor-controls\">\r\n                <div>\r\n                    <Button\r\n                        className=\"button reset-code-btn\"\r\n                        value=\"resetCode\"\r\n                        onClick={handleOnClick}\r\n                    >\r\n                        <i className=\"fa fa-undo\" aria-hidden=\"true\"></i>\r\n                        Reset Code\r\n                    </Button>\r\n                </div>\r\n                <div className=\"editor-actions\">\r\n                    <Button className=\"button run-code-btn\" onClick={handleOnRun}>\r\n                        <i className=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                        <span>Run Code</span>\r\n                    </Button>\r\n                    {user?.role === 'student' && <Button className=\"button submit-code-btn\" onClick={handleOnSubmit}>Submit</Button>}\r\n                </div>\r\n            </div>\r\n            <div className=\"console-container\" style={{ display: `${showConsole ? 'block' : 'none'}` }}>\r\n                {userCode ? (\r\n                    <div style={{ padding: '20px', backgroundColor: 'aliceblue' }} >\r\n                        {userCode.error ? (\r\n                            <RunCodeFail userCodeObj={userCode} />\r\n                        )\r\n                            : (\r\n                                runSubmit === 'run' ? <RunCodeSuccess userCodeObj={userCode} />\r\n                                    : <SubmitCodeSuccess userCodeObj={userCode} />\r\n\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                )\r\n                    : <h4>Processing...</h4>}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { runCode, submitCode, resetCode })(\r\n    CodeEditor\r\n);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Resetpassword.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\ResPassModal.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\dashboard\\Dashboard.js",["360","361","362","363","364","365"],"import React, { useEffect } from \"react\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport \"./dashboard.css\";\r\nimport DashboardCard from \"./DashboardCard\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDetailsAndUsers } from \"../../store/actions/authActions\";\r\n\r\nconst Dashboard = (props) => {\r\n    const {\r\n        auth: { user },\r\n        getDetailsAndUsers\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n        // getQuizzes();\r\n        // getQuestions();\r\n        getDetailsAndUsers(user?.role === 'student' ? true : false);\r\n        //eslint-disable-next-line\r\n    }, []);\r\n    return (\r\n        <Container className=\"container-user\">\r\n            <h3 className=\"text-center mb-3 pt-4 \">DASHBOARD</h3>\r\n            <div className=\"title-border mb-4\">\r\n                <span></span>\r\n            </div>\r\n            <div className=\"userform\">\r\n                <div className=\"row pb-3 pt-3\">\r\n                    <div className=\"col-md-6 mb-3\">\r\n                        <div className=\"card card1\">\r\n                            <div className=\"card-header cardHeader1\">\r\n                                <h6 className=\" mb-0 text-white \">Quizzes</h6>\r\n                            </div>\r\n                            <div className=\"card-footer cardFooter \">\r\n                                <span className=\"footerInfo \">\r\n                                    {user.role === \"student\"\r\n                                        ? \"Attempted : \"\r\n                                        : \"Total : \"}\r\n                                    <span>3 / 12</span>{\" \"}\r\n                                </span>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary cardBtn1 setting \"\r\n                                >\r\n                                    See Quiz\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 mb-3\">\r\n                        <div className=\"card card2\">\r\n                            <div className=\"card-header cardHeader2\">\r\n                                <h6 className=\" mb-0 text-white \">\r\n                                    Coding Questions\r\n                                </h6>\r\n                            </div>\r\n                            <div className=\"card-footer cardFooter \">\r\n                                <span className=\"footerInfo \">\r\n                                    {user.role === \"student\"\r\n                                        ? \"Attempted : \"\r\n                                        : \"Total : \"}{\" \"}\r\n                                    <span>1 / 20</span>{\" \"}\r\n                                </span>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-primary cardBtn2 setting \"\r\n                                >\r\n                                    Questions\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr className=\"pb-4 hr-m\"></hr>\r\n\r\n                <div className=\"row \">\r\n                    <DashboardCard\r\n                        title=\"Quantitative Analysis\"\r\n                        text=\"See some examples of Quantitative analysis and enhance your problem solving skills.\"\r\n                        imgSrc=\"bulb1.jpg\"\r\n                    />\r\n                    <DashboardCard\r\n                        title=\"Logical reasoning\"\r\n                        text=\"See some examples of logical reasoning and enhance your logical reasoning skills.\"\r\n                        imgSrc=\"logic1.jpg\"\r\n                    />\r\n                    <DashboardCard\r\n                        title=\"Verbal Ability\"\r\n                        text=\"See some amazing examples of verbal ability and enhance your communication skills.\"\r\n                        imgSrc=\"verbal1.jpg\"\r\n                    />\r\n                </div>\r\n\r\n                {/* tablestarts here */}\r\n\r\n                <h3 className=\"text-center mb-2 pt-3 \">USERS</h3>\r\n                <div className=\"title-border mb-4\">\r\n                    <span></span>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 pb-2\">\r\n                        <Form>\r\n                            <Form.Group controlId=\"codingquestionSearch\">\r\n                                <Form.Control\r\n                                    className=\" codingQuestSearch\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Search users by role, name or Email\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-responsive \">\r\n                    <table className=\"table table-bordered table-striped tbr text-center mb-3\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Role</th>\r\n                                <th scope=\"col\">Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"tbodyCode\">\r\n                            <tr>\r\n                                <th scope=\"row\" className=\"pad-td\">\r\n                                    1\r\n                                </th>\r\n                                <td className=\"pad-td\">Mark Otto</td>\r\n                                <td className=\"pad-td\">Markotto@example.com</td>\r\n                                <td>\r\n                                    <Form>\r\n                                        <Form.Group controlId=\"SelectRole\">\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"pageSize\"\r\n                                                className=\"roledrop\"\r\n                                            >\r\n                                                <option className=\"optionSelect\">\r\n                                                    Student{\" \"}\r\n                                                </option>\r\n                                                <option className=\"optionSelect\">\r\n                                                    {\" \"}\r\n                                                    Faculty\r\n                                                </option>\r\n                                                <option className=\"optionSelect\">\r\n                                                    Admin{\" \"}\r\n                                                </option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </td>\r\n                                <td>\r\n                                    <span>\r\n                                        <a\r\n                                            className=\"fa fa-trash operation-D pt-2\"\r\n                                            aria-hidden=\"true\"\r\n                                            href=\"#\"\r\n                                        ></a>\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\" className=\"pad-td\">\r\n                                    2\r\n                                </th>\r\n                                <td className=\"pad-td\">jacob Oram</td>\r\n                                <td className=\"pad-td\">jacob@example.com</td>\r\n                                <td>\r\n                                    <Form>\r\n                                        <Form.Group controlId=\"SelectRole\">\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"pageSize\"\r\n                                                className=\"roledrop\"\r\n                                            >\r\n                                                <option className=\"optionSelect\">\r\n                                                    Student{\" \"}\r\n                                                </option>\r\n                                                <option className=\"optionSelect\">\r\n                                                    {\" \"}\r\n                                                    Faculty\r\n                                                </option>\r\n                                                <option className=\"optionSelect\">\r\n                                                    Admin{\" \"}\r\n                                                </option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </td>\r\n                                <td>\r\n                                    <span>\r\n                                        <a\r\n                                            className=\"fa fa-trash operation-D pt-2\"\r\n                                            aria-hidden=\"true\"\r\n                                            href=\"#\"\r\n                                        ></a>\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\" className=\"pad-td\">\r\n                                    3\r\n                                </th>\r\n                                <td className=\"pad-td\">Larry Wheels</td>\r\n                                <td className=\"pad-td\">larry@example.com</td>\r\n                                <td>\r\n                                    <Form>\r\n                                        <Form.Group controlId=\"SelectRole\">\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                name=\"pageSize\"\r\n                                                className=\"roledrop\"\r\n                                            >\r\n                                                <option className=\"optionSelect\">\r\n                                                    Student{\" \"}\r\n                                                </option>\r\n                                                <option className=\"optionSelect\">\r\n                                                    {\" \"}\r\n                                                    Faculty\r\n                                                </option>\r\n                                                <option className=\"optionSelect\">\r\n                                                    Admin{\" \"}\r\n                                                </option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </td>\r\n                                <td>\r\n                                    <span>\r\n                                        <a\r\n                                            className=\"fa fa-trash operation-D pt-2\"\r\n                                            aria-hidden=\"true\"\r\n                                            href=\"#\"\r\n                                        ></a>\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                {/* pagination starts here */}\r\n                <div className=\"row\">\r\n                    <div className=\"ml-3 \">\r\n                        <Form>\r\n                            <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"pageSize\"\r\n                                    className=\"dispCode-inputFiled rowsPerPg\"\r\n                                >\r\n                                    <option value={10} className=\"optionSelect\">\r\n                                        10\r\n                                    </option>\r\n                                    <option value={25} className=\"optionSelect\">\r\n                                        25\r\n                                    </option>\r\n                                    <option value={50} className=\"optionSelect\">\r\n                                        50\r\n                                    </option>\r\n                                    <option\r\n                                        value={100}\r\n                                        className=\"optionSelect\"\r\n                                    >\r\n                                        100\r\n                                    </option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                    <span className=\"labelRowsPerPg mt-2 col-4\">\r\n                        rows per page.\r\n                    </span>\r\n\r\n                    {/* pagination Component yahaa aayega */}\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz,\r\n    code: state.code,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getDetailsAndUsers })(\r\n    Dashboard\r\n);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Alerts.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\alertReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\alertActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\dashboard\\DashboardCard.js",["366"],"import React from \"react\";\r\n\r\nconst DashboardCard = (props) => {\r\n    const { title, text, imgSrc } = props;\r\n    return (\r\n        <div className=\"col-md-4 pb-4\">\r\n            <div className=\"card cardP\">\r\n                <img\r\n                    className=\"card-img-top cardimg\"\r\n                    src={imgSrc}\r\n                    alt=\"Card cap\"\r\n                ></img>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center\">{title}</h5>\r\n                    <p className=\"card-text text-center\">{text}</p>\r\n                    <div className=\"text-center\">\r\n                        <a href=\"#\" className=\"btn btn-primary setting pbtnQ \">\r\n                            Lets Practice\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardCard;\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\routing\\TestRoute.js",[],{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","severity":1,"message":"372","line":4,"column":50,"nodeType":"373","messageId":"374","endLine":4,"endColumn":58},{"ruleId":"371","severity":1,"message":"375","line":18,"column":27,"nodeType":"373","messageId":"374","endLine":18,"endColumn":32},{"ruleId":"376","severity":1,"message":"377","line":36,"column":8,"nodeType":"378","endLine":36,"endColumn":14,"suggestions":"379"},{"ruleId":"367","replacedBy":"380"},{"ruleId":"369","replacedBy":"381"},{"ruleId":"382","severity":1,"message":"383","line":23,"column":17,"nodeType":"384","endLine":23,"endColumn":48},{"ruleId":"371","severity":1,"message":"385","line":9,"column":10,"nodeType":"373","messageId":"374","endLine":9,"endColumn":16},{"ruleId":"376","severity":1,"message":"386","line":20,"column":8,"nodeType":"378","endLine":20,"endColumn":10,"suggestions":"387"},{"ruleId":"376","severity":1,"message":"388","line":69,"column":8,"nodeType":"378","endLine":69,"endColumn":19,"suggestions":"389"},{"ruleId":"376","severity":1,"message":"390","line":34,"column":8,"nodeType":"378","endLine":34,"endColumn":19,"suggestions":"391"},{"ruleId":"371","severity":1,"message":"392","line":15,"column":9,"nodeType":"373","messageId":"374","endLine":15,"endColumn":16},{"ruleId":"376","severity":1,"message":"393","line":24,"column":8,"nodeType":"378","endLine":24,"endColumn":19,"suggestions":"394"},{"ruleId":"371","severity":1,"message":"395","line":2,"column":24,"nodeType":"373","messageId":"374","endLine":2,"endColumn":29},{"ruleId":"371","severity":1,"message":"396","line":29,"column":81,"nodeType":"373","messageId":"374","endLine":29,"endColumn":90},{"ruleId":"371","severity":1,"message":"397","line":9,"column":27,"nodeType":"373","messageId":"374","endLine":9,"endColumn":43},{"ruleId":"371","severity":1,"message":"398","line":13,"column":25,"nodeType":"373","messageId":"374","endLine":13,"endColumn":39},{"ruleId":"382","severity":1,"message":"383","line":204,"column":41,"nodeType":"384","endLine":208,"endColumn":42},{"ruleId":"382","severity":1,"message":"383","line":242,"column":41,"nodeType":"384","endLine":246,"endColumn":42},{"ruleId":"376","severity":1,"message":"390","line":23,"column":8,"nodeType":"378","endLine":23,"endColumn":19,"suggestions":"399"},{"ruleId":"376","severity":1,"message":"400","line":30,"column":8,"nodeType":"378","endLine":30,"endColumn":19,"suggestions":"401"},{"ruleId":"376","severity":1,"message":"400","line":35,"column":8,"nodeType":"378","endLine":35,"endColumn":19,"suggestions":"402"},{"ruleId":"371","severity":1,"message":"403","line":11,"column":8,"nodeType":"373","messageId":"374","endLine":11,"endColumn":16},{"ruleId":"371","severity":1,"message":"404","line":23,"column":8,"nodeType":"373","messageId":"374","endLine":23,"endColumn":17},{"ruleId":"405","severity":1,"message":"406","line":20,"column":21,"nodeType":"384","endLine":24,"endColumn":22},{"ruleId":"382","severity":1,"message":"383","line":20,"column":21,"nodeType":"384","endLine":24,"endColumn":22},{"ruleId":"405","severity":1,"message":"406","line":55,"column":21,"nodeType":"384","endLine":60,"endColumn":22},{"ruleId":"382","severity":1,"message":"383","line":55,"column":21,"nodeType":"384","endLine":60,"endColumn":22},{"ruleId":"367","replacedBy":"407"},{"ruleId":"369","replacedBy":"408"},{"ruleId":"409","severity":1,"message":"410","line":18,"column":29,"nodeType":"411","endLine":18,"endColumn":78},{"ruleId":"382","severity":1,"message":"412","line":20,"column":29,"nodeType":"384","endLine":24,"endColumn":30},{"ruleId":"371","severity":1,"message":"413","line":5,"column":48,"nodeType":"373","messageId":"374","endLine":5,"endColumn":68},{"ruleId":"376","severity":1,"message":"414","line":18,"column":8,"nodeType":"378","endLine":18,"endColumn":19,"suggestions":"415"},{"ruleId":"405","severity":1,"message":"406","line":34,"column":21,"nodeType":"384","endLine":38,"endColumn":22},{"ruleId":"382","severity":1,"message":"383","line":34,"column":21,"nodeType":"384","endLine":38,"endColumn":22},{"ruleId":"405","severity":1,"message":"406","line":76,"column":21,"nodeType":"384","endLine":81,"endColumn":22},{"ruleId":"382","severity":1,"message":"383","line":76,"column":21,"nodeType":"384","endLine":81,"endColumn":22},{"ruleId":"376","severity":1,"message":"416","line":46,"column":8,"nodeType":"378","endLine":46,"endColumn":14,"suggestions":"417"},{"ruleId":"371","severity":1,"message":"418","line":110,"column":11,"nodeType":"373","messageId":"374","endLine":110,"endColumn":20},{"ruleId":"376","severity":1,"message":"419","line":20,"column":8,"nodeType":"378","endLine":20,"endColumn":10,"suggestions":"420"},{"ruleId":"371","severity":1,"message":"395","line":2,"column":24,"nodeType":"373","messageId":"374","endLine":2,"endColumn":29},{"ruleId":"371","severity":1,"message":"396","line":32,"column":9,"nodeType":"373","messageId":"374","endLine":32,"endColumn":18},{"ruleId":"405","severity":1,"message":"406","line":154,"column":41,"nodeType":"384","endLine":158,"endColumn":42},{"ruleId":"382","severity":1,"message":"383","line":154,"column":41,"nodeType":"384","endLine":158,"endColumn":42},{"ruleId":"405","severity":1,"message":"406","line":192,"column":41,"nodeType":"384","endLine":196,"endColumn":42},{"ruleId":"382","severity":1,"message":"383","line":192,"column":41,"nodeType":"384","endLine":196,"endColumn":42},{"ruleId":"405","severity":1,"message":"406","line":230,"column":41,"nodeType":"384","endLine":234,"endColumn":42},{"ruleId":"382","severity":1,"message":"383","line":230,"column":41,"nodeType":"384","endLine":234,"endColumn":42},{"ruleId":"382","severity":1,"message":"383","line":17,"column":25,"nodeType":"384","endLine":17,"endColumn":80},"no-native-reassign",["421"],"no-negated-in-lhs",["422"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setTestDetails'. Either include it or remove the dependency array.","ArrayExpression",["423"],["421"],["422"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Prompt' is defined but never used.","React Hook useEffect has missing dependencies: 'getQuestion' and 'slug'. Either include them or remove the dependency array.",["424"],"React Hook useEffect has missing dependencies: 'clrCodeCreateSuccess', 'props.match.path', and 'setAlert'. Either include them or remove the dependency array.",["425"],"React Hook useEffect has missing dependencies: 'clrQuizDeleteSuccess' and 'setAlert'. Either include them or remove the dependency array.",["426"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clearTestDetails', 'clrQuizCreateSuccess', and 'setAlert'. Either include them or remove the dependency array.",["427"],"'Alert' is defined but never used.","'resetCode' is assigned a value but never used.","'setCountdownDate' is assigned a value but never used.","'setUserAnswers' is assigned a value but never used.",["428"],"React Hook useEffect has missing dependencies: 'clrPracProbDeleteSuccess' and 'setAlert'. Either include them or remove the dependency array.",["429"],["430"],"'QuizPage' is defined but never used.","'TestRoute' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.",["421"],["422"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'clrCodeCreateSuccess' is defined but never used.","React Hook useEffect has missing dependencies: 'clrCodeDeleteSuccess' and 'setAlert'. Either include them or remove the dependency array. If 'setAlert' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["431"],"React Hook useEffect has missing dependencies: 'codeId' and 'getCodeSubmissions'. Either include them or remove the dependency array.",["432"],"'subNumber' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCodeSubmission' and 'id'. Either include them or remove the dependency array.",["433"],"no-global-assign","no-unsafe-negation",{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"440","fix":"444"},{"desc":"445","fix":"446"},{"desc":"445","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},"Update the dependencies array to be: [setTestDetails, user]",{"range":"454","text":"455"},"Update the dependencies array to be: [getQuestion, slug]",{"range":"456","text":"457"},"Update the dependencies array to be: [clrCodeCreateSuccess, isCreated, props.match.path, setAlert]",{"range":"458","text":"459"},"Update the dependencies array to be: [clrQuizDeleteSuccess, isDeleted, setAlert]",{"range":"460","text":"461"},"Update the dependencies array to be: [clearTestDetails, clrQuizCreateSuccess, isCreated, setAlert]",{"range":"462","text":"463"},{"range":"464","text":"461"},"Update the dependencies array to be: [clrPracProbDeleteSuccess, isDeleted, setAlert]",{"range":"465","text":"466"},{"range":"467","text":"466"},"Update the dependencies array to be: [clrCodeDeleteSuccess, isDeleted, setAlert]",{"range":"468","text":"469"},"Update the dependencies array to be: [codeId, getCodeSubmissions, user]",{"range":"470","text":"471"},"Update the dependencies array to be: [getCodeSubmission, id]",{"range":"472","text":"473"},[1247,1253],"[setTestDetails, user]",[675,677],"[getQuestion, slug]",[2080,2091],"[clrCodeCreateSuccess, isCreated, props.match.path, setAlert]",[948,959],"[clrQuizDeleteSuccess, isDeleted, setAlert]",[975,986],"[clearTestDetails, clrQuizCreateSuccess, isCreated, setAlert]",[735,746],[1003,1014],"[clrPracProbDeleteSuccess, isDeleted, setAlert]",[1162,1173],[611,622],"[clrCodeDeleteSuccess, isDeleted, setAlert]",[1419,1425],"[codeId, getCodeSubmissions, user]",[717,719],"[getCodeSubmission, id]"]