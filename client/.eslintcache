[{"C:\\Major Projects\\PlacePrep\\client\\src\\index.js":"1","C:\\Major Projects\\PlacePrep\\client\\src\\App.js":"2","C:\\Major Projects\\PlacePrep\\client\\src\\store\\configureStore.js":"3","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\reducer.js":"4","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\authActions.js":"5","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Login.js":"6","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Register.js":"7","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js":"8","C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Navbar.js":"9","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js":"10","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js":"11","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js":"12","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js":"13","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js":"14","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js":"15","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js":"16","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js":"17","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js":"18","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\EditQuiz.js":"19","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js":"20","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCardPage.js":"21","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\Coding.js":"22","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js":"23","C:\\Major Projects\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js":"24","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js":"25","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js":"26","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js":"27","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js":"28","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js":"29","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js":"30","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\quizActions.js":"31","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\codeActions.js":"32","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js":"33","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizTimer.js":"34","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizPageSub.js":"35","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizQuesSub.js":"36","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizOptionSub.js":"37","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubmissions.js":"38","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubTabRow.js":"39","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeProblem.js":"40","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\AptiTopicsTemplate.js":"41","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\AddTopics.js":"42","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\CreateAptiQuestion.js":"43","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\practiceProblemReducers.js":"44","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\practiceProblemActions.js":"45","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizPage.js":"46","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizQues.js":"47","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizOption.js":"48","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\ViewAnswer.js":"49","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\EditPracticeProblem.js":"50","C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Home.js":"51","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CodeQuestions.js":"52","C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Spinner.js":"53","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\codeTableRow.js":"54","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\Pagination.js":"55","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\paginate.js":"56","C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\MyModal.js":"57","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CodeTableRow.js":"58","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\RunCodeSuccess.js":"59","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\RunCodeFail.js":"60","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\SubmitCodeSuccess.js":"61","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeSubmissions.js":"62","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeSubTabRow.js":"63","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodingSub.js":"64","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeEditorSub.js":"65","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Resetpassword.js":"66","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\ResPassModal.js":"67","C:\\Major Projects\\PlacePrep\\client\\src\\components\\dashboard\\Dashboard.js":"68","C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Alerts.js":"69","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\alertReducers.js":"70","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\alertActions.js":"71","C:\\Major Projects\\PlacePrep\\client\\src\\components\\dashboard\\DashboardCard.js":"72","C:\\Major Projects\\PlacePrep\\client\\src\\components\\routing\\TestRoute.js":"73","C:\\Major Projects\\PlacePrep\\client\\src\\components\\dashboard\\UserTable.js":"74","C:\\Major Projects\\PlacePrep\\client\\src\\components\\dashboard\\DashboardPie.js":"75"},{"size":339,"mtime":1613570649133,"results":"76","hashOfConfig":"77"},{"size":2007,"mtime":1614870627692,"results":"78","hashOfConfig":"77"},{"size":292,"mtime":1613210742016,"results":"79","hashOfConfig":"77"},{"size":474,"mtime":1614588256762,"results":"80","hashOfConfig":"77"},{"size":6369,"mtime":1614869770926,"results":"81","hashOfConfig":"77"},{"size":4165,"mtime":1614607342068,"results":"82","hashOfConfig":"77"},{"size":5145,"mtime":1614588256305,"results":"83","hashOfConfig":"77"},{"size":1678,"mtime":1614869875181,"results":"84","hashOfConfig":"77"},{"size":2223,"mtime":1614872044077,"results":"85","hashOfConfig":"77"},{"size":4519,"mtime":1614869597789,"results":"86","hashOfConfig":"77"},{"size":6572,"mtime":1614872885021,"results":"87","hashOfConfig":"77"},{"size":5913,"mtime":1615036965809,"results":"88","hashOfConfig":"77"},{"size":8126,"mtime":1614783160783,"results":"89","hashOfConfig":"77"},{"size":5624,"mtime":1615033324865,"results":"90","hashOfConfig":"77"},{"size":787,"mtime":1613038343146,"results":"91","hashOfConfig":"77"},{"size":2797,"mtime":1614869903274,"results":"92","hashOfConfig":"77"},{"size":8325,"mtime":1614870576849,"results":"93","hashOfConfig":"77"},{"size":10981,"mtime":1615037727188,"results":"94","hashOfConfig":"77"},{"size":10209,"mtime":1614606758649,"results":"95","hashOfConfig":"77"},{"size":1834,"mtime":1614952777874,"results":"96","hashOfConfig":"77"},{"size":2831,"mtime":1615037278412,"results":"97","hashOfConfig":"77"},{"size":1988,"mtime":1614508676759,"results":"98","hashOfConfig":"77"},{"size":16443,"mtime":1614599836217,"results":"99","hashOfConfig":"77"},{"size":853,"mtime":1614861290506,"results":"100","hashOfConfig":"77"},{"size":7856,"mtime":1614606758698,"results":"101","hashOfConfig":"77"},{"size":4236,"mtime":1614952846933,"results":"102","hashOfConfig":"77"},{"size":3419,"mtime":1614952765713,"results":"103","hashOfConfig":"77"},{"size":2180,"mtime":1614008177486,"results":"104","hashOfConfig":"77"},{"size":545,"mtime":1612952888849,"results":"105","hashOfConfig":"77"},{"size":6664,"mtime":1614869330099,"results":"106","hashOfConfig":"77"},{"size":9907,"mtime":1615033324847,"results":"107","hashOfConfig":"77"},{"size":7585,"mtime":1614869713086,"results":"108","hashOfConfig":"77"},{"size":725,"mtime":1614606600784,"results":"109","hashOfConfig":"77"},{"size":1755,"mtime":1614606831217,"results":"110","hashOfConfig":"77"},{"size":2048,"mtime":1614606315760,"results":"111","hashOfConfig":"77"},{"size":1821,"mtime":1614606388973,"results":"112","hashOfConfig":"77"},{"size":1096,"mtime":1614606315735,"results":"113","hashOfConfig":"77"},{"size":11714,"mtime":1615037233492,"results":"114","hashOfConfig":"77"},{"size":2233,"mtime":1614865379019,"results":"115","hashOfConfig":"77"},{"size":1559,"mtime":1614942157805,"results":"116","hashOfConfig":"77"},{"size":6223,"mtime":1614946786579,"results":"117","hashOfConfig":"77"},{"size":9518,"mtime":1614606927786,"results":"118","hashOfConfig":"77"},{"size":5540,"mtime":1614607019102,"results":"119","hashOfConfig":"77"},{"size":4996,"mtime":1615038222436,"results":"120","hashOfConfig":"77"},{"size":6647,"mtime":1615024976923,"results":"121","hashOfConfig":"77"},{"size":3584,"mtime":1615037022447,"results":"122","hashOfConfig":"77"},{"size":2361,"mtime":1614946709695,"results":"123","hashOfConfig":"77"},{"size":1197,"mtime":1613926540827,"results":"124","hashOfConfig":"77"},{"size":1046,"mtime":1614946655956,"results":"125","hashOfConfig":"77"},{"size":6360,"mtime":1614606993128,"results":"126","hashOfConfig":"77"},{"size":3820,"mtime":1614870262717,"results":"127","hashOfConfig":"77"},{"size":6249,"mtime":1615037151048,"results":"128","hashOfConfig":"77"},{"size":465,"mtime":1614942178851,"results":"129","hashOfConfig":"77"},{"size":2504,"mtime":1614159827515,"results":"130","hashOfConfig":"131"},{"size":1218,"mtime":1614869330076,"results":"132","hashOfConfig":"77"},{"size":211,"mtime":1614008177484,"results":"133","hashOfConfig":"77"},{"size":1910,"mtime":1614081232801,"results":"134","hashOfConfig":"77"},{"size":3300,"mtime":1614871428395,"results":"135","hashOfConfig":"77"},{"size":1125,"mtime":1614430326009,"results":"136","hashOfConfig":"77"},{"size":523,"mtime":1614425645853,"results":"137","hashOfConfig":"77"},{"size":1098,"mtime":1614430356296,"results":"138","hashOfConfig":"77"},{"size":8398,"mtime":1615037184092,"results":"139","hashOfConfig":"77"},{"size":2174,"mtime":1614957667012,"results":"140","hashOfConfig":"77"},{"size":2450,"mtime":1614958866706,"results":"141","hashOfConfig":"77"},{"size":7012,"mtime":1614958173983,"results":"142","hashOfConfig":"77"},{"size":2522,"mtime":1614520092836,"results":"143","hashOfConfig":"77"},{"size":1935,"mtime":1614520092790,"results":"144","hashOfConfig":"77"},{"size":6058,"mtime":1615028498865,"results":"145","hashOfConfig":"77"},{"size":460,"mtime":1614588256574,"results":"146","hashOfConfig":"77"},{"size":400,"mtime":1614588256735,"results":"147","hashOfConfig":"77"},{"size":428,"mtime":1614588256624,"results":"148","hashOfConfig":"77"},{"size":1034,"mtime":1614870306221,"results":"149","hashOfConfig":"77"},{"size":656,"mtime":1614857748805,"results":"150","hashOfConfig":"77"},{"size":6865,"mtime":1615037210717,"results":"151","hashOfConfig":"77"},{"size":2680,"mtime":1615030506297,"results":"152","hashOfConfig":"77"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},"16xu8rh",{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"155"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"155"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"155"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"155"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"155"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"155"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"155"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"155"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"155"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"155"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"155"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"155"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"155"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"276"},"1u3doc7",{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"155"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"155"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"155"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"155"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Major Projects\\PlacePrep\\client\\src\\index.js",[],["323","324"],"C:\\Major Projects\\PlacePrep\\client\\src\\App.js",["325","326"],"import React, { useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Auth.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\nimport Home from \"./components/layout/Home\";\r\nimport Alerts from \"./components/layout/Alerts\";\r\nimport QuizPage from './components/quiz/QuizPage';\r\nimport { connect } from \"react-redux\";\r\nimport { loadUser, setTestDetails } from \"./store/actions/authActions\";\r\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\r\n// import TestRoute from './components/routing/TestRoute';\r\nimport ResetPassword from './components/auth/Resetpassword';\r\nimport TestRoute from \"./components/routing/TestRoute\";\r\n\r\nconst App = (props) => {\r\n    const { auth: { user, error }, setTestDetails, loadUser } = props;\r\n\r\n    useEffect(() => {\r\n        loadUser(false, true);\r\n\r\n        return () => {\r\n        };\r\n\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (user?.currentTest) {\r\n            setTestDetails({\r\n                type: 'quiz',\r\n                test: user.currentTest.slug\r\n            });\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [user]);\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <Alerts />\r\n            <Switch>\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                <Route exact path=\"/ResetPassword/:token\" component={ResetPassword} />\r\n                {/* <PrivateRoute path=\"/\" component={Home} /> */}\r\n                <TestRoute path='/quiz/:slug' component={QuizPage} />\r\n                {user && <PrivateRoute path=\"/\" component={Home} />}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUser, setTestDetails })(App);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\store\\configureStore.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\reducer.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\authActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Login.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Register.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Navbar.js",["327"],"import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/authActions\";\r\n\r\nconst Navbars = (props) => {\r\n    const { logout, onClick } = props;\r\n    const { isAuthenticated, user } = props.auth;\r\n\r\n\r\n    const onlogout = () => {\r\n        logout();\r\n    };\r\n\r\n    const authLinks = (\r\n        <Fragment>\r\n            <span>\r\n                {/* <img className=\"nav__user-img\" src={`/img/users/${user.photo}`} alt={user.name} /> */}\r\n                <img className=\"nav__user-img\" src={`/img/users/${user.photo}`} alt={`${user.photo}`} />\r\n                <span className='user-name'>Hello {user && user.name.split(' ')[0]}</span>\r\n            </span>\r\n            <span className=\"logout-div\">\r\n                <a href=\"#\" onClick={onlogout}>\r\n                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                    <span className=\"hide-sm\"> Logout</span>\r\n                </a>\r\n            </span>\r\n        </Fragment>\r\n    );\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <Link to=\"/register\">Register</Link>\r\n            <Link to=\"/login\">Login</Link>\r\n        </Fragment>\r\n    );\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n            <div id='sidebar-btn' onClick={onClick} >\r\n                <i className='fas fa-bars menu-icon' ></i>\r\n            </div>\r\n            <Navbar.Brand className=\"brand-name\">\r\n                <img\r\n                    alt=\"logo\"\r\n                    src=\"./assets/img/logo.png\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{\" \"}\r\n                PlacePrep\r\n            </Navbar.Brand>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    {isAuthenticated ? authLinks : guestLinks}\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbars);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\EditQuiz.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCardPage.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\Coding.js",["328"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"./Coding.css\";\r\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\r\nimport CodeDescription from \"./CodeDescription\";\r\nimport CodingSolution from \"./CodingSolution\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestion } from \"../../store/actions/codeActions\";\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Coding = (props) => {\r\n\r\n    const { getQuestion } = props;\r\n    const { current } = props.code;\r\n    const { slug } = useParams();\r\n\r\n    useEffect(() => {\r\n        getQuestion(slug);\r\n    }, []);\r\n\r\n    const [key, setKey] = useState(\"description\");\r\n\r\n    return (\r\n        <Fragment>\r\n            { current !== null ?\r\n                <Row className=\"coding-container\">\r\n                    <Col>\r\n                        <Tabs className='navTabs' activeKey={key} onSelect={(e) => setKey(e)}>\r\n                            <Tab eventKey=\"description\" title={<span><i className=\"fa fa-list-alt\" aria-hidden=\"true\"></i>Description</span>}>\r\n                                <CodeDescription current={current} />\r\n                            </Tab>\r\n                            {/* {current.solution &&} */}\r\n                            <Tab eventKey=\"solution\" title={<span><i className=\"fa fa-flask\" aria-hidden=\"true\"></i>Solution</span>}>\r\n                                <CodingSolution current={current} />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Col>\r\n                    <Col className=\"editor-container\">\r\n                        <CodeEditor slugProp={slug} inputs={current.noOfInputs} quesId={current._id} />\r\n                    </Col>\r\n                </Row> : <Spinner />}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuestion })(Coding);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js",["329"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./createCode.css\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    addQuestion,\r\n    getQuestion,\r\n    updateQuestion,\r\n    clearCurrent,\r\n    clearCodeErrors,\r\n    clrCodeCreateSuccess\r\n} from \"../../store/actions/codeActions\";\r\nimport { setAlert } from \"../../store/actions/alertActions\";\r\n\r\nconst CreateCodeQuestion = (props) => {\r\n    const {\r\n        addQuestion,\r\n        getQuestion,\r\n        updateQuestion,\r\n        clearCurrent,\r\n        clearCodeErrors,\r\n        clrCodeCreateSuccess,\r\n        setAlert,\r\n    } = props;\r\n    const { current, error, isCreated } = props.code;\r\n    const [codeQuestion, setCodeQuestion] = useState({\r\n        title: \"\",\r\n        difficulty: \"10\",\r\n        description: \"\",\r\n        testcases: \"\",\r\n        sampleInputs: [],\r\n        solution: \"\",\r\n        noOfInputs: \"\"\r\n    });\r\n    const [lastId, setLastId] = useState(0);\r\n    const [clickSubmit, setClickSubmit] = useState(false);\r\n    const [sampleArray, setSampleArray] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (props.match.path.includes(\"editCodeQuestion\")) {\r\n            getQuestion(props.match.params.slug);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isCreated) {\r\n            if (props.match.path.includes(\"editCodeQuestion\")) {\r\n                setAlert('Question has been updated.', 'success');\r\n            }\r\n            else {\r\n                setAlert('Question has been created.', 'success');\r\n                setCodeQuestion({\r\n                    title: \"\",\r\n                    difficulty: \"10\",\r\n                    description: \"\",\r\n                    testcases: \"\",\r\n                    sampleInputs: [],\r\n                    solution: \"\",\r\n                    noOfInputs: \"\"\r\n                });\r\n                setSampleArray([]);\r\n            }\r\n            clrCodeCreateSuccess();\r\n        }\r\n\r\n\r\n    }, [isCreated]);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setAlert(error, \"danger\");\r\n            clearCodeErrors();\r\n        }\r\n        if (current !== null && props.match.path.includes(\"editCodeQuestion\")) {\r\n            props.history.replace({\r\n                pathname: `/editCodeQuestion/${current.slug}`,\r\n            });\r\n            setCodeQuestion(current);\r\n            if (current.sampleInputs) {\r\n                const newArray = current.sampleInputs.map((curr) => ({\r\n                    ...curr,\r\n                }));\r\n                setSampleArray(newArray);\r\n                setLastId(current.sampleInputs.length - 1);\r\n            }\r\n        } else {\r\n            clearCurrent();\r\n            if (\r\n                props.match.path.includes(\"createCodeQuestion\") &&\r\n                codeQuestion.title !== \"\" &&\r\n                current === null &&\r\n                !clickSubmit\r\n            ) {\r\n\r\n                setCodeQuestion({\r\n                    title: \"\",\r\n                    difficulty: \"10\",\r\n                    description: \"\",\r\n                    testcases: \"\",\r\n                    sampleInputs: [],\r\n                    solution: \"\",\r\n                    noOfInputs: \"\"\r\n                });\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [current, error, props.match.path]);\r\n\r\n    const handleAddSampleClick = () => {\r\n        const newSampleObj = {\r\n            id: lastId + 1,\r\n            sampleInput: \"\",\r\n            sampleOutput: \"\",\r\n        };\r\n        setLastId(lastId + 1);\r\n\r\n        const newSampleArray = [...sampleArray, newSampleObj];\r\n        setSampleArray(newSampleArray);\r\n    };\r\n\r\n    const handleOnSampleChange = (e, index) => {\r\n        const newSampleArray = [...sampleArray];\r\n        newSampleArray[index][e.target.name] = e.target.value;\r\n\r\n        setSampleArray(newSampleArray);\r\n    };\r\n\r\n    const handleDeleteSample = (e, eleId) => {\r\n        const newSampleArray = sampleArray.filter((ele) => {\r\n            return ele.id !== eleId;\r\n        });\r\n        setSampleArray(newSampleArray);\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setCodeQuestion({\r\n            ...codeQuestion,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        setClickSubmit(true);\r\n        if (\r\n            codeQuestion.title === \"\" ||\r\n            codeQuestion.description === \"\" ||\r\n            codeQuestion.testcases === \"\" ||\r\n            codeQuestion.noOfInputs === \"\"\r\n        ) {\r\n            setAlert(\"Please enter all fields\", \"danger\");\r\n        } else {\r\n            let temp = JSON.parse(JSON.stringify(codeQuestion));\r\n            temp.sampleInputs = sampleArray;\r\n\r\n            setCodeQuestion({ ...codeQuestion, sampleInputs: sampleArray });\r\n\r\n            current !== null\r\n                ? updateQuestion(temp)\r\n                : addQuestion(temp);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className=\"container-createCodeQuest\">\r\n            <h3 className=\"text-center mb-2 pt-4 \"> Create Coding Question</h3>\r\n            <div className=\"title-border mb-4\">\r\n                <span></span>\r\n            </div>\r\n            <div className=\"codequestForm \">\r\n                <Form encType=\"multipart/form-data\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Form.Group controlId=\"quiztitle\">\r\n                                <Form.Label>\r\n                                    <b>Title</b>\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    className=\"createC-inputFiled\"\r\n                                    type=\"text\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Enter Title\"\r\n                                    value={codeQuestion.title}\r\n                                    onChange={handleOnChange}\r\n                                />\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Form.Group controlId=\"quiztitle\">\r\n                                <Form.Label>\r\n                                    <b>Description</b>\r\n                                </Form.Label>\r\n                                <TextareaAutosize\r\n                                    className=\"createC-inputFiled questiontextarea\"\r\n                                    placeholder=\"Provide Description....\"\r\n                                    name=\"description\"\r\n                                    value={codeQuestion.description}\r\n                                    onChange={handleOnChange}\r\n                                ></TextareaAutosize>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n\r\n                    <h3 className=\"text-center  mb-2 pt-1 \">Add Samples</h3>\r\n                    <div className=\"title-border mb-4\">\r\n                        <span></span>\r\n                    </div>\r\n                    {/* Sampless starts from below */}\r\n                    {sampleArray.map((ele, index) => {\r\n                        return (\r\n                            <div className=\"\" key={ele.id}>\r\n                                <div className=\"row \">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <Form.Group controlId=\"quiztitle\">\r\n                                            <Form.Label>\r\n                                                <b>Sample Input</b>\r\n                                            </Form.Label>\r\n                                            <TextareaAutosize\r\n                                                className=\"createC-inputFiled questiontextarea\"\r\n                                                placeholder=\"\"\r\n                                                name=\"sampleInput\"\r\n                                                value={ele.sampleInput}\r\n                                                onChange={(e) =>\r\n                                                    handleOnSampleChange(\r\n                                                        e,\r\n                                                        index\r\n                                                    )\r\n                                                }\r\n                                            ></TextareaAutosize>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <Form.Group controlId=\"quiztitle\">\r\n                                            <Form.Label>\r\n                                                <b>Sample Output</b>\r\n                                            </Form.Label>\r\n                                            <TextareaAutosize\r\n                                                className=\"createC-inputFiled questiontextarea\"\r\n                                                placeholder=\"\"\r\n                                                name=\"sampleOutput\"\r\n                                                value={ele.sampleOutput}\r\n                                                onChange={(e) =>\r\n                                                    handleOnSampleChange(\r\n                                                        e,\r\n                                                        index\r\n                                                    )\r\n                                                }\r\n                                            ></TextareaAutosize>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row \">\r\n                                    <div className=\"col-sm-12 \">\r\n                                        <Button\r\n                                            className=\"delsamplebtn mb-2\"\r\n                                            onClick={(e) =>\r\n                                                handleDeleteSample(e, ele.id)\r\n                                            }\r\n                                        >\r\n                                            {\" \"}\r\n                                            Delete{\" \"}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n                    {/* samples end here */}\r\n                    <div className=\" text-center\">\r\n                        <Button\r\n                            className=\" addsample mt-3\"\r\n                            onClick={handleAddSampleClick}\r\n                        >\r\n                            {\" \"}\r\n                            Add Examples{\" \"}\r\n                        </Button>\r\n                    </div>\r\n                    <hr></hr>\r\n\r\n                    <h3 className=\"text-center  mb-2 pt-1 \">Add TestCases</h3>\r\n                    <div className=\"title-border mb-4\">\r\n                        <span></span>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Form.Group controlId=\"quiztitle\">\r\n                                <TextareaAutosize\r\n                                    className=\"createC-inputFiled questiontextarea \"\r\n                                    minRows=\"2\"\r\n                                    placeholder=\"\"\r\n                                    name=\"testcases\"\r\n                                    value={codeQuestion.testcases}\r\n                                    onChange={handleOnChange}\r\n                                ></TextareaAutosize>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <hr className=\"mt-2\"></hr>\r\n\r\n                    <div className=\"row pt-2 pb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <Form.Label>\r\n                                <b className=\"mr-2\">Solution </b>\r\n                            </Form.Label>\r\n                            <TextareaAutosize\r\n                                className=\"createC-inputFiled questiontextarea \"\r\n                                minRows=\"2\"\r\n                                placeholder=\"\"\r\n                                name=\"solution\"\r\n                                value={codeQuestion.solution}\r\n                                onChange={handleOnChange}\r\n                            ></TextareaAutosize>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"row pt-2 pb-3\">\r\n                        <div className=\"col-sm-2 pt-1 difflabel\">\r\n                            <Form.Label>\r\n                                <b className=\"\">No. of inputs</b>\r\n                            </Form.Label>\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Form.Group controlId=\"noOfInputs\" >\r\n                                <Form.Control className=\"quiz-inputFiled quizDuration\" name=\"noOfInputs\" value={codeQuestion.noOfInputs} onChange={handleOnChange} type=\"number\" placeholder=\"\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-sm-2 pt-1 difflabel\">\r\n                            <Form.Label>\r\n                                <b className=\"\"> Set Difficulty </b>\r\n                            </Form.Label>\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Form.Group controlId=\"SelectDifficulty\">\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"difficulty\"\r\n                                    className=\"createC-inputFiled diffdrop \"\r\n                                    value={codeQuestion.difficulty}\r\n                                    onChange={handleOnChange}\r\n                                >\r\n                                    <option\r\n                                        value={\"10\"}\r\n                                        className=\"optionSelect\"\r\n                                    >\r\n                                        Easy\r\n                                    </option>\r\n                                    <option\r\n                                        value={\"20\"}\r\n                                        className=\"optionSelect\"\r\n                                    >\r\n                                        Medium\r\n                                    </option>\r\n                                    <option\r\n                                        value={\"30\"}\r\n                                        className=\"optionSelect\"\r\n                                    >\r\n                                        Hard\r\n                                    </option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\" text-center\">\r\n                        <Button\r\n                            className=\"createquestbtn mb-4\"\r\n                            onClick={handleOnSubmit}\r\n                        >\r\n                            {current !== null\r\n                                ? \" Edit Question \"\r\n                                : \" Create Question \"}\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    addQuestion,\r\n    getQuestion,\r\n    updateQuestion,\r\n    clearCurrent,\r\n    clearCodeErrors,\r\n    clrCodeCreateSuccess,\r\n    setAlert,\r\n})(CreateCodeQuestion);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js",["330"],"import React, { useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Link } from 'react-router-dom';\r\nimport './quiz.css';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    updateQuiz,\r\n    deleteQuiz,\r\n    startQuiz,\r\n    clrQuizDeleteSuccess\r\n} from '../../store/actions/quizActions';\r\nimport { setUserNull, setTestDetails } from '../../store/actions/authActions';\r\nimport { setAlert } from '../../store/actions/alertActions';\r\n\r\nconst QuizCard = (props) => {\r\n    const {\r\n        quiz: { isDeleted },\r\n        auth: { user },\r\n        quizObj,\r\n        updateQuiz,\r\n        setUserNull,\r\n        deleteQuiz,\r\n        setTestDetails,\r\n        startQuiz,\r\n        clrQuizDeleteSuccess,\r\n        setAlert } = props;\r\n\r\n    useEffect(() => {\r\n        if (isDeleted) {\r\n            setAlert('Quiz Deleted', 'success');\r\n            clrQuizDeleteSuccess();\r\n        }\r\n    }, [isDeleted]);\r\n\r\n    const handleOnClick = () => {\r\n        setUserNull();\r\n        startQuiz(quizObj._id);\r\n        setTestDetails({\r\n            type: 'quiz',\r\n            test: quizObj.slug\r\n        });\r\n        // loadUser(false, true);\r\n    };\r\n\r\n    return (\r\n        <Card className='quiz_card'>\r\n            <Card.Header className='quiz_card_header text-center'>\r\n                <h3>{quizObj.title}</h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Table className='quiz_card_table text-center' >\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Category</th>\r\n                            <th scope=\"col\">Topics</th>\r\n                            <th scope=\"col\">Questions</th>\r\n                            <th scope=\"col\">Duration</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{quizObj.category}</td>\r\n                            <td>{quizObj.topic}</td>\r\n                            <td>{quizObj.questions.length}</td>\r\n                            <td>{quizObj.duration} Minutes</td>\r\n                        </tr>\r\n                        <tr>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n\r\n                {user.role === 'student' &&\r\n                    <div className='text-center' >\r\n                        <Link to={`/quiz/${quizObj.slug}`} onClick={handleOnClick} className=\"btn btn-primary start_quiz_btn mr-2\" >Start Quiz</Link>\r\n                    </div>}\r\n\r\n                {(user.role === 'faculty' || user.role === 'admin') &&\r\n                    <div className='text-center' >\r\n                        <Link to={`/editQuiz/${quizObj.slug}`} className=\"btn btn-primary start_quiz_btn mr-2\" >Edit</Link>\r\n                        <button onClick={() => deleteQuiz(quizObj._id)} className=\"btn btn-primary start_quiz_btn mr-2\" >Delete</button>\r\n                        <button onClick={() => updateQuiz({ _id: quizObj._id, active: !quizObj.active })} className=\"btn btn-primary start_quiz_btn mr-2\" >{quizObj.active ? 'Deactivate' : 'Activate'}</button>\r\n                    </div>\r\n                }\r\n            </Card.Body>\r\n            <Card.Footer className='quiz_card_footer' style={{ backgroundColor: 'white' }}>\r\n                {user.role === 'student' &&\r\n                    <label htmlFor=\"name\">Author: {quizObj.author?.name}</label>}\r\n                {(user.role === 'faculty' || user.role === 'admin') &&\r\n                    <Link to={`/quizSubmissions/${quizObj._id}`} className='alert-link' style={{ color: '#775ecf' }} >Submissions</Link>}\r\n                <label htmlFor=\"name\" style={{ float: 'right' }}>Last updated on {new Date(quizObj.createdAt).toLocaleString('en-us', { day: '2-digit', month: 'short', year: '2-digit', hour: '2-digit', minute: '2-digit' })}</label>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    quiz: state.quiz,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    updateQuiz,\r\n    deleteQuiz,\r\n    startQuiz,\r\n    setUserNull,\r\n    setTestDetails,\r\n    setAlert,\r\n    clrQuizDeleteSuccess\r\n})(QuizCard);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js",["331","332"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Button from 'react-bootstrap/Button';\r\nimport QuizOption from './QuizOption';\r\nimport Spinner from '../layout/Spinner';\r\nimport './quiz.css';\r\nimport { connect } from 'react-redux';\r\nimport { submitQuiz, clrQuizCreateSuccess } from '../../store/actions/quizActions';\r\nimport { clearTestDetails } from '../../store/actions/authActions';\r\nimport { setAlert } from '../../store/actions/alertActions';\r\n\r\nconst QuizQues = (props) => {\r\n    let history = useHistory();\r\n    const { quiz: { isCreated }, submitQuiz, clearTestDetails, setAlert, clrQuizCreateSuccess } = props;\r\n\r\n    useEffect(() => {\r\n        if (isCreated) {\r\n            setAlert('Quiz Submitted.', 'success');\r\n            clrQuizCreateSuccess();\r\n            clearTestDetails();\r\n        }\r\n    }, [isCreated]);\r\n\r\n    let tempUserAnswers;\r\n    useEffect(() => {\r\n        // eslint-disable-next-line\r\n        tempUserAnswers = props.questions.map((ele) => {\r\n            return {\r\n                questionId: ele._id,\r\n                selectedAnswer: ''\r\n            };\r\n        });\r\n        setUserAnswers(tempUserAnswers);\r\n\r\n    }, [tempUserAnswers]);\r\n\r\n    const [userAnswers, setUserAnswers] = useState(null);\r\n\r\n    const handleOptClick = (index, ans) => {\r\n        console.log('clcic', index);\r\n        let tempArr = [...userAnswers];\r\n        tempArr[index] = { ...tempArr[index], selectedAnswer: ans };\r\n        setUserAnswers(tempArr);\r\n    };\r\n\r\n    const handleOnClick = () => {\r\n\r\n        console.log('Submitting');\r\n        submitQuiz(props.quizId, { userAnswers: userAnswers });\r\n        tempUserAnswers = props.questions.map((ele) => {\r\n            return {\r\n                questionId: ele._id,\r\n                selectedAnswer: ''\r\n            };\r\n        });\r\n        setUserAnswers(tempUserAnswers);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            { props.questions.map((ele, index) => (\r\n                userAnswers ? (\r\n                    <Accordion key={index} className='my-2'>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    {`${index + 1}.`} {ele.question}\r\n                                </Card.Title>\r\n                                {ele.answers.map((ansEle, ansIdx) => <QuizOption\r\n                                    key={ansIdx}\r\n                                    onClickFunc={() => handleOptClick(index, ansEle)}\r\n                                    isClicked={ansEle === userAnswers[index].selectedAnswer}\r\n                                    text={ansEle} />)}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Accordion>) :\r\n                    <Spinner key={index} />)\r\n            )}\r\n            <div className=\"text-center\" style={{ width: '200px', margin: 'auto' }}>\r\n                <Button className=\"createquiz mb-4\" ref={props.refProp} onClick={handleOnClick}  >Submit Quiz</Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    submitQuiz,\r\n    clearTestDetails,\r\n    setAlert,\r\n    clrQuizCreateSuccess\r\n})(QuizQues);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js",["333","334","335"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/eclipse.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/blackboard.css\";\r\nimport \"codemirror/theme/base16-light.css\";\r\nimport \"codemirror/theme/ayu-mirage.css\";\r\nimport \"codemirror/addon/edit/matchbrackets\";\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport \"codemirror/addon/scroll/simplescrollbars.css\";\r\nimport \"codemirror/addon/scroll/simplescrollbars\";\r\nimport \"codemirror/mode/clike/clike\";\r\nimport \"codemirror/mode/python/python\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    runCode,\r\n    submitCode,\r\n    resetCode,\r\n} from \"../../store/actions/codeActions\";\r\nimport { setAlert } from \"../../store/actions/alertActions\";\r\nimport RunCodeSuccess from './RunCodeSuccess';\r\nimport RunCodeFail from './RunCodeFail';\r\nimport SubmitCodeSuccess from './SubmitCodeSuccess';\r\n\r\n// require(\"codemirror/addon/scroll/simplescrollbars.js\");\r\n\r\nconst CodeEditor = (props) => {\r\n    const { auth: { user }, code: { userCode, runSubmit }, runCode, submitCode, resetCode, setAlert } = props;\r\n\r\n    const [editorSelect, setEditorSelect] = useState({\r\n        lang: \"text/x-csrc\",\r\n        theme: \"material\",\r\n        mime: \"text/x-csrc\",\r\n    });\r\n\r\n    const [showConsole, setShowConsole] = useState(false);\r\n    const [code, setCode] = useState(\"\");\r\n    const handleOnChange = (e) => {\r\n        let selectedMime = e.target.selectedOptions[0].getAttribute(\r\n            \"data-mime\"\r\n        );\r\n        setEditorSelect({\r\n            ...editorSelect,\r\n            [e.target.name]: e.target.value,\r\n            mime: selectedMime,\r\n        });\r\n    };\r\n    let options = {\r\n        lineNumbers: true,\r\n        mode: editorSelect.lang,\r\n        theme: editorSelect.theme,\r\n        mime: editorSelect.mime,\r\n        styleActiveLine: true,\r\n        lineWrapping: true,\r\n        matchBrackets: true,\r\n        autoCloseBrackets: true,\r\n        scrollbarStyle: \"overlay\",\r\n    };\r\n\r\n    // const handleOnBeforeChangeCode = (editor, data, value) => {\r\n    //     setCode(value)\r\n\r\n    // }\r\n    const handleOnRun = () => {\r\n        setShowConsole(true);\r\n        runCode({ code, lang: editorSelect.lang, slug: props.slugProp, noOfInputs: props.inputs });\r\n    };\r\n\r\n\r\n    const handleOnSubmit = () => {\r\n        setShowConsole(true);\r\n        submitCode({ code, lang: editorSelect.lang, slug: props.slugProp, noOfInputs: props.inputs }, props.quesId);\r\n    };\r\n\r\n    const handleOnChangeCode = (editor, data, newCode) => {\r\n        setCode(newCode);\r\n    };\r\n\r\n    const handleOnClick = (e) => {\r\n        if (e.target.value === \"resetCode\") {\r\n            setCode(\"\");\r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <div className=\"head\">\r\n                <Form inline className=\"editor-option-form\">\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"lang\"\r\n                        className=\"mr-sm-2 editor-select\"\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        <option value=\"text/x-csrc\" data-mime=\"text/x-csrc\">\r\n                            C\r\n                        </option>\r\n                        <option value=\"text/x-c++src\" data-mime=\"text/x-c++src\">\r\n                            C++\r\n                        </option>\r\n                        <option value=\"text/x-java\" data-mime=\"text/x-java\">\r\n                            Java\r\n                        </option>\r\n                        <option value=\"text/x-python\" data-mime=\"text/x-python\">\r\n                            Python\r\n                        </option>\r\n                    </Form.Control>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"theme\"\r\n                        className=\"mr-sm-2 editor-select\"\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        <option value=\"material\">Material</option>\r\n                        <option value=\"ayu-mirage\">Ayu Mirage</option>\r\n                        <option value=\"base16-light\">light</option>\r\n                        <option value=\"blackboard\">Blackboard</option>\r\n                        <option value=\"eclipse\">Eclipse</option>\r\n                    </Form.Control>\r\n                </Form>\r\n            </div>\r\n            <CodeMirror\r\n                value={code}\r\n                options={options}\r\n                autoFocus={true}\r\n                onBeforeChange={handleOnChangeCode}\r\n                onChange={handleOnChangeCode}\r\n            />\r\n            <div className=\"editor-controls\">\r\n                <div>\r\n                    <Button\r\n                        className=\"button reset-code-btn\"\r\n                        value=\"resetCode\"\r\n                        onClick={handleOnClick}\r\n                    >\r\n                        <i className=\"fa fa-undo\" aria-hidden=\"true\"></i>\r\n                        Reset Code\r\n                    </Button>\r\n                </div>\r\n                <div className=\"editor-actions\">\r\n                    <Button className=\"button run-code-btn\" onClick={handleOnRun}>\r\n                        <i className=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                        <span>Run Code</span>\r\n                    </Button>\r\n                    {user?.role === 'student' && <Button className=\"button submit-code-btn\" onClick={handleOnSubmit}>Submit</Button>}\r\n                </div>\r\n            </div>\r\n            <div className=\"console-container\" style={{ display: `${showConsole ? 'block' : 'none'}` }}>\r\n                {userCode ? (\r\n                    <div style={{ padding: '20px', backgroundColor: 'aliceblue' }} >\r\n                        {userCode.error ? (\r\n                            <RunCodeFail userCodeObj={userCode} />\r\n                        )\r\n                            : (\r\n                                runSubmit === 'run' ? <RunCodeSuccess userCodeObj={userCode} />\r\n                                    : <SubmitCodeSuccess userCodeObj={userCode} />\r\n\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                )\r\n                    : <h4>Processing...</h4>}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { runCode, submitCode, resetCode, setAlert })(\r\n    CodeEditor\r\n);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\quizActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\codeActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizTimer.js",["336"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst QuizTimer = (props) => {\r\n\r\n    let durInSec = Math.round((new Date(props.endAt).getTime() - new Date().getTime()) / 1000);\r\n    let durMin = Math.floor(durInSec / 60);\r\n    let durSec = durInSec % 60;\r\n\r\n    const [countdownDate, setCountdownDate] = useState(new Date(props.endAt).getTime());\r\n    const [timer, setTimer] = useState({\r\n        minutes: durMin,\r\n        seconds: durSec\r\n    });\r\n\r\n    let myInterval;\r\n    useEffect(() => {\r\n        // eslint-disable-next-line\r\n        myInterval = setInterval(() => setNewTime(), 1000);\r\n\r\n        return () => clearInterval(myInterval);\r\n\r\n    }, [timer]);\r\n\r\n    const setNewTime = () => {\r\n        if (timer.seconds <= 0 && timer.minutes <= 0) {\r\n            if(timer.seconds > -6 && timer.minutes > -2){\r\n                props.triggerSubmit();\r\n            }\r\n            return clearInterval(myInterval);\r\n        }\r\n        else if (countdownDate) {\r\n            const currentTime = new Date().getTime();\r\n\r\n            const distanceToDate = countdownDate - currentTime;\r\n\r\n            let minutes = Math.floor(\r\n                (distanceToDate % (1000 * 60 * 60)) / (1000 * 60),\r\n            );\r\n            let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000);\r\n            setTimer({ minutes, seconds });\r\n        }\r\n    };\r\n\r\n    return (\r\n        (timer.minutes <= 0 && timer.seconds <= 0) ?\r\n            (<span className='time_sec float-right mt-1 pr-1' >Time's Up!</span>)\r\n            :\r\n        (<span className='time_sec float-right mt-1 pr-1' >{timer.minutes < 10 ? `0${timer.minutes}` : timer.minutes}:{timer.seconds < 10 ? `0${timer.seconds}` : timer.seconds}</span>)\r\n    );\r\n};\r\n\r\nexport default QuizTimer;\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizPageSub.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizQuesSub.js",["337"],"import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport QuizOptionSub from './QuizOptionSub';\r\nimport '../quiz.css';\r\nimport { connect } from 'react-redux';\r\nimport { submitQuiz } from '../../../store/actions/quizActions';\r\n\r\nconst QuizQues = (props) => {\r\n    const { userAns } = props;\r\n\r\n    // const [userAnswers] = useState(userAns);\r\n    const [userAnswers, setUserAnswers] = useState(userAns);\r\n\r\n    return (\r\n        <>\r\n            { props.questions.map((ele, index) => (\r\n                userAnswers ? (\r\n                    <Accordion key={index} className='my-2'>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    {`${index + 1}.`} {ele.question}\r\n                                </Card.Title>\r\n                                {ele.answers.map((ansEle, ansIdx) => <QuizOptionSub\r\n                                    key={ansIdx}\r\n                                    isCorrect={ansEle === ele.correctAnswer}\r\n                                    isClicked={ansEle === userAnswers[index].selectedAnswer}\r\n                                    text={ansEle} />)}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Accordion>) :\r\n                    <h3 key={index}>Loading...</h3>)\r\n            )}\r\n            {/* <div className=\"text-center\" onClick={handleOnClick} style={{ width: '200px', margin: 'auto' }}>\r\n                <Button className=\"createquiz mb-4\"  >Submit Quiz</Button>\r\n            </div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitQuiz })(QuizQues);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizOptionSub.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubmissions.js",["338","339"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubTabRow.js",["340"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../../store/actions/alertActions';\r\nimport { deleteQuizSubmission, clrQuizDeleteSuccess } from '../../../store/actions/quizActions';\r\n\r\nconst QuizSubTabRow = (props) => {\r\n    const { auth: { user },\r\n        quiz: { isDeleted },\r\n        eleObj,\r\n        idx,\r\n        name,\r\n        deleteQuizSubmission,\r\n        clrQuizDeleteSuccess,\r\n        setAlert } = props;\r\n\r\n    useEffect(() => {\r\n        if (isDeleted) {\r\n            console.log('delel', isDeleted);\r\n            setAlert('Quiz Submission Deleted', 'success');\r\n            clrQuizDeleteSuccess();\r\n        }\r\n    }, [isDeleted]);\r\n\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\" >{idx + 1}</th>\r\n            {(user.role === 'faculty' || user.role === 'admin') ?\r\n                <td ><Link className=\"questTitle\" to={`/quizSubmission/${eleObj._id}`}>{name}</Link></td>\r\n                :\r\n                <td ><Link className=\"questTitle\" to={`/quizSubmission/${eleObj._id}`}>{eleObj.quiz.title}</Link></td>\r\n            }\r\n            <td ><span>{new Date(eleObj.createdAt).toLocaleString('en-us', { day: '2-digit', month: 'short', year: '2-digit', hour: '2-digit', minute: '2-digit' })}</span></td>\r\n            <td ><span className=\"diffMod badge badge-success\">{eleObj.timeTaken.minutes < 10 ? `0${eleObj.timeTaken.minutes}` : eleObj.timeTaken.minutes}:{eleObj.timeTaken.seconds < 10 ? `0${eleObj.timeTaken.seconds}` : eleObj.timeTaken.seconds}</span></td>\r\n            <td>{eleObj.score}</td>\r\n            {(user.role === 'faculty' || user.role === 'admin') && <td >\r\n                <span className='pl-4' style={{ cursor: 'pointer' }} onClick={() => deleteQuizSubmission(eleObj._id)} >\r\n                    <i className=\"fa fa-trash operation-D mr-3 mt-1 op\" aria-hidden=\"true\" ></i>\r\n                </span></td>}\r\n        </tr>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        auth: state.auth,\r\n        quiz: state.quiz\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    deleteQuizSubmission,\r\n    clrQuizDeleteSuccess,\r\n    setAlert\r\n})(QuizSubTabRow);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeProblem.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\AptiTopicsTemplate.js",["341","342","343"],"import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./practiceProblem.css\";\r\nimport slugify from 'slugify';\r\nimport MyModal from '../layout/MyModal';\r\nimport { Container, Button, Form, Accordion, Alert } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    clrPracProbDeleteSuccess,\r\n    filterPracProbTopics,\r\n    clearFilterPracProbTopics,\r\n    clearPracticeProblemErrors\r\n} from '../../store/actions/practiceProblemActions';\r\nimport { setAlert } from '../../store/actions/alertActions';\r\n\r\nconst AptiTopicsTemplate = (props) => {\r\n    // deletePracProbByTopic(title, ele)\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const {\r\n        auth: { user },\r\n        practiceProblem: { isDeleted, filtered },\r\n        topics,\r\n        idx,\r\n        title,\r\n        setAlert,\r\n        clrPracProbDeleteSuccess,\r\n        filterPracProbTopics,\r\n        clearFilterPracProbTopics\r\n    } = props;\r\n\r\n    const [query, setQuery] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (isDeleted) {\r\n            setAlert('Topic Deleted', 'success');\r\n            clrPracProbDeleteSuccess();\r\n        }\r\n    }, [isDeleted]);\r\n\r\n    useEffect(() => {\r\n        if (filtered === null) {\r\n            setQuery('');\r\n            clearFilterPracProbTopics(title);\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [filtered]);\r\n\r\n\r\n    const [titleTopic, setTitleTopic] = useState({\r\n        title: '',\r\n        topic: ''\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        setQuery(e.target.value);\r\n\r\n        if (e.target.value !== \"\") {\r\n            filterPracProbTopics(e.target.value, title);\r\n        }\r\n        else {\r\n            clearFilterPracProbTopics(title);\r\n        }\r\n    };\r\n\r\n    const handleOnClick = (title, topic) => {\r\n        setTitleTopic({\r\n            title,\r\n            topic\r\n        });\r\n        setModalShow(true);\r\n    };\r\n\r\n    const filteredTopics = (filtered && filtered[idx]) ? filtered[idx] : topics;\r\n\r\n    return (\r\n        <Container className=\"container-problems\">\r\n            {/* modal starts here */}\r\n            <MyModal\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                titleAndTopic={titleTopic}\r\n            />\r\n            {/* Modal ends here */}\r\n            <Accordion>\r\n                <Accordion.Toggle\r\n                    as={Alert.Link}\r\n                    eventKey=\"0\"\r\n                    style={{ color: \"#775ecf\" }}\r\n                >\r\n                    <h3 className=\"text-center mb-3 pt-4 text-capitalize\">{title}</h3>\r\n                </Accordion.Toggle>\r\n\r\n                <div className=\"title-border mb-4\">\r\n                    <span></span>\r\n                </div>\r\n                <Accordion.Collapse\r\n                    eventKey=\"0\">\r\n                    <>\r\n                        <div className=\"row mr-2 ml-2\">\r\n                            <div className=\"col-12 \">\r\n                                <Form>\r\n                                    <Form.Group controlId={title} >\r\n                                        <Form.Control\r\n                                            className=\"searchField\"\r\n                                            onChange={handleOnChange}\r\n                                            value={query}\r\n                                            type=\"text\"\r\n                                            placeholder=\"Search Topics\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                        <hr className=\"hr-1 pb-2\"></hr>\r\n\r\n                        <div className=\"Topics pb-4\">\r\n\r\n                            {/* Topics component starts here */}\r\n                            {filteredTopics.map((ele, index) =>\r\n                                <div key={index} className=\"row topic mb-3 pb-2 pt-2\">\r\n                                    <div className=\"col-sm-6 topic-left\">\r\n                                        <h5 className=\"topic-name\">{ele}</h5>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6 \">\r\n                                        <div className=\"topic-right\">\r\n                                            {(user.role === 'faculty' || user.role === 'admin') &&\r\n                                                <span onClick={() => handleOnClick(title, ele)} style={{ cursor: 'pointer' }} >\r\n                                                    <i className=\"fa fa-trash operation-D mr-3 mt-1 op\" aria-hidden=\"true\" ></i>\r\n                                                </span>}\r\n                                            <Link to={`/practiceproblems/${slugify(title, { lower: true })}/${slugify(ele, { lower: true })}`} >\r\n                                                <span>\r\n                                                    <i className=\"fa fa-chevron-circle-right operation-D mr-3 mt-1 op\" aria-hidden=\"true\" ></i>\r\n                                                </span>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            {/* Topics component ends here */}\r\n\r\n                            {/* {(user.role === 'faculty' || user.role === 'admin') && <div className=\"text-center\">\r\n                                <Link to=\"/addtopic\"><Button className=\"Addmore-btn mt-2\" >Add More Topics</Button></Link>\r\n                            </div>} */}\r\n                        </div>\r\n                    </>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n        </Container >\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    practiceProblem: state.practiceProblem,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    setAlert,\r\n    clrPracProbDeleteSuccess,\r\n    filterPracProbTopics,\r\n    clearFilterPracProbTopics\r\n})(AptiTopicsTemplate);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\AddTopics.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\CreateAptiQuestion.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\practiceProblemReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\practiceProblemActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizPage.js",["344"],"import React, { useEffect, useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PracticeQuizQues from './PracticeQuizQues';\r\nimport Spinner from '../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getPracticeProblems,\r\n    clrPracProbDeleteSuccess,\r\n    filterPracProbs,\r\n    clearFilterPracProbs\r\n} from '../../store/actions/practiceProblemActions';\r\nimport { setAlert } from '../../store/actions/alertActions';\r\n\r\nconst QuizPage = (props) => {\r\n    const {\r\n        practiceProblem: { questions, isDeleted, filteredQuestions },\r\n        getPracticeProblems,\r\n        clrPracProbDeleteSuccess,\r\n        setAlert,\r\n        filterPracProbs,\r\n        clearFilterPracProbs,\r\n        match\r\n    } = props;\r\n    const { categorySlug, topicSlug } = match.params;\r\n    const [query, setQuery] = useState('');\r\n\r\n    useEffect(() => {\r\n        getPracticeProblems(categorySlug, topicSlug);\r\n        // loadUser(false, true);\r\n\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isDeleted) {\r\n            setAlert('Problem Deleted', 'success');\r\n            clrPracProbDeleteSuccess();\r\n        }\r\n    }, [isDeleted]);\r\n\r\n    useEffect(() => {\r\n        if (filteredQuestions === null) {\r\n            setQuery('');\r\n            clearFilterPracProbs();\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [filteredQuestions]);\r\n\r\n    const handleOnChange = (e) => {\r\n        setQuery(e.target.value);\r\n\r\n        if (e.target.value !== \"\") {\r\n            filterPracProbs(e.target.value);\r\n        }\r\n        else {\r\n            clearFilterPracProbs();\r\n        }\r\n    };\r\n\r\n    const filtered = filteredQuestions ? filteredQuestions : questions;\r\n\r\n    return (\r\n        <>\r\n            { questions ?\r\n                (<Container className='mt-3'>\r\n                    <Card.Header className='quiz_header'>\r\n                        <Row >\r\n                            <Col lg={9} md={8} sm={7} xs={8} className='quiz_title_col' >\r\n                                <div  >{questions[0]?.topic}</div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-12 \">\r\n                            <Form>\r\n                                <Form.Group controlId='question' >\r\n                                    <Form.Control\r\n                                        className=\"searchField\"\r\n                                        onChange={handleOnChange}\r\n                                        value={query}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Search Questions\"\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <PracticeQuizQues key={0} questions={filtered} />\r\n                </Container>)\r\n                :\r\n                <Spinner />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    practiceProblem: state.practiceProblem,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getPracticeProblems,\r\n    clrPracProbDeleteSuccess,\r\n    setAlert,\r\n    filterPracProbs,\r\n    clearFilterPracProbs\r\n})(QuizPage);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizQues.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizOption.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\ViewAnswer.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\EditPracticeProblem.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Home.js",["345"],"import React, { useState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"./styles.css\";\r\nimport SideBar from \"../sidebar/SideBar\";\r\nimport UserProfile from \"../auth/UserProfile\";\r\nimport CreateQuiz from \"../quiz/CreateQuiz\";\r\nimport Coding from \"../coding/Coding\";\r\nimport CodingSub from '../coding/codeSubmission/CodingSub';\r\nimport CodeQuestions from \"../code/CodeQuestions\";\r\nimport CreateCodeQuestion from \"../code/CreateCodeQues\";\r\nimport QuizPage from \"../quiz/QuizPage\";\r\nimport QuizPageSub from '../quiz/quizSubmission/QuizPageSub';\r\nimport QuizCardPage from '../quiz/QuizCardPage';\r\nimport EditQuiz from '../quiz/EditQuiz';\r\nimport QuizSubmissions from '../quiz/quizSubmission/QuizSubmissions';\r\nimport CodeSubmissions from '../coding/codeSubmission/CodeSubmissions';\r\nimport PracticeProblem from '../practiceProblems/PracticeProblem';\r\nimport PracticeQuizPage from '../practiceProblems/PracticeQuizPage';\r\nimport AddTopics from '../practiceProblems/AddTopics';\r\nimport EditPracticeProblem from '../practiceProblems/EditPracticeProblem';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport UserTable from '../dashboard/UserTable';\r\n\r\nconst Home = () => {\r\n    const [sidebarOpen, setSidebarOpen] = useState(true);\r\n\r\n    const toggleSidebarBtn = () => {\r\n        setSidebarOpen(!sidebarOpen);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar onClick={() => toggleSidebarBtn()} />\r\n            <div style={{ display: \"flex\", position: \"relative\", top: \"72px\" }}>\r\n                <SideBar sidebarOpen={sidebarOpen} onClick={() => toggleSidebarBtn()} />\r\n                <div className={\"mainview-container \" + (!sidebarOpen && 'remove-margin')}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Dashboard} />\r\n                        <Route path=\"/me\" component={UserProfile} />\r\n                        <Route path=\"/users\" component={UserTable} />\r\n                        <Route path=\"/createQuiz\" component={CreateQuiz} />\r\n                        <Route path=\"/codeQuestions\" component={CodeQuestions} />\r\n                        <Route path=\"/createCodeQuestion\" component={CreateCodeQuestion} />\r\n                        <Route path=\"/quizzes\" component={QuizCardPage} />\r\n                        <Route exact path=\"/editQuiz/:slug\" component={EditQuiz} />\r\n                        {/* <Route exact path=\"/quiz/:slug\" component={QuizPage} /> */}\r\n                        <Route exact path=\"/quizSubmissions\" component={QuizSubmissions} />\r\n                        <Route exact path=\"/quizSubmissions/:quizId\" component={QuizSubmissions} />\r\n                        <Route exact path=\"/quizSubmission/:id\" component={QuizPageSub} />\r\n                        <Route exact path=\"/codeSubmissions\" component={CodeSubmissions} />\r\n                        <Route exact path=\"/codeSubmissions/:codeId\" component={CodeSubmissions} />\r\n                        <Route exact path=\"/codeSubmission/:id\" component={CodingSub} />\r\n                        <Route exact path=\"/practiceProblems\" component={PracticeProblem} />\r\n                        <Route exact path=\"/editpracticeProblem/:id\" component={EditPracticeProblem} />\r\n                        <Route exact path=\"/practiceProblems/:categorySlug/:topicSlug\" component={PracticeQuizPage} />\r\n                        <Route exact path=\"/addTopic\" component={AddTopics} />\r\n                        <Route path=\"/code/:slug\" component={Coding} />\r\n                        <Route\r\n                            path=\"/editCodeQuestion/:slug\"\r\n                            component={CreateCodeQuestion}\r\n                        />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CodeQuestions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\codeTableRow.js",["346","347","348","349"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteQuestion } from \"../../store/actions/codeActions\";\r\n\r\nconst codeTableRow = ({ question, id, user, deleteQuestion }) => {\r\n    function capitalize(s) {\r\n        return s[0].toUpperCase() + s.slice(1);\r\n    }\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{id}</th>\r\n            <td>\r\n                <Link className=\"questTitle\" to={`/code/${question._id}`}>\r\n                {capitalize(question.title)}\r\n                </Link>\r\n            </td>\r\n            <td className=\"\">\r\n                <span>\r\n                    <a\r\n                        className=\"fa fa-book questSol\"\r\n                        aria-hidden=\"true\"\r\n                        href=\"#\"\r\n                    ></a>\r\n                </span>\r\n            </td>\r\n            <td className=\"\">\r\n                {question.difficulty === \"easy\" && (\r\n                    <span className=\" diffMod badge badgeSuccess \">\r\n                        {capitalize(question.difficulty)}\r\n                    </span>\r\n                )}\r\n                {question.difficulty === \"medium\" && (\r\n                    <span className=\" diffMod badge badgeWarning \">\r\n                        {capitalize(question.difficulty)}\r\n                    </span>\r\n                )}\r\n                {question.difficulty === \"hard\" && (\r\n                    <span className=\" diffMod badge badgeDanger \">\r\n                        {capitalize(question.difficulty)}\r\n                    </span>\r\n                )}\r\n            </td>\r\n            <td>53.4 %</td>\r\n            {/* {user.role === 'faculty' &&  */}\r\n            <td>\r\n                <span>\r\n                    <Link\r\n                        className=\"fa fa-pencil-square operation-E mr-3 \"\r\n                        aria-hidden=\"true\"\r\n                        to={`/editCodeQuestion/${question._id}`}\r\n                    ></Link>\r\n                </span>\r\n                <span>\r\n                    <a\r\n                        className=\"fa fa-trash operation-D\"\r\n                        aria-hidden=\"true\"\r\n                        href=\"#\"\r\n                        onClick={() => deleteQuestion(question._id)}\r\n                    ></a>\r\n                </span>\r\n            </td>\r\n            {/* } */}\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default connect(null, { deleteQuestion })(codeTableRow);\r\n",["350","351"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\Pagination.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\paginate.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\MyModal.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CodeTableRow.js",["352","353","354","355"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAlert } from '../../store/actions/alertActions';\r\nimport { deleteQuestion, clrCodeDeleteSuccess, clrCodeCreateSuccess } from \"../../store/actions/codeActions\";\r\n\r\nconst CodeTableRow = ({ code: { isDeleted },\r\n    auth: { user },\r\n    question,\r\n    id,\r\n    deleteQuestion, setAlert, clrCodeDeleteSuccess }) => {\r\n\r\n    useEffect(() => {\r\n        if (isDeleted) {\r\n            setAlert('Question Deleted', 'success');\r\n            clrCodeDeleteSuccess();\r\n        }\r\n    }, [isDeleted]);\r\n\r\n    function capitalize(s) {\r\n        return s[0].toUpperCase() + s.slice(1);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{id}</th>\r\n            <td>\r\n                <Link className=\"questTitle\" to={`/code/${question.slug}`}>\r\n                    {capitalize(question.title)}\r\n                </Link>\r\n            </td>\r\n            <td className=\"\">\r\n                <span>\r\n                    <a\r\n                        className=\"fa fa-book questSol\"\r\n                        aria-hidden=\"true\"\r\n                        href=\"!#\"\r\n                    ></a>\r\n                </span>\r\n            </td>\r\n            <td className=\"\">\r\n                {question.difficulty === \"10\" && (\r\n                    <span className=\" diffMod badge badgeSuccess \">\r\n                        Easy\r\n                    </span>\r\n                )}\r\n                {question.difficulty === \"20\" && (\r\n                    <span className=\" diffMod badge badgeWarning \">\r\n                        Medium\r\n                    </span>\r\n                )}\r\n                {question.difficulty === \"30\" && (\r\n                    <span className=\" diffMod badge badgeDanger \">\r\n                        Hard\r\n                    </span>\r\n                )}\r\n            </td>\r\n            {user?.role === 'student' && <td>{question.author?.name}</td>}\r\n            {(user.role === 'faculty' || user.role === 'admin') &&\r\n                <td>\r\n                    <Link to={`/codeSubmissions/${question._id}`} className='alert-link' style={{ color: '#775ecf' }} >\r\n                        <i className=\"fa fa-chevron-circle-right operation-D ml-5 mt-1\" aria-hidden=\"true\" ></i>\r\n                    </Link>\r\n                </td>\r\n            }\r\n\r\n            {(user.role === 'faculty' || user.role === 'admin') && <td>\r\n                <span>\r\n                    <Link\r\n                        className=\"fa fa-pencil-square operation-E mr-3 \"\r\n                        aria-hidden=\"true\"\r\n                        to={`/editCodeQuestion/${question.slug}`}\r\n                    ></Link>\r\n                </span>\r\n                <span>\r\n                    <a\r\n                        className=\"fa fa-trash operation-D\"\r\n                        aria-hidden=\"true\"\r\n                        href=\"#!\"\r\n                        onClick={() => deleteQuestion(question._id)}\r\n                    ></a>\r\n                </span>\r\n            </td>}\r\n        </tr>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    code: state.code\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteQuestion, setAlert, clrCodeDeleteSuccess })(CodeTableRow);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\RunCodeSuccess.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\RunCodeFail.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\SubmitCodeSuccess.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeSubmissions.js",["356","357"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeSubTabRow.js",["358","359"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { deleteCodeSubmission } from '../../../store/actions/codeActions';\r\n\r\nconst CodeSubTabRow = (props) => {\r\n    const { auth: { user },\r\n        eleObj, idx, name, deleteCodeSubmission } = props;\r\n\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\" >{idx + 1}</th>\r\n            {(user.role === 'faculty' || user.role === 'admin') ?\r\n                <td ><Link className=\"questTitle\" to={`/codeSubmission/${eleObj._id}`}>{name}</Link></td>\r\n                :\r\n                <td ><Link className=\"questTitle\" to={`/codeSubmission/${eleObj._id}`}>{eleObj.question.title}</Link></td>\r\n            }\r\n            <td ><span>{new Date(eleObj.createdAt).toLocaleString('en-us', { day: '2-digit', month: 'short', year: '2-digit', hour: '2-digit', minute: '2-digit' })}</span></td>\r\n            <td>{eleObj.language}</td>\r\n            <td >\r\n                {eleObj.status === \"Accepted\" && (\r\n                    <span className=\"subStatus badge badgeSuccess \">\r\n                        {eleObj.status}\r\n                    </span>\r\n                )}\r\n                {eleObj.status === \"Not Accepted\" && (\r\n                    <span className=\"subStatus badge badgeWarning \">\r\n                        {eleObj.status}\r\n                    </span>\r\n                )}\r\n                {eleObj.status === \"Compile-time Error\" || \"Runtime Error\" && (\r\n                    <span className=\"subStatus badge badgeDanger \">\r\n                        {eleObj.status}\r\n                    </span>\r\n                )}\r\n            </td>\r\n            {user.role === 'student' && <td >\r\n                <span className='pl-4' style={{ cursor: 'pointer' }} onClick={() => deleteCodeSubmission(eleObj._id)} >\r\n                    <i className=\"fa fa-trash operation-D mr-3 mt-1 op\" aria-hidden=\"true\" ></i>\r\n                </span></td>}\r\n        </tr>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        auth: state.auth,\r\n        code: state.code\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteCodeSubmission })(CodeSubTabRow);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodingSub.js",["360"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"../Coding.css\";\r\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\r\nimport CodeDescription from \"../CodeDescription\";\r\nimport CodingSolution from \"../CodingSolution\";\r\nimport CodeEditorSub from \"./CodeEditorSub\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCodeSubmission } from \"../../../store/actions/codeActions\";\r\nimport Spinner from '../../layout/Spinner';\r\n\r\nconst CodingSub = (props) => {\r\n\r\n    const { getCodeSubmission } = props;\r\n    const { currentSubmission } = props.code;\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getCodeSubmission(id);\r\n    }, []);\r\n\r\n    const [key, setKey] = useState(\"description\");\r\n\r\n    return (\r\n        <Fragment>\r\n            { currentSubmission !== null ?\r\n                <Row className=\"coding-container\">\r\n                    <Col>\r\n                        <Tabs className='navTabs' activeKey={key} onSelect={(e) => setKey(e)}>\r\n                            <Tab eventKey=\"description\" title={<span><i className=\"fa fa-list-alt\" aria-hidden=\"true\"></i>Description</span>}>\r\n                                <CodeDescription current={currentSubmission.question} />\r\n                            </Tab>\r\n                            {/* {current.solution &&} */}\r\n                            <Tab eventKey=\"solution\" title={<span><i className=\"fa fa-flask\" aria-hidden=\"true\"></i>Solution</span>}>\r\n                                <CodingSolution current={currentSubmission.question} />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Col>\r\n                    <Col className=\"editor-container\">\r\n                        <CodeEditorSub\r\n                            key={currentSubmission.userSolution}\r\n                            slugProp={currentSubmission.question.slug}\r\n                            userSolution={currentSubmission.userSolution}\r\n                            language={currentSubmission.language}\r\n                            inputs={currentSubmission.question.noOfInputs}\r\n                            quesId={currentSubmission.question._id} />\r\n                    </Col>\r\n                </Row> : <Spinner />}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCodeSubmission })(CodingSub);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeEditorSub.js",["361"],"import React, { Fragment, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/eclipse.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/blackboard.css\";\r\nimport \"codemirror/theme/base16-light.css\";\r\nimport \"codemirror/theme/ayu-mirage.css\";\r\nimport \"codemirror/addon/edit/matchbrackets\";\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport \"codemirror/addon/scroll/simplescrollbars.css\";\r\nimport \"codemirror/addon/scroll/simplescrollbars\";\r\nimport \"codemirror/mode/clike/clike\";\r\nimport \"codemirror/mode/python/python\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    runCode,\r\n    submitCode,\r\n    resetCode,\r\n} from \"../../../store/actions/codeActions\";\r\nimport RunCodeSuccess from '../RunCodeSuccess';\r\nimport RunCodeFail from '../RunCodeFail';\r\nimport SubmitCodeSuccess from '../SubmitCodeSuccess';\r\n\r\n// require(\"codemirror/addon/scroll/simplescrollbars.js\");\r\n\r\nconst CodeEditor = (props) => {\r\n    let { auth: { user }, code: { userCode, runSubmit },\r\n        runCode,\r\n        submitCode,\r\n        resetCode,\r\n        userSolution, language } = props;\r\n\r\n    if (language === 'C') {\r\n        language = 'text/x-csrc';\r\n    }\r\n    else if (language === 'C++') {\r\n        language = 'text/x-c++src';\r\n    }\r\n    else if (language === 'Java') {\r\n        language = 'text/x-java';\r\n    }\r\n    else if (language === 'Python') {\r\n        language = 'text/x-python';\r\n    }\r\n\r\n    const [editorSelect, setEditorSelect] = useState({\r\n        lang: language,\r\n        theme: \"material\",\r\n        mime: \"text/x-csrc\",\r\n    });\r\n\r\n\r\n    const [showConsole, setShowConsole] = useState(false);\r\n    const [code, setCode] = useState(userSolution);\r\n\r\n\r\n    const handleOnChange = (e) => {\r\n        let selectedMime = e.target.selectedOptions[0].getAttribute(\r\n            \"data-mime\"\r\n        );\r\n        setEditorSelect({\r\n            ...editorSelect,\r\n            [e.target.name]: e.target.value,\r\n            mime: selectedMime,\r\n        });\r\n    };\r\n    let options = {\r\n        lineNumbers: true,\r\n        mode: editorSelect.lang,\r\n        theme: editorSelect.theme,\r\n        mime: editorSelect.mime,\r\n        styleActiveLine: true,\r\n        lineWrapping: true,\r\n        matchBrackets: true,\r\n        autoCloseBrackets: true,\r\n        scrollbarStyle: \"overlay\",\r\n    };\r\n\r\n    // const handleOnBeforeChangeCode = (editor, data, value) => {\r\n    //     setCode(value)\r\n\r\n    // }\r\n    const handleOnRun = () => {\r\n        setShowConsole(true);\r\n        runCode({ code, lang: editorSelect.lang, slug: props.slugProp, noOfInputs: props.inputs });\r\n    };\r\n\r\n\r\n    const handleOnSubmit = () => {\r\n        setShowConsole(true);\r\n        submitCode({ code, lang: editorSelect.lang, slug: props.slugProp, noOfInputs: props.inputs }, props.quesId);\r\n    };\r\n\r\n    const handleOnChangeCode = (editor, data, newCode) => {\r\n        setCode(newCode);\r\n    };\r\n\r\n    const handleOnClick = (e) => {\r\n        if (e.target.value === \"resetCode\") {\r\n            setCode(\"\");\r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <div className=\"head\">\r\n                <Form inline className=\"editor-option-form\">\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"lang\"\r\n                        value={editorSelect.lang}\r\n                        className=\"mr-sm-2 editor-select\"\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        <option value=\"text/x-csrc\" data-mime=\"text/x-csrc\">\r\n                            C\r\n                        </option>\r\n                        <option value=\"text/x-c++src\" data-mime=\"text/x-c++src\">\r\n                            C++\r\n                        </option>\r\n                        <option value=\"text/x-java\" data-mime=\"text/x-java\">\r\n                            Java\r\n                        </option>\r\n                        <option value=\"text/x-python\" data-mime=\"text/x-python\">\r\n                            Python\r\n                        </option>\r\n                    </Form.Control>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"theme\"\r\n                        className=\"mr-sm-2 editor-select\"\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        <option value=\"material\">Material</option>\r\n                        <option value=\"ayu-mirage\">Ayu Mirage</option>\r\n                        <option value=\"base16-light\">light</option>\r\n                        <option value=\"blackboard\">Blackboard</option>\r\n                        <option value=\"eclipse\">Eclipse</option>\r\n                    </Form.Control>\r\n                </Form>\r\n            </div>\r\n            <CodeMirror\r\n                value={code}\r\n                options={options}\r\n                autoFocus={true}\r\n                onBeforeChange={handleOnChangeCode}\r\n                onChange={handleOnChangeCode}\r\n            />\r\n            <div className=\"editor-controls\">\r\n                <div>\r\n                    <Button\r\n                        className=\"button reset-code-btn\"\r\n                        value=\"resetCode\"\r\n                        onClick={handleOnClick}\r\n                    >\r\n                        <i className=\"fa fa-undo\" aria-hidden=\"true\"></i>\r\n                        Reset Code\r\n                    </Button>\r\n                </div>\r\n                <div className=\"editor-actions\">\r\n                    <Button className=\"button run-code-btn\" onClick={handleOnRun}>\r\n                        <i className=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                        <span>Run Code</span>\r\n                    </Button>\r\n                    {user?.role === 'student' && <Button className=\"button submit-code-btn\" onClick={handleOnSubmit}>Submit</Button>}\r\n                </div>\r\n            </div>\r\n            <div className=\"console-container\" style={{ display: `${showConsole ? 'block' : 'none'}` }}>\r\n                {userCode ? (\r\n                    <div style={{ padding: '20px', backgroundColor: 'aliceblue' }} >\r\n                        {userCode.error ? (\r\n                            <RunCodeFail userCodeObj={userCode} />\r\n                        )\r\n                            : (\r\n                                runSubmit === 'run' ? <RunCodeSuccess userCodeObj={userCode} />\r\n                                    : <SubmitCodeSuccess userCodeObj={userCode} />\r\n\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                )\r\n                    : <h4>Processing...</h4>}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { runCode, submitCode, resetCode })(\r\n    CodeEditor\r\n);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Resetpassword.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\ResPassModal.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\dashboard\\Dashboard.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Alerts.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\alertReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\alertActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\dashboard\\DashboardCard.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\routing\\TestRoute.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\dashboard\\UserTable.js",["362"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\dashboard\\DashboardPie.js",["363","364"],{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","severity":1,"message":"370","line":4,"column":50,"nodeType":"371","messageId":"372","endLine":4,"endColumn":58},{"ruleId":"369","severity":1,"message":"373","line":18,"column":27,"nodeType":"371","messageId":"372","endLine":18,"endColumn":32},{"ruleId":"374","severity":1,"message":"375","line":24,"column":17,"nodeType":"376","endLine":24,"endColumn":48},{"ruleId":"377","severity":1,"message":"378","line":20,"column":8,"nodeType":"379","endLine":20,"endColumn":10,"suggestions":"380"},{"ruleId":"377","severity":1,"message":"381","line":69,"column":8,"nodeType":"379","endLine":69,"endColumn":19,"suggestions":"382"},{"ruleId":"377","severity":1,"message":"383","line":34,"column":8,"nodeType":"379","endLine":34,"endColumn":19,"suggestions":"384"},{"ruleId":"369","severity":1,"message":"385","line":15,"column":9,"nodeType":"371","messageId":"372","endLine":15,"endColumn":16},{"ruleId":"377","severity":1,"message":"386","line":24,"column":8,"nodeType":"379","endLine":24,"endColumn":19,"suggestions":"387"},{"ruleId":"369","severity":1,"message":"388","line":1,"column":37,"nodeType":"371","messageId":"372","endLine":1,"endColumn":46},{"ruleId":"369","severity":1,"message":"389","line":30,"column":81,"nodeType":"371","messageId":"372","endLine":30,"endColumn":90},{"ruleId":"369","severity":1,"message":"390","line":30,"column":92,"nodeType":"371","messageId":"372","endLine":30,"endColumn":100},{"ruleId":"369","severity":1,"message":"391","line":9,"column":27,"nodeType":"371","messageId":"372","endLine":9,"endColumn":43},{"ruleId":"369","severity":1,"message":"392","line":13,"column":25,"nodeType":"371","messageId":"372","endLine":13,"endColumn":39},{"ruleId":"374","severity":1,"message":"375","line":204,"column":41,"nodeType":"376","endLine":208,"endColumn":42},{"ruleId":"374","severity":1,"message":"375","line":242,"column":41,"nodeType":"376","endLine":246,"endColumn":42},{"ruleId":"377","severity":1,"message":"383","line":23,"column":8,"nodeType":"379","endLine":23,"endColumn":19,"suggestions":"393"},{"ruleId":"369","severity":1,"message":"394","line":7,"column":21,"nodeType":"371","messageId":"372","endLine":7,"endColumn":27},{"ruleId":"369","severity":1,"message":"395","line":13,"column":5,"nodeType":"371","messageId":"372","endLine":13,"endColumn":31},{"ruleId":"377","severity":1,"message":"396","line":40,"column":8,"nodeType":"379","endLine":40,"endColumn":19,"suggestions":"397"},{"ruleId":"377","severity":1,"message":"396","line":43,"column":8,"nodeType":"379","endLine":43,"endColumn":19,"suggestions":"398"},{"ruleId":"369","severity":1,"message":"399","line":11,"column":8,"nodeType":"371","messageId":"372","endLine":11,"endColumn":16},{"ruleId":"400","severity":1,"message":"401","line":20,"column":21,"nodeType":"376","endLine":24,"endColumn":22},{"ruleId":"374","severity":1,"message":"375","line":20,"column":21,"nodeType":"376","endLine":24,"endColumn":22},{"ruleId":"400","severity":1,"message":"401","line":55,"column":21,"nodeType":"376","endLine":60,"endColumn":22},{"ruleId":"374","severity":1,"message":"375","line":55,"column":21,"nodeType":"376","endLine":60,"endColumn":22},{"ruleId":"365","replacedBy":"402"},{"ruleId":"367","replacedBy":"403"},{"ruleId":"369","severity":1,"message":"404","line":5,"column":48,"nodeType":"371","messageId":"372","endLine":5,"endColumn":68},{"ruleId":"377","severity":1,"message":"405","line":18,"column":8,"nodeType":"379","endLine":18,"endColumn":19,"suggestions":"406"},{"ruleId":"400","severity":1,"message":"401","line":34,"column":21,"nodeType":"376","endLine":38,"endColumn":22},{"ruleId":"400","severity":1,"message":"401","line":76,"column":21,"nodeType":"376","endLine":81,"endColumn":22},{"ruleId":"377","severity":1,"message":"407","line":46,"column":8,"nodeType":"379","endLine":46,"endColumn":14,"suggestions":"408"},{"ruleId":"369","severity":1,"message":"409","line":110,"column":11,"nodeType":"371","messageId":"372","endLine":110,"endColumn":20},{"ruleId":"410","severity":1,"message":"411","line":31,"column":57,"nodeType":"412","messageId":"413","endLine":31,"endColumn":59},{"ruleId":"410","severity":1,"message":"411","line":31,"column":76,"nodeType":"412","messageId":"413","endLine":31,"endColumn":78},{"ruleId":"377","severity":1,"message":"414","line":20,"column":8,"nodeType":"379","endLine":20,"endColumn":10,"suggestions":"415"},{"ruleId":"369","severity":1,"message":"389","line":32,"column":9,"nodeType":"371","messageId":"372","endLine":32,"endColumn":18},{"ruleId":"369","severity":1,"message":"394","line":2,"column":16,"nodeType":"371","messageId":"372","endLine":2,"endColumn":22},{"ruleId":"369","severity":1,"message":"388","line":1,"column":17,"nodeType":"371","messageId":"372","endLine":1,"endColumn":26},{"ruleId":"369","severity":1,"message":"416","line":3,"column":25,"nodeType":"371","messageId":"372","endLine":3,"endColumn":31},"no-native-reassign",["417"],"no-negated-in-lhs",["418"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getQuestion' and 'slug'. Either include them or remove the dependency array.","ArrayExpression",["419"],"React Hook useEffect has missing dependencies: 'clrCodeCreateSuccess', 'props.match.path', and 'setAlert'. Either include them or remove the dependency array.",["420"],"React Hook useEffect has missing dependencies: 'clrQuizDeleteSuccess' and 'setAlert'. Either include them or remove the dependency array.",["421"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clearTestDetails', 'clrQuizCreateSuccess', and 'setAlert'. Either include them or remove the dependency array.",["422"],"'useEffect' is defined but never used.","'resetCode' is assigned a value but never used.","'setAlert' is assigned a value but never used.","'setCountdownDate' is assigned a value but never used.","'setUserAnswers' is assigned a value but never used.",["423"],"'Button' is defined but never used.","'clearPracticeProblemErrors' is defined but never used.","React Hook useEffect has missing dependencies: 'clrPracProbDeleteSuccess' and 'setAlert'. Either include them or remove the dependency array.",["424"],["425"],"'QuizPage' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.",["417"],["418"],"'clrCodeCreateSuccess' is defined but never used.","React Hook useEffect has missing dependencies: 'clrCodeDeleteSuccess' and 'setAlert'. Either include them or remove the dependency array. If 'setAlert' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["426"],"React Hook useEffect has missing dependencies: 'codeId' and 'getCodeSubmissions'. Either include them or remove the dependency array.",["427"],"'subNumber' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'getCodeSubmission' and 'id'. Either include them or remove the dependency array.",["428"],"'Legend' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"433","fix":"437"},{"desc":"438","fix":"439"},{"desc":"438","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},"Update the dependencies array to be: [getQuestion, slug]",{"range":"447","text":"448"},"Update the dependencies array to be: [clrCodeCreateSuccess, isCreated, props.match.path, setAlert]",{"range":"449","text":"450"},"Update the dependencies array to be: [clrQuizDeleteSuccess, isDeleted, setAlert]",{"range":"451","text":"452"},"Update the dependencies array to be: [clearTestDetails, clrQuizCreateSuccess, isCreated, setAlert]",{"range":"453","text":"454"},{"range":"455","text":"452"},"Update the dependencies array to be: [clrPracProbDeleteSuccess, isDeleted, setAlert]",{"range":"456","text":"457"},{"range":"458","text":"457"},"Update the dependencies array to be: [clrCodeDeleteSuccess, isDeleted, setAlert]",{"range":"459","text":"460"},"Update the dependencies array to be: [codeId, getCodeSubmissions, user]",{"range":"461","text":"462"},"Update the dependencies array to be: [getCodeSubmission, id]",{"range":"463","text":"464"},[675,677],"[getQuestion, slug]",[2080,2091],"[clrCodeCreateSuccess, isCreated, props.match.path, setAlert]",[948,959],"[clrQuizDeleteSuccess, isDeleted, setAlert]",[975,986],"[clearTestDetails, clrQuizCreateSuccess, isCreated, setAlert]",[735,746],[1239,1250],"[clrPracProbDeleteSuccess, isDeleted, setAlert]",[1353,1364],[611,622],"[clrCodeDeleteSuccess, isDeleted, setAlert]",[1419,1425],"[codeId, getCodeSubmissions, user]",[717,719],"[getCodeSubmission, id]"]