[{"C:\\Major Projects\\PlacePrep\\client\\src\\index.js":"1","C:\\Major Projects\\PlacePrep\\client\\src\\App.js":"2","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js":"3","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js":"4","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js":"5","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js":"6","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\ViewAnswer.js":"7","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js":"8","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js":"9","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuItem.js":"10","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\SubMenuList.js":"11","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\SubMenuItem.js":"12","C:\\Major Projects\\PlacePrep\\client\\src\\components\\mainview\\MainView.js":"13","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js":"14","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js":"15","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js":"16","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js":"17","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\Coding.js":"18","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Login.js":"19","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Register.js":"20","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js":"21","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js":"22","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js":"23","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js":"24","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js":"25","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeQuestions.js":"26","C:\\Major Projects\\PlacePrep\\client\\src\\store\\configureStore.js":"27","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\reducer.js":"28","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js":"29","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js":"30","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js":"31","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\practiceQuizReducers.js":"32","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js":"33","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\quizActions.js":"34","C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Navbar.js":"35","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCardPage.js":"36","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\EditQuiz.js":"37","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\PracticeQuizQues.js":"38","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\PracticeQuizOption.js":"39"},{"size":198,"mtime":1613036962458,"results":"40","hashOfConfig":"41"},{"size":1074,"mtime":1613145252261,"results":"42","hashOfConfig":"41"},{"size":751,"mtime":1613488906948,"results":"43","hashOfConfig":"41"},{"size":2707,"mtime":1613564951891,"results":"44","hashOfConfig":"41"},{"size":2880,"mtime":1613484014113,"results":"45","hashOfConfig":"41"},{"size":3124,"mtime":1613565331437,"results":"46","hashOfConfig":"41"},{"size":812,"mtime":1613144991773,"results":"47","hashOfConfig":"41"},{"size":6953,"mtime":1612705908067,"results":"48","hashOfConfig":"41"},{"size":7166,"mtime":1613406276144,"results":"49","hashOfConfig":"41"},{"size":1089,"mtime":1612710210351,"results":"50","hashOfConfig":"41"},{"size":656,"mtime":1612710344076,"results":"51","hashOfConfig":"41"},{"size":383,"mtime":1612622631977,"results":"52","hashOfConfig":"41"},{"size":1257,"mtime":1613481428213,"results":"53","hashOfConfig":"41"},{"size":1129,"mtime":1613041728535,"results":"54","hashOfConfig":"41"},{"size":6564,"mtime":1613397106648,"results":"55","hashOfConfig":"41"},{"size":5157,"mtime":1613482655774,"results":"56","hashOfConfig":"41"},{"size":7215,"mtime":1613143691638,"results":"57","hashOfConfig":"41"},{"size":1113,"mtime":1613040294290,"results":"58","hashOfConfig":"41"},{"size":2911,"mtime":1613145251835,"results":"59","hashOfConfig":"41"},{"size":3906,"mtime":1613038370096,"results":"60","hashOfConfig":"41"},{"size":5000,"mtime":1612952799088,"results":"61","hashOfConfig":"41"},{"size":1388,"mtime":1612952773752,"results":"62","hashOfConfig":"41"},{"size":787,"mtime":1613038343146,"results":"63","hashOfConfig":"41"},{"size":545,"mtime":1612952888849,"results":"64","hashOfConfig":"41"},{"size":3111,"mtime":1613143500592,"results":"65","hashOfConfig":"41"},{"size":8668,"mtime":1613143482206,"results":"66","hashOfConfig":"41"},{"size":292,"mtime":1613210742016,"results":"67","hashOfConfig":"41"},{"size":388,"mtime":1613137969901,"results":"68","hashOfConfig":"41"},{"size":431,"mtime":1613141487048,"results":"69","hashOfConfig":"41"},{"size":440,"mtime":1613141296427,"results":"70","hashOfConfig":"41"},{"size":2063,"mtime":1613483822282,"results":"71","hashOfConfig":"41"},{"size":431,"mtime":1613141448468,"results":"72","hashOfConfig":"41"},{"size":1925,"mtime":1613483159113,"results":"73","hashOfConfig":"41"},{"size":4521,"mtime":1613559686008,"results":"74","hashOfConfig":"41"},{"size":1817,"mtime":1613145251839,"results":"75","hashOfConfig":"41"},{"size":695,"mtime":1613467546863,"results":"76","hashOfConfig":"41"},{"size":7995,"mtime":1613478724496,"results":"77","hashOfConfig":"41"},{"size":2307,"mtime":1613486930178,"results":"78","hashOfConfig":"41"},{"size":1191,"mtime":1613488212815,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1u3doc7",{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"C:\\Major Projects\\PlacePrep\\client\\src\\index.js",[],["170","171"],"C:\\Major Projects\\PlacePrep\\client\\src\\App.js",["172","173"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Auth.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport SideBar from './components/sidebar/SideBar';\r\nimport MainView from './components/mainview/MainView';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './store/configureStore';\r\n\r\nconst App = () => {\r\n  const store = configureStore();\r\n  {/* <div style={{ display: 'flex', height: '100vh' }}> */ }\r\n\r\n  {/* </div> */ }\r\n  return (\r\n    <Provider store={store} >\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <>\r\n            <div style={{ display: 'flex', height: '100vh' }} >\r\n              <SideBar />\r\n              <MainView />\r\n            </div>\r\n          </>\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js",["174"],"import React, { Fragment, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport './quiz.css';\r\n\r\nconst QuizOption = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={`mt-3 mb-3 pr-2 rounded option ${(props.isClicked && 'correct')}`}>\r\n                <Accordion.Toggle as={Button} onClick={props.onClickFunc} variant=\"\" eventKey={props.isCorrect ? '0' : '1'}  >\r\n                    {props.text}\r\n                </Accordion.Toggle>\r\n                \r\n                {/* <div className='icon cross' ><i className=\"fa fa-times\" aria-hidden=\"true\"></i></div> */}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default QuizOption;\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js",["175"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Button from 'react-bootstrap/Button';\r\nimport QuizOption from './QuizOption';\r\nimport './quiz.css';\r\nimport { connect } from 'react-redux';\r\nimport { submitQuiz } from '../../store/actions/quizActions';\r\n\r\nconst QuizQues = (props) => {\r\n    const { submitQuiz } = props;\r\n\r\n    let tempUserAnswers;\r\n    useEffect(() => {\r\n        tempUserAnswers = props.questions.map((ele) => {\r\n            return {\r\n                questionId: ele._id,\r\n                selectedAnswer: ''\r\n            };\r\n        });\r\n        setUserAnswers(tempUserAnswers);\r\n    }, [tempUserAnswers]);\r\n\r\n    const [userAnswers, setUserAnswers] = useState(null);\r\n\r\n    const handleOptClick = (index, ans) => {\r\n        console.log('clcic', index);\r\n        let tempArr = [...userAnswers];\r\n        tempArr[index] = { ...tempArr[index], selectedAnswer: ans };\r\n        setUserAnswers(tempArr);\r\n    };\r\n\r\n    const handleOnClick = () => {\r\n\r\n        submitQuiz(props.quizId, { userAnswers: userAnswers });\r\n        tempUserAnswers = props.questions.map((ele) => {\r\n            return {\r\n                questionId: ele._id,\r\n                selectedAnswer: ''\r\n            };\r\n        });\r\n        setUserAnswers(tempUserAnswers);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            { props.questions.map((ele, index) => (\r\n                userAnswers ? (\r\n                    <Accordion key={index} className='my-2'>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    {`${index + 1}.`} {ele.question}\r\n                                </Card.Title>\r\n                                {ele.answers.map((ansEle, ansIdx) => <QuizOption\r\n                                    key={ansIdx}\r\n                                    onClickFunc={() => handleOptClick(index, ansEle)}\r\n                                    isClicked={ansEle === userAnswers[index].selectedAnswer}\r\n                                    text={ansEle} />)}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Accordion>) :\r\n                    <h3 key={index}>Loading...</h3>)\r\n            )}\r\n            <div className=\"text-center\" onClick={handleOnClick} style={{ width: '200px', margin: 'auto' }}>\r\n                <Button className=\"createquiz mb-4\"  >Submit Quiz</Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitQuiz })(QuizQues);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js",["176","177","178","179"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\ViewAnswer.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuItem.js",["180","181","182","183","184","185","186"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\SubMenuList.js",["187","188"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\SubMenuItem.js",["189"],"import React from 'react';\r\n\r\nconst SubMenuItem = (props) => {\r\n    return (\r\n        <li className={`submenu-item ${props.active ? 'active' : ''}`}>\r\n            <a href='#'>\r\n                <i className={`${props.icon} menu-icon`} ></i>\r\n                <span className='menu-text' >{props.text}</span>\r\n            </a>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default SubMenuItem;\r\n",["190","191"],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\mainview\\MainView.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js",["192"],"import React, { useState, useRef } from 'react';\r\n// import './quiz.css';\r\nimport { Button, Form, Alert, Row, Accordion } from 'react-bootstrap';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\n\r\nfunction QuizQuestion(props) {\r\n    const [toggle, setToggle] = useState(false);\r\n    const inpRef = useRef(null);\r\n\r\n    const handleOnFocus = () => {\r\n        if (!toggle) {\r\n            inpRef.current.click();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n\r\n            <Accordion>\r\n                {/* <Accordion.Toggle as={Row} eventKey=\"0\" style={{ cursor: 'pointer', backgroundColor: 'rgb(164, 166, 179)'}}> */}\r\n                <div className=\"row \">\r\n                    <div className=\"col-12\">\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\" >\r\n                            <Form.Label> <b>Question {props.index + 1}</b></Form.Label>\r\n                            <Accordion.Toggle as={Alert.Link}\r\n                                ref={inpRef}\r\n                                onClick={() => setToggle(!toggle)}\r\n                                eventKey=\"0\"\r\n                                style={{ float: 'right', paddingRight: '20px', color: \"#775ecf\" }}\r\n                            >\r\n                                {toggle ? 'Collapse' : 'Expand'}\r\n                            </Accordion.Toggle>\r\n                            <TextareaAutosize\r\n                                className=\"quiz-inputFiled questiontextarea\"\r\n                                name=\"question\"\r\n                                onFocus={handleOnFocus}\r\n                                onChange={props.onChangeFunc}\r\n                                value={props.quesObj.question}\r\n                                placeholder=\"Type question here..\">\r\n\r\n                            </TextareaAutosize>\r\n                        </Form.Group>\r\n                    </div>\r\n                </div>\r\n                {/* </Accordion.Toggle> */}\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionA-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option A</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled\" onChange={props.onChangeFunc} value={props.quesObj.answers[0]} name=\"optionA\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionB-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option B</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[1]} name=\"optionB\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionC-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option C</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[2]} name=\"optionC\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionD-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option D</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[3]} name=\"optionD\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`correctOption-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Correct option</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.correctAnswer} name=\"correctAnswer\" placeholder=\"Enter answer/text\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Button className=\"deletebtn\" onClick={props.onDeleteFunc} >Delete question</Button>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n            <hr className=\"mt-3 \"></hr>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default QuizQuestion;","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\Coding.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Login.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Register.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeQuestions.js",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224"],"import React from 'react';\r\n\r\nimport './CodeQuestDisp.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Form } from 'react-bootstrap';\r\n\r\nfunction CodeQuestions() {\r\n\r\n    return (\r\n        <Container className=\"container-codeQuest\">\r\n            <h3 className=\"text-center  mb-2 pt-4 \">Coding Questions</h3>\r\n            <div className=\"title-border mb-4\">\r\n                <span></span>\r\n            </div>\r\n            <div className=\"displayQuest pb-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 pb-2\">\r\n                        <Form>\r\n                            <Form.Group controlId=\"codingquestionSearch\" >\r\n                                <Form.Control className=\" codingQuestSearch\" type=\"\" placeholder=\"Search question titles, descriptions or ID\" />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <table className=\"table  \">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Title</th>\r\n                            <th scope=\"col\">Solution</th>\r\n                            <th scope=\"col\">Difficulty</th>\r\n                            <th scope=\"col\">Acceptance</th>\r\n                            <th scope=\"col\">Operations</th>\r\n                        </tr>\r\n\r\n                    </thead>\r\n                    <tbody className=\"tbodyCode\">\r\n                        <tr>\r\n                            <th scope=\"row\" >1</th>\r\n                            <td ><a className=\"questTitle\" href=\"/code\">Two Sums</a></td>\r\n                            <td className=\"\"><span><a className=\"fa fa-book questSol\" aria-hidden=\"true\" href=\"#\"></a></span></td>\r\n                            <td className=\"\"><span className=\" diffMod badge  \">Medium</span></td>\r\n                            <td>53.4 %</td>\r\n                            <td>\r\n                                <span>\r\n                                    <a className=\"fa fa-pencil-square operation-E mr-3 \" aria-hidden=\"true\" href=\"#\"></a>\r\n                                </span>\r\n                                <span>\r\n                                    <a className=\"fa fa-trash operation-D\" aria-hidden=\"true\" href=\"#\"></a>\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\" >2</th>\r\n                            <td ><a className=\"questTitle\" href=\"/code\" >Add Two Numbers</a></td>\r\n                            <td className=\"\"><span><a className=\"fa fa-book questSol\" aria-hidden=\"true\" href=\"#\"></a></span></td>\r\n                            <td className=\"\"><span className=\" diffEasy badge bg-success \">Easy</span></td>\r\n                            <td>75.7 %</td>\r\n                            <td>\r\n                                <span>\r\n                                    <a className=\"fa fa-pencil-square operation-E  mr-3\" aria-hidden=\"true\" href=\"#\"></a>\r\n                                </span>\r\n                                <span>\r\n                                    <a className=\"fa fa-trash operation-D\" aria-hidden=\"true\" href=\"#\"></a>\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\" >3</th>\r\n                            <td ><a className=\"questTitle\" href=\"/code\">Largest Substring Without Representing Characters</a></td>\r\n                            <td className=\"\"><span><a className=\"fa fa-book questSol\" aria-hidden=\"true\" href=\"#\"></a></span></td>\r\n                            <td className=\"\"><span className=\" diffEasy badge bg-danger \">Hard</span></td>\r\n                            <td>50.7 %</td>\r\n                            <td>\r\n                                <span>\r\n                                    <a className=\"fa fa-pencil-square operation-E mr-3 \" aria-hidden=\"true\" href=\"#\"></a>\r\n                                </span>\r\n                                <span>\r\n                                    <a className=\"fa fa-trash operation-D\" aria-hidden=\"true\" href=\"#\"></a>\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\" >4</th>\r\n                            <td ><a className=\"questTitle\" href=\"/code\">Median Of Two Sorted Numbers</a></td>\r\n                            <td className=\"\"><span><a className=\"fa fa-book questSol\" aria-hidden=\"true\" href=\"#\"></a></span></td>\r\n                            <td className=\"\"><span className=\" diffMod badge  \">Medium</span></td>\r\n                            <td>40.1 %</td>\r\n                            <td>\r\n                                <span>\r\n                                    <a className=\"fa fa-pencil-square operation-E mr-3  \" aria-hidden=\"true\" href=\"#\"></a>\r\n                                </span>\r\n                                <span>\r\n                                    <a className=\"fa fa-trash operation-D\" aria-hidden=\"true\" href=\"#\"></a>\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\" >5</th>\r\n                            <td ><a className=\"questTitle\" href=\"/code\">Longest Palindrome Substring</a></td>\r\n                            <td className=\"\"><span><a className=\"  fa fa-book questSol\" aria-hidden=\"true\" href=\"#\"></a></span></td>\r\n                            <td className=\"\"><span className=\" diffEasy badge bg-danger \">Hard</span></td>\r\n                            <td>34.7 %</td>\r\n                            <td>\r\n                                <span>\r\n                                    <a className=\"fa fa-pencil-square operation-E  mr-3 \" aria-hidden=\"true\" href=\"#\"></a>\r\n                                </span>\r\n                                <span>\r\n                                    <a className=\"fa fa-trash operation-D\" aria-hidden=\"true\" href=\"#\"></a>\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"row\">\r\n                    <div className=\"ml-3 \">\r\n                        <Form>\r\n                            <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                <Form.Control as=\"select\" className=\"dispCode-inputFiled rowsPerPg\" >\r\n                                    <option className=\"optionSelect\">10</option>\r\n                                    <option className=\"optionSelect\">25</option>\r\n                                    <option className=\"optionSelect\">50</option>\r\n                                    <option className=\"optionSelect\">100</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                        </Form>\r\n                    </div>\r\n                    <span className=\"labelRowsPerPg mt-2 col-4\">rows per page.</span>\r\n\r\n                    <div className=\" paginatt \">\r\n                        <nav aria-label=\"Page navigation example\" >\r\n                            <ul className=\"pagination nav2\">\r\n                                <li className=\"\">\r\n                                    <a className=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n                                        <span aria-hidden=\"true\" className=\"pagntColor\">&laquo;</span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\" \"><a className=\"page-link pagntColor\" href=\"#1\">1</a></li>\r\n                                <li className=\"active\"><a className=\"page-link pagntColor \" href=\"#2\">2</a></li>\r\n                                <li className=\" \"><a className=\"page-link pagntColor \" href=\"#3\">3</a></li>\r\n                                <li className=\"\">\r\n                                    <a className=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                                        <span aria-hidden=\"true\" className=\"pagntColor\">&raquo;</span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </nav>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default CodeQuestions;","C:\\Major Projects\\PlacePrep\\client\\src\\store\\configureStore.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\reducer.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\practiceQuizReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\quizActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Navbar.js",["225","226"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nconst Navbars = () => {\r\n    const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n    const toggleSidebarBtn = () => {\r\n        setSidebarOpen(!sidebarOpen);\r\n    };\r\n    const authLinks = (\r\n        <Fragment>\r\n            <span>\r\n                <img className=\"nav__user-img\" src=\"/profile.jpg\" />\r\n                <span className='user-name'>Hello Shaibaz</span>\r\n            </span>\r\n            <span>\r\n                <a href=\"#!\">\r\n                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                    <span className=\"hide-sm\"> Logout</span>\r\n                </a>\r\n            </span>\r\n        </Fragment>\r\n    );\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <Link to=\"/register\">Register</Link>\r\n            <Link to=\"/login\">Login</Link>\r\n        </Fragment>\r\n    );\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <div id='sidebar-btn' onClick={toggleSidebarBtn} >\r\n                <i className='fas fa-bars menu-icon' ></i>\r\n            </div>\r\n            <Navbar.Brand>\r\n                <img\r\n                    alt=\"\"\r\n                    src=\"./assets/img/logo.png\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{\" \"}\r\n                PlacePrep\r\n            </Navbar.Brand>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    {/* Signed in as: <a href=\"#login\">Mark Otto</a> */}\r\n                    {authLinks}\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default Navbars;\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCardPage.js",["227"],"import React, { useEffect } from 'react';\r\nimport QuizCard from './QuizCard';\r\nimport { connect } from 'react-redux';\r\nimport { getQuizzes } from '../../store/actions/quizActions';\r\n\r\nconst QuizCardPage = (props) => {\r\n    const { quiz: {quizzes},  getQuizzes } = props;\r\n\r\n    useEffect(() => {\r\n        getQuizzes();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {quizzes.length === 0 ?\r\n                <h3>No quizzes available</h3> :\r\n                quizzes.map((ele) => <QuizCard key={ele._id} quizObj={ele} />)}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuizzes })(QuizCardPage);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\EditQuiz.js",["228","229"],"import React, { useState, useEffect } from 'react';\r\nimport './quiz.css';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport QuizQuestion from './CreateQuizQuestion';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getQuiz,\r\n    updateQuiz,\r\n    deleteQuizQuestion,\r\n    setCurrentQuiz\r\n} from '../../store/actions/quizActions';\r\n\r\nconst EditQuiz = (props) => {\r\n    const { quiz: { current },\r\n        getQuiz,\r\n        updateQuiz,\r\n        deleteQuizQuestion,\r\n        setCurrentQuiz,\r\n        match } = props;\r\n\r\n    const slug = match.params.slug;\r\n    useEffect(() => {\r\n        getQuiz(slug);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (current !== null) {\r\n            // if User updates Quiz title then slug also updates\r\n            // Hence updating slug in the url\r\n            props.history.replace({ pathname: `/editQuiz/${current.slug}` });\r\n\r\n            let tempDeepCopy = JSON.parse(JSON.stringify(current));\r\n            setQuizLocal(tempDeepCopy)\r\n        }\r\n        else {\r\n            console.log('d3')\r\n            setQuizLocal({\r\n                title: '',\r\n                category: '',\r\n                topic: '',\r\n                duration: '',\r\n                questions: [{\r\n                    id: 0,\r\n                    question: '',\r\n                    answers: ['', '', '', ''],\r\n                    correctAnswer: ''\r\n                }]\r\n            })\r\n        }\r\n    }, [current]);\r\n\r\n    // let tempDeepCopy = JSON.parse(JSON.stringify(current));\r\n    const [quizLocal, setQuizLocal] = useState({\r\n        title: '',\r\n        category: '',\r\n        topic: '',\r\n        duration: '',\r\n        questions: [{\r\n            id: 0,\r\n            question: '',\r\n            answers: ['', '', '', ''],\r\n            correctAnswer: ''\r\n        }]\r\n    });\r\n\r\n    const [lastId, setLastId] = useState(0);\r\n\r\n    const handleAddQuesClick = () => {\r\n        const newQuesObj = {\r\n            id: lastId + 1,\r\n            question: '',\r\n            answers: ['', '', '', ''],\r\n            correctAnswer: ''\r\n        };\r\n\r\n        setLastId(lastId + 1);\r\n\r\n        const newQuesArray = [...quizLocal.questions, newQuesObj];\r\n        setQuizLocal({\r\n            ...quizLocal,\r\n            questions: newQuesArray\r\n        });\r\n\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setQuizLocal({\r\n            ...quizLocal,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleOnChangeQues = (e, index) => {\r\n        const quesArray = [...quizLocal.questions];\r\n        if (e.target.name === 'question' || e.target.name === 'correctAnswer') {\r\n            quesArray[index][e.target.name] = e.target.value;\r\n            setQuizLocal({\r\n                ...quizLocal,\r\n                questions: quesArray\r\n            });\r\n        }\r\n        else {\r\n            let optIndex = 0;\r\n            if (e.target.name === 'optionB') {\r\n                optIndex = 1;\r\n            }\r\n            else if (e.target.name === 'optionC') {\r\n                optIndex = 2;\r\n            }\r\n            else if (e.target.name === 'optionD') {\r\n                optIndex = 3;\r\n            }\r\n            quesArray[index].answers[optIndex] = e.target.value;\r\n            setQuizLocal({\r\n                ...quizLocal,\r\n                questions: quesArray\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    const handleOnDelete = (eleId) => {\r\n        const newQuesArray = quizLocal.questions.filter((ele) => {\r\n            let tempId = ele.id || ele._id;\r\n            return eleId !== tempId;\r\n        });\r\n\r\n        if (isNaN(eleId)) {\r\n            deleteQuizQuestion(eleId)\r\n        }\r\n\r\n        setQuizLocal({\r\n            ...quizLocal,\r\n            questions: newQuesArray\r\n        });\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        updateQuiz(quizLocal);\r\n        setCurrentQuiz(quizLocal);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {current ? (<Container className=\"container-quiz\">\r\n                <h3 className=\"text-center  mb-2 pt-4 \">QUIZ DETAILS</h3>\r\n                <div className=\"title-border mb-4\">\r\n                    <span></span>\r\n                </div>\r\n                <div className=\"createquizform pb-1\">\r\n                    <Form onSubmit={onSubmit} >\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"quiztitle\" >\r\n                                    <Form.Label><b>Quiz title</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled\" name=\"title\" value={quizLocal.title} onChange={handleOnChange} type=\"\" placeholder=\"Enter Title\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"category\" >\r\n                                    <Form.Label><b>Quiz Category</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled\" name=\"category\" value={quizLocal.category} onChange={handleOnChange} type=\"\" placeholder=\"Quantitative/ Logical/ Other\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6 responsivelabel\">\r\n                                <Form.Group controlId=\"topics\" >\r\n                                    <Form.Label><b>Quiz topics</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" name=\"topic\" value={quizLocal.topic} onChange={handleOnChange} type=\"\" placeholder=\"Example: Probability, Trains...\" />\r\n                                </Form.Group>\r\n\r\n                            </div>\r\n                            <div className=\"col-sm-6 responsivelabel\">\r\n                                <Form.Group controlId=\"duration\" >\r\n                                    <Form.Label><b >Duration</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled quizDuration \" name=\"duration\" value={quizLocal.duration} onChange={handleOnChange} type=\"number\" placeholder=\"Minutes only\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <h3 className=\"text-center  mb-2 pt-2 \">ADD QUESTIONS</h3>\r\n                        <div className=\"title-border mb-3\">\r\n                            <span></span>\r\n                        </div>\r\n\r\n\r\n                        {quizLocal.questions.map((ele, index) => <QuizQuestion\r\n                            key={ele._id || ele.id}\r\n                            index={index}\r\n                            onDeleteFunc={() => handleOnDelete(ele.id || ele._id)}\r\n                            onChangeFunc={(e) => handleOnChangeQues(e, index)}\r\n                            quesObj={ele}\r\n                        />\r\n                        )}\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <Button className=\"addquestbtn mb-2\" onClick={handleAddQuesClick} > Add Next Question  </Button>\r\n                            </div>\r\n                            <div className=\"col-sm-6 text-center\">\r\n                                <Button className=\"createquiz mb-4\" type=\"submit\" > Update Quiz</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </Container>) : <h3>Loading..</h3>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        quiz: state.quiz\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    getQuiz,\r\n    updateQuiz,\r\n    deleteQuizQuestion,\r\n    setCurrentQuiz\r\n})(EditQuiz);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\PracticeQuizQues.js",["230"],"import React, { Fragment } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport PracticeQuizOption from './PracticeQuizOption';\r\nimport ViewAnswer from './ViewAnswer';\r\nimport './quiz.css';\r\n\r\nconst PracticeQuizQues = (props) => {\r\n    const temp = [{\r\n        question: 'What does HTML stand for?',\r\n        optionA: 'Hyper Text Preprocessor',\r\n        optionB: 'Hyper Text Markup Language',\r\n        optionC: 'Hyper Text Multiple Language',\r\n        optionD: 'Hyper Text Multi Language',\r\n        correctOption: 'Hyper Text Markup Language'\r\n    },\r\n    {\r\n        question: 'Who is making the Web standards?',\r\n        optionA: 'The World Wide Web Consortium',\r\n        optionB: 'Google',\r\n        optionC: 'Mozilla',\r\n        optionD: 'Firefox',\r\n        correctOption: 'The World Wide Web Consortium'\r\n    },\r\n    {\r\n        question: 'Choose the correct HTML element for the largest heading:',\r\n        optionA: '<head>',\r\n        optionB: '<heading>',\r\n        optionC: '<h1>',\r\n        optionD: '<h6>',\r\n        correctOption: '<h1>'\r\n    },\r\n    {\r\n        question: 'Choose the correct HTML element to define important text',\r\n        optionA: '<strong>',\r\n        optionB: '<i>',\r\n        optionC: '<important>',\r\n        optionD: '<b>',\r\n        correctOption: '<strong>'\r\n    }\r\n\r\n    ];\r\n\r\n\r\n    return props.questions.map((ele, index) => {\r\n        return (\r\n            <Fragment key={index}>\r\n                <Accordion className='my-2'>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                                {`${index + 1}.`} {ele.question}\r\n                            </Card.Title>\r\n                            {ele.answers.map((ansEle, ansIdx) => <PracticeQuizOption\r\n                                key={ansIdx}\r\n                                text={ansEle}\r\n                                isCorrect={ansEle === ele.correctAnswer ? true : false} />)}\r\n                           \r\n                            <ViewAnswer eKey='0' correctOption={ele.correctAnswer} />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Accordion>\r\n            </Fragment>\r\n        );\r\n    });\r\n\r\n};\r\n\r\nexport default PracticeQuizQues;","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\PracticeQuizOption.js",[],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":14,"column":3,"nodeType":"237","messageId":"238","endLine":14,"endColumn":62},{"ruleId":"235","severity":1,"message":"236","line":16,"column":3,"nodeType":"237","messageId":"238","endLine":16,"endColumn":18},{"ruleId":"239","severity":1,"message":"240","line":1,"column":27,"nodeType":"241","messageId":"242","endLine":1,"endColumn":35},{"ruleId":"243","severity":1,"message":"244","line":15,"column":27,"nodeType":"245","endLine":20,"endColumn":11},{"ruleId":"239","severity":1,"message":"246","line":1,"column":38,"nodeType":"241","messageId":"242","endLine":1,"endColumn":46},{"ruleId":"239","severity":1,"message":"247","line":7,"column":8,"nodeType":"241","messageId":"242","endLine":7,"endColumn":24},{"ruleId":"239","severity":1,"message":"248","line":12,"column":41,"nodeType":"241","messageId":"242","endLine":12,"endColumn":51},{"ruleId":"243","severity":1,"message":"249","line":17,"column":8,"nodeType":"250","endLine":17,"endColumn":10,"suggestions":"251"},{"ruleId":"239","severity":1,"message":"246","line":1,"column":27,"nodeType":"241","messageId":"242","endLine":1,"endColumn":35},{"ruleId":"239","severity":1,"message":"252","line":5,"column":12,"nodeType":"241","messageId":"242","endLine":5,"endColumn":24},{"ruleId":"239","severity":1,"message":"253","line":5,"column":26,"nodeType":"241","messageId":"242","endLine":5,"endColumn":41},{"ruleId":"239","severity":1,"message":"254","line":6,"column":11,"nodeType":"241","messageId":"242","endLine":6,"endColumn":24},{"ruleId":"235","severity":1,"message":"236","line":12,"column":5,"nodeType":"237","messageId":"238","endLine":31,"endColumn":6},{"ruleId":"255","severity":1,"message":"256","line":16,"column":21,"nodeType":"257","endLine":16,"endColumn":33},{"ruleId":"255","severity":1,"message":"256","line":25,"column":17,"nodeType":"257","endLine":25,"endColumn":29},{"ruleId":"239","severity":1,"message":"258","line":2,"column":8,"nodeType":"241","messageId":"242","endLine":2,"endColumn":19},{"ruleId":"255","severity":1,"message":"256","line":10,"column":25,"nodeType":"257","endLine":10,"endColumn":37},{"ruleId":"255","severity":1,"message":"256","line":6,"column":13,"nodeType":"257","endLine":6,"endColumn":25},{"ruleId":"231","replacedBy":"259"},{"ruleId":"233","replacedBy":"260"},{"ruleId":"239","severity":1,"message":"261","line":3,"column":31,"nodeType":"241","messageId":"242","endLine":3,"endColumn":34},{"ruleId":"262","severity":1,"message":"263","line":41,"column":52,"nodeType":"257","endLine":41,"endColumn":115},{"ruleId":"255","severity":1,"message":"256","line":41,"column":52,"nodeType":"257","endLine":41,"endColumn":115},{"ruleId":"262","severity":1,"message":"263","line":46,"column":37,"nodeType":"257","endLine":46,"endColumn":118},{"ruleId":"255","severity":1,"message":"256","line":46,"column":37,"nodeType":"257","endLine":46,"endColumn":118},{"ruleId":"262","severity":1,"message":"263","line":49,"column":37,"nodeType":"257","endLine":49,"endColumn":104},{"ruleId":"255","severity":1,"message":"256","line":49,"column":37,"nodeType":"257","endLine":49,"endColumn":104},{"ruleId":"262","severity":1,"message":"263","line":56,"column":52,"nodeType":"257","endLine":56,"endColumn":115},{"ruleId":"255","severity":1,"message":"256","line":56,"column":52,"nodeType":"257","endLine":56,"endColumn":115},{"ruleId":"262","severity":1,"message":"263","line":61,"column":37,"nodeType":"257","endLine":61,"endColumn":118},{"ruleId":"255","severity":1,"message":"256","line":61,"column":37,"nodeType":"257","endLine":61,"endColumn":118},{"ruleId":"262","severity":1,"message":"263","line":64,"column":37,"nodeType":"257","endLine":64,"endColumn":104},{"ruleId":"255","severity":1,"message":"256","line":64,"column":37,"nodeType":"257","endLine":64,"endColumn":104},{"ruleId":"262","severity":1,"message":"263","line":71,"column":52,"nodeType":"257","endLine":71,"endColumn":115},{"ruleId":"255","severity":1,"message":"256","line":71,"column":52,"nodeType":"257","endLine":71,"endColumn":115},{"ruleId":"262","severity":1,"message":"263","line":76,"column":37,"nodeType":"257","endLine":76,"endColumn":118},{"ruleId":"255","severity":1,"message":"256","line":76,"column":37,"nodeType":"257","endLine":76,"endColumn":118},{"ruleId":"262","severity":1,"message":"263","line":79,"column":37,"nodeType":"257","endLine":79,"endColumn":104},{"ruleId":"255","severity":1,"message":"256","line":79,"column":37,"nodeType":"257","endLine":79,"endColumn":104},{"ruleId":"262","severity":1,"message":"263","line":86,"column":52,"nodeType":"257","endLine":86,"endColumn":115},{"ruleId":"255","severity":1,"message":"256","line":86,"column":52,"nodeType":"257","endLine":86,"endColumn":115},{"ruleId":"262","severity":1,"message":"263","line":91,"column":37,"nodeType":"257","endLine":91,"endColumn":119},{"ruleId":"255","severity":1,"message":"256","line":91,"column":37,"nodeType":"257","endLine":91,"endColumn":119},{"ruleId":"262","severity":1,"message":"263","line":94,"column":37,"nodeType":"257","endLine":94,"endColumn":104},{"ruleId":"255","severity":1,"message":"256","line":94,"column":37,"nodeType":"257","endLine":94,"endColumn":104},{"ruleId":"262","severity":1,"message":"263","line":101,"column":52,"nodeType":"257","endLine":101,"endColumn":117},{"ruleId":"255","severity":1,"message":"256","line":101,"column":52,"nodeType":"257","endLine":101,"endColumn":117},{"ruleId":"262","severity":1,"message":"263","line":106,"column":37,"nodeType":"257","endLine":106,"endColumn":119},{"ruleId":"255","severity":1,"message":"256","line":106,"column":37,"nodeType":"257","endLine":106,"endColumn":119},{"ruleId":"262","severity":1,"message":"263","line":109,"column":37,"nodeType":"257","endLine":109,"endColumn":104},{"ruleId":"255","severity":1,"message":"256","line":109,"column":37,"nodeType":"257","endLine":109,"endColumn":104},{"ruleId":"255","severity":1,"message":"256","line":135,"column":37,"nodeType":"257","endLine":135,"endColumn":93},{"ruleId":"255","severity":1,"message":"256","line":143,"column":37,"nodeType":"257","endLine":143,"endColumn":89},{"ruleId":"264","severity":1,"message":"265","line":14,"column":17,"nodeType":"257","endLine":14,"endColumn":69},{"ruleId":"239","severity":1,"message":"266","line":25,"column":11,"nodeType":"241","messageId":"242","endLine":25,"endColumn":21},{"ruleId":"243","severity":1,"message":"267","line":11,"column":8,"nodeType":"250","endLine":11,"endColumn":10,"suggestions":"268"},{"ruleId":"243","severity":1,"message":"249","line":24,"column":8,"nodeType":"250","endLine":24,"endColumn":10,"suggestions":"269"},{"ruleId":"243","severity":1,"message":"270","line":50,"column":8,"nodeType":"250","endLine":50,"endColumn":17,"suggestions":"271"},{"ruleId":"239","severity":1,"message":"272","line":9,"column":11,"nodeType":"241","messageId":"242","endLine":9,"endColumn":15},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'tempUserAnswers' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Fragment' is defined but never used.","'PracticeQuizQues' is defined but never used.","'submitQuiz' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQuiz' and 'slug'. Either include them or remove the dependency array.","ArrayExpression",["275"],"'activeStatus' is assigned a value but never used.","'setActiveStatus' is assigned a value but never used.","'handleOnClick' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'SubMenuItem' is defined but never used.",["273"],["274"],"'Row' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'guestLinks' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQuizzes'. Either include it or remove the dependency array.",["276"],["277"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["278"],"'temp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"279","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [getQuiz, slug]",{"range":"286","text":"287"},"Update the dependencies array to be: [getQuizzes]",{"range":"288","text":"289"},{"range":"290","text":"287"},"Update the dependencies array to be: [current, props.history]",{"range":"291","text":"292"},[633,635],"[getQuiz, slug]",[327,329],"[getQuizzes]",[631,633],[1436,1445],"[current, props.history]"]