[{"E:\\project\\PlacePrep\\client\\src\\index.js":"1","E:\\project\\PlacePrep\\client\\src\\App.js":"2","E:\\project\\PlacePrep\\client\\src\\components\\auth\\Login.js":"3","E:\\project\\PlacePrep\\client\\src\\components\\auth\\Register.js":"4","E:\\project\\PlacePrep\\client\\src\\components\\coding\\Coding.js":"5","E:\\project\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js":"6","E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js":"7","E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js":"8","E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js":"9","E:\\project\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js":"10","E:\\project\\PlacePrep\\client\\src\\components\\mainview\\MainView.js":"11","E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js":"12","E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js":"13","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js":"14","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js":"15","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js":"16","E:\\project\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js":"17","E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js":"18","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js":"19","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js":"20","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js":"21","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\ViewAnswer.js":"22","E:\\project\\PlacePrep\\client\\src\\components\\layout\\Navbar.js":"23","E:\\project\\PlacePrep\\client\\src\\store\\configureStore.js":"24","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\reducer.js":"25","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js":"26","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js":"27","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\practiceQuizReducers.js":"28","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js":"29","E:\\project\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js":"30","E:\\project\\PlacePrep\\client\\src\\store\\actions\\authActions.js":"31","E:\\project\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js":"32","E:\\project\\PlacePrep\\client\\src\\store\\actions\\codeActions.js":"33","E:\\project\\PlacePrep\\client\\src\\components\\layout\\Spinner.js":"34","E:\\project\\PlacePrep\\client\\src\\components\\layout\\Home.js":"35","E:\\project\\PlacePrep\\client\\src\\components\\code\\CodeQuestions.js":"36","E:\\project\\PlacePrep\\client\\src\\components\\code\\codeTableRow.js":"37","E:\\project\\PlacePrep\\client\\src\\components\\code\\Pagination.js":"38","E:\\project\\PlacePrep\\client\\src\\components\\code\\paginate.js":"39"},{"size":345,"mtime":1613386251797,"results":"40","hashOfConfig":"41"},{"size":1467,"mtime":1613731597027,"results":"42","hashOfConfig":"41"},{"size":3843,"mtime":1613473901886,"results":"43","hashOfConfig":"41"},{"size":4973,"mtime":1613644342651,"results":"44","hashOfConfig":"41"},{"size":1777,"mtime":1613997789534,"results":"45","hashOfConfig":"41"},{"size":787,"mtime":1613041950809,"results":"46","hashOfConfig":"41"},{"size":545,"mtime":1612959040740,"results":"47","hashOfConfig":"41"},{"size":5362,"mtime":1613994936002,"results":"48","hashOfConfig":"41"},{"size":2180,"mtime":1613997627711,"results":"49","hashOfConfig":"41"},{"size":8004,"mtime":1613806873002,"results":"50","hashOfConfig":"41"},{"size":1112,"mtime":1613988853845,"results":"51","hashOfConfig":"41"},{"size":6841,"mtime":1613808512317,"results":"52","hashOfConfig":"41"},{"size":7164,"mtime":1613041920888,"results":"53","hashOfConfig":"41"},{"size":4637,"mtime":1613041920888,"results":"54","hashOfConfig":"41"},{"size":1104,"mtime":1613196434973,"results":"55","hashOfConfig":"41"},{"size":1830,"mtime":1613196434972,"results":"56","hashOfConfig":"41"},{"size":13737,"mtime":1613803423388,"results":"57","hashOfConfig":"41"},{"size":1129,"mtime":1613041920888,"results":"58","hashOfConfig":"41"},{"size":4749,"mtime":1613041920888,"results":"59","hashOfConfig":"41"},{"size":3420,"mtime":1612959040220,"results":"60","hashOfConfig":"41"},{"size":1261,"mtime":1612959040220,"results":"61","hashOfConfig":"41"},{"size":812,"mtime":1613196434973,"results":"62","hashOfConfig":"41"},{"size":2087,"mtime":1613811581324,"results":"63","hashOfConfig":"41"},{"size":274,"mtime":1613196485705,"results":"64","hashOfConfig":"41"},{"size":388,"mtime":1613196435051,"results":"65","hashOfConfig":"41"},{"size":1698,"mtime":1613806468011,"results":"66","hashOfConfig":"41"},{"size":2947,"mtime":1613993745270,"results":"67","hashOfConfig":"41"},{"size":353,"mtime":1613646904391,"results":"68","hashOfConfig":"41"},{"size":492,"mtime":1613196435051,"results":"69","hashOfConfig":"41"},{"size":2156,"mtime":1613993961545,"results":"70","hashOfConfig":"41"},{"size":2947,"mtime":1613806530756,"results":"71","hashOfConfig":"41"},{"size":521,"mtime":1613733327068,"results":"72","hashOfConfig":"41"},{"size":4090,"mtime":1613994960201,"results":"73","hashOfConfig":"41"},{"size":358,"mtime":1613807454842,"results":"74","hashOfConfig":"41"},{"size":2114,"mtime":1613988470467,"results":"75","hashOfConfig":"41"},{"size":8527,"mtime":1613993022466,"results":"76","hashOfConfig":"41"},{"size":2446,"mtime":1613993235605,"results":"77","hashOfConfig":"41"},{"size":1218,"mtime":1613991939010,"results":"78","hashOfConfig":"41"},{"size":211,"mtime":1613991469736,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"kwzxpx",{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\project\\PlacePrep\\client\\src\\index.js",[],["169","170"],"E:\\project\\PlacePrep\\client\\src\\App.js",["171","172","173","174","175","176"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Auth.css\";\r\nimport { BrowserRouter as Router, Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\nimport SideBar from \"./components/sidebar/SideBar\";\r\nimport MainView from \"./components/mainview/MainView\";\r\nimport Navbar from \"./components/layout/Navbar\"\r\nimport Home from \"./components/layout/Home\"\r\nimport { connect } from \"react-redux\";\r\nimport { loadUser } from \"./store/actions/authActions\";\r\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\r\n\r\nconst App = (props) => {\r\n    const { loadUser } = props;\r\n    loadUser(false, true);\r\n    {\r\n        /* <div style={{ display: 'flex', height: '100vh' }}> */\r\n    }\r\n\r\n    {\r\n        /* </div> */\r\n    }\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                <PrivateRoute path =\"/\" component={Home} />\r\n                {/* <>\r\n                    <Navbar />\r\n                    <div style={{ display: \"flex\", height: \"100vh\" }}>\r\n                        <SideBar />\r\n                        <MainView />\r\n                    </div>\r\n                </> */}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default connect(null, { loadUser })(App);\r\n","E:\\project\\PlacePrep\\client\\src\\components\\auth\\Login.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\auth\\Register.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\Coding.js",["177"],"E:\\project\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js",["178"],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js",["179"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./UserProfile.css\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateMe } from \"../../store/actions/authActions\";\r\n\r\nconst UserProfile = (props) => {\r\n    const { updateMe } = props;\r\n    const { user, isAuthenticated } = props.auth;\r\n\r\n    const [userDetails, setUserDetails] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        photo: \"\"\r\n    });\r\n    const [userPasswordDetails, setUserPasswordDetails] = useState({\r\n        passwordCurrent: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            setUserDetails({\r\n                name: user.name,\r\n                email: user.email,\r\n                photo: \"\"\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const handleOnChange = (e) => {\r\n        setUserDetails({\r\n            ...userDetails,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    const handleOnImageChange = (e) => {\r\n        setUserDetails({\r\n            ...userDetails,\r\n            photo: e.target.files[0],\r\n        });\r\n    };\r\n    const handleOnChangePassword = (e) => {\r\n        setUserPasswordDetails({\r\n            ...userPasswordDetails,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (userDetails.name === \"\" || userDetails.email === \"\") {\r\n            console.log(\"Please enter all fields\", \"danger\");\r\n        } else {\r\n            updateMe(userDetails,'data')\r\n        }\r\n    };\r\n\r\n    const handleOnSubmitPassword = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            userPasswordDetails.passwordCurrent === \"\" ||\r\n            userPasswordDetails.password === \"\" ||\r\n            userPasswordDetails.passwordConfirm === \"\"\r\n        ) {\r\n            console.log(\"Please enter all fields\", \"danger\");\r\n        } else if (\r\n            userPasswordDetails.password !== userPasswordDetails.passwordConfirm\r\n        ) {\r\n            console.log(\"Password do not match\", \"danger\");\r\n        } else {\r\n            updateMe(userPasswordDetails,'password')\r\n        }\r\n        setTimeout(() => {\r\n            setUserPasswordDetails({\r\n                passwordCurrent: \"\",\r\n                password: \"\",\r\n                passwordConfirm: \"\",\r\n            })\r\n        }, 2000);\r\n    };\r\n\r\n    return (\r\n        <Container className=\"container-user\">\r\n            <h3 className=\"text-center mb-3 pt-4 \">YOUR ACCOUNT SETTINGS</h3>\r\n            <div className=\"title-border mb-4\">\r\n                <span></span>\r\n            </div>\r\n            <div className=\"userform\">\r\n                <Form className=\"\">\r\n                    <Form.Group controlId=\"Name\">\r\n                        <Form.Label>\r\n                            <b>Name</b>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            className=\"user-inputFiled\"\r\n                            type=\"name\"\r\n                            placeholder=\"Enter name\"\r\n                            name=\"name\"\r\n                            value={userDetails.name}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>\r\n                            <b>Email address</b>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            className=\"user-inputFiled mb-4\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            value={userDetails.email}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    </Form.Group>\r\n                    {/* <p><b>Choose Photo</b></p> */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <img\r\n                                src=\"/profile.jpg\"\r\n                                className=\"profilephoto\"\r\n                                alt=\"\"\r\n                            ></img>\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"photo\"\r\n                                className=\"photo  \"\r\n                                accept=\"image/*\"\r\n                                onChange={handleOnImageChange}\r\n                            ></input>\r\n                            <label className=\"photolabel\">\r\n                                Choose new photo\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <Button\r\n                                className=\" savesetting setting mt-4\"\r\n                                onClick={handleOnSubmit}\r\n                            >\r\n                                Save settings\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n                <hr></hr>\r\n                <h3 className=\"text-center mt-5 mb-3\">PASSWORD CHANGE</h3>\r\n                <div className=\"title-border mb-4\">\r\n                    <span></span>\r\n                </div>\r\n                <Form className=\"\">\r\n                    <Form.Group controlId=\"currentpassword\">\r\n                        <Form.Label>\r\n                            <b>Current password</b>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            className=\"user-inputFiled \"\r\n                            type=\"password\"\r\n                            name=\"passwordCurrent\"\r\n                            placeholder=\"••••••••\"\r\n                            value={userPasswordDetails.passwordCurrent}\r\n                            onChange={handleOnChangePassword}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"newPassword\">\r\n                        <Form.Label>\r\n                            <b>New password</b>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            className=\"user-inputFiled\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"••••••••\"\r\n                            value={userPasswordDetails.password}\r\n                            onChange={handleOnChangePassword}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"confirmPassword\">\r\n                        <Form.Label>\r\n                            <b>Confirm password</b>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            className=\"user-inputFiled\"\r\n                            type=\"password\"\r\n                            name=\"passwordConfirm\"\r\n                            placeholder=\"••••••••\"\r\n                            value={userPasswordDetails.passwordConfirm}\r\n                            onChange={handleOnChangePassword}\r\n                        />\r\n                    </Form.Group>\r\n                    <div className=\"text-center\">\r\n                        <Button\r\n                            className=\"savepassword setting mt-2 \"\r\n                            onClick={handleOnSubmitPassword}\r\n                        >\r\n                            Save password\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateMe})(UserProfile);\r\n","E:\\project\\PlacePrep\\client\\src\\components\\mainview\\MainView.js",["180"],"E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js",["181"],"import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport './quiz.css';\r\n\r\nconst QuizCard = () => {\r\n\r\n    return (\r\n        <Card className='quiz_card'>\r\n            <Card.Header className='quiz_card_header text-center'>\r\n                <h3>Quantitative Analysis Aptitude</h3>\r\n\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Table className='quiz_card_table text-center' >\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Category</th>\r\n                            <th scope=\"col\">Topics</th>\r\n                            <th scope=\"col\">Questions</th>\r\n                            <th scope=\"col\">Duration</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Quantitative Analysis</td>\r\n                            <td>Train problems, Time and work, Speed distance time, Probability, Average, Ages</td>\r\n                            <td>25</td>\r\n                            <td>1 Hour</td>\r\n                        </tr>\r\n                        <tr>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <div className='text-center' >\r\n                    <a href=\"#\" className=\"btn btn-primary start_quiz_btn\" >Start Quiz</a>\r\n                </div>\r\n            </Card.Body>\r\n            <Card.Footer className='quiz_card_footer' style={{ backgroundColor: 'white' }}>\r\n                <label htmlFor=\"name\">Uploader: Fahad khan</label>\r\n                <label htmlFor=\"name\" style={{ float: 'right' }}>Last updated on Jan 31, 2020</label>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default QuizCard;","E:\\project\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js",["182","183"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./createCode.css\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    addQuestion,\r\n    getQuestion,\r\n    updateQuestion,\r\n    clearCurrent\r\n} from \"../../store/actions/codeActions\";\r\n\r\nconst CreateCodeQuestion = (props) => {\r\n    const { addQuestion, getQuestion, updateQuestion, clearCurrent } = props;\r\n    const { current } = props.code;\r\n    const [codeQuestion, setCodeQuestion] = useState({\r\n        title: \"\",\r\n        difficulty: \"easy\",\r\n        description: \"\",\r\n        testcases: \"\",\r\n        sampleInputs: [],\r\n    });\r\n    const [lastId, setLastId] = useState(0);\r\n    const [sampleArray, setSampleArray] = useState([\r\n        {\r\n            id: 0,\r\n            sampleInput: \"\",\r\n            sampleOutput: \"\",\r\n        },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (props.match.path.includes(\"editCodeQuestion\")) {\r\n            getQuestion(props.match.params.id);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (current !== null && props.match.path.includes(\"editCodeQuestion\")) {\r\n            setCodeQuestion(current);\r\n            if (current.sampleInputs){\r\n                const newArray = current.sampleInputs.map(curr => ({...curr}));\r\n                setSampleArray(newArray)\r\n                setLastId(current.sampleInputs.length-1)\r\n            }\r\n        } else {\r\n            clearCurrent()\r\n            setCodeQuestion({\r\n                title: \"\",\r\n                difficulty: \"easy\",\r\n                description: \"\",\r\n                testcases: \"\",\r\n                sampleInputs: [],\r\n            });\r\n        }\r\n    }, [current]);\r\n\r\n    const handleAddSampleClick = () => {\r\n        const newSampleObj = {\r\n            id: lastId + 1,\r\n            sampleInput: \"\",\r\n            sampleOutput: \"\",\r\n        };\r\n        setLastId(lastId + 1);\r\n\r\n        const newSampleArray = [...sampleArray, newSampleObj];\r\n        setSampleArray(newSampleArray);\r\n    };\r\n\r\n    const handleOnSampleChange = (e, index) => {\r\n        const newSampleArray = [...sampleArray];\r\n        newSampleArray[index][e.target.name] = e.target.value;\r\n\r\n        setSampleArray(newSampleArray);\r\n    };\r\n\r\n    const handleDeleteSample = (e, eleId) => {\r\n        const newSampleArray = sampleArray.filter((ele) => {\r\n            return ele.id !== eleId;\r\n        });\r\n        setSampleArray(newSampleArray);\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setCodeQuestion({\r\n            ...codeQuestion,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            codeQuestion.title === \"\" ||\r\n            codeQuestion.description === \"\" ||\r\n            codeQuestion.testcases === \"\"\r\n        ) {\r\n            console.log(\"Please enter all fields\", \"danger\");\r\n        } else {\r\n            setCodeQuestion({ ...codeQuestion, sampleInputs: sampleArray });\r\n            current !== null\r\n                ? updateQuestion(codeQuestion)\r\n                : addQuestion(codeQuestion);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className=\"container-createCodeQuest\">\r\n            <h3 className=\"text-center mb-2 pt-4 \"> Create Coding Question</h3>\r\n            <div className=\"title-border mb-4\">\r\n                <span></span>\r\n            </div>\r\n            <div className=\"codequestForm \">\r\n                <Form>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Form.Group controlId=\"quiztitle\">\r\n                                <Form.Label>\r\n                                    <b>Question Tiltle</b>\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    className=\"createC-inputFiled\"\r\n                                    type=\"text\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Enter Title\"\r\n                                    value={codeQuestion.title}\r\n                                    onChange={handleOnChange}\r\n                                />\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Form.Group controlId=\"quiztitle\">\r\n                                <Form.Label>\r\n                                    <b>Question Description</b>\r\n                                </Form.Label>\r\n                                <TextareaAutosize\r\n                                    className=\"createC-inputFiled questiontextarea\"\r\n                                    placeholder=\"Provide Description....\"\r\n                                    name=\"description\"\r\n                                    value={codeQuestion.description}\r\n                                    onChange={handleOnChange}\r\n                                ></TextareaAutosize>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n\r\n                    <h3 className=\"text-center  mb-2 pt-1 \">Add Samples</h3>\r\n                    <div className=\"title-border mb-4\">\r\n                        <span></span>\r\n                    </div>\r\n                    {/* Sampless starts from below */}\r\n                    {sampleArray.map((ele, index) => {\r\n                        return (\r\n                            <div className=\"\" key={ele.id}>\r\n                                <div className=\"row \">\r\n                                    <div className=\"col-sm-6\">\r\n                                        <Form.Group controlId=\"quiztitle\">\r\n                                            <Form.Label>\r\n                                                <b>Sample Input</b>\r\n                                            </Form.Label>\r\n                                            <TextareaAutosize\r\n                                                className=\"createC-inputFiled questiontextarea\"\r\n                                                placeholder=\"\"\r\n                                                name=\"sampleInput\"\r\n                                                value={ele.sampleInput}\r\n                                                onChange={(e) =>\r\n                                                    handleOnSampleChange(\r\n                                                        e,\r\n                                                        index\r\n                                                    )\r\n                                                }\r\n                                            ></TextareaAutosize>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6\">\r\n                                        <Form.Group controlId=\"quiztitle\">\r\n                                            <Form.Label>\r\n                                                <b>Sample Output</b>\r\n                                            </Form.Label>\r\n                                            <TextareaAutosize\r\n                                                className=\"createC-inputFiled questiontextarea\"\r\n                                                placeholder=\"\"\r\n                                                name=\"sampleOutput\"\r\n                                                value={ele.sampleOutput}\r\n                                                onChange={(e) =>\r\n                                                    handleOnSampleChange(\r\n                                                        e,\r\n                                                        index\r\n                                                    )\r\n                                                }\r\n                                            ></TextareaAutosize>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row \">\r\n                                    <div className=\"col-sm-12 \">\r\n                                        <Button\r\n                                            className=\"delsamplebtn mb-2\"\r\n                                            onClick={(e) =>\r\n                                                handleDeleteSample(e, ele.id)\r\n                                            }\r\n                                        >\r\n                                            {\" \"}\r\n                                            Delete{\" \"}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n                    {/* samples end here */}\r\n                    <div className=\" text-center\">\r\n                        <Button\r\n                            className=\" addsample mt-3\"\r\n                            onClick={handleAddSampleClick}\r\n                        >\r\n                            {\" \"}\r\n                            Add More Samples{\" \"}\r\n                        </Button>\r\n                    </div>\r\n                    <hr></hr>\r\n\r\n                    <h3 className=\"text-center  mb-2 pt-1 \">Add TestCases</h3>\r\n                    <div className=\"title-border mb-4\">\r\n                        <span></span>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Form.Group controlId=\"quiztitle\">\r\n                                <TextareaAutosize\r\n                                    className=\"createC-inputFiled questiontextarea \"\r\n                                    minRows=\"2\"\r\n                                    placeholder=\"\"\r\n                                    name=\"testcases\"\r\n                                    value={codeQuestion.testcases}\r\n                                    onChange={handleOnChange}\r\n                                ></TextareaAutosize>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <hr className=\"mt-2\"></hr>\r\n\r\n                    <div className=\"row pt-2 pb-3\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Form.Label>\r\n                                <b className=\"mr-2\">Solution </b>\r\n                            </Form.Label>\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"Sfile \"\r\n                                accept=\"\"\r\n                            ></input>\r\n                            <label className=\"filelabel \">\r\n                                Upload Solution\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-sm-2 pt-1 difflabel\">\r\n                            <Form.Label>\r\n                                <b className=\"\"> Set Difficulty </b>\r\n                            </Form.Label>\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Form.Group controlId=\"SelectDifficulty\">\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    name=\"difficulty\"\r\n                                    className=\"createC-inputFiled diffdrop \"\r\n                                    value={codeQuestion.difficulty}\r\n                                    onChange={handleOnChange}\r\n                                >\r\n                                    <option\r\n                                        value=\"easy\"\r\n                                        className=\"optionSelect\"\r\n                                    >\r\n                                        Easy\r\n                                    </option>\r\n                                    <option\r\n                                        value=\"medium\"\r\n                                        className=\"optionSelect\"\r\n                                    >\r\n                                        Medium\r\n                                    </option>\r\n                                    <option\r\n                                        value=\"hard\"\r\n                                        className=\"optionSelect\"\r\n                                    >\r\n                                        Hard\r\n                                    </option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\" text-center\">\r\n                        <Button\r\n                            className=\"createquestbtn mb-4\"\r\n                            onClick={handleOnSubmit}\r\n                        >\r\n                            {current !== null ? ' Edit Question ' : ' Create Question '}\r\n                            \r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    addQuestion,\r\n    getQuestion,\r\n    updateQuestion,\r\n    clearCurrent\r\n})(CreateCodeQuestion);\r\n","E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js",["184"],"import React, { useState } from 'react';\r\n// import './quiz.css';\r\nimport { Button, Form, Alert, Row, Accordion } from 'react-bootstrap';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\n\r\nfunction QuizQuestion(props) {\r\n    const [toggle, setToggle] = useState(false);\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n\r\n            <Accordion>\r\n                {/* <Accordion.Toggle as={Row} eventKey=\"0\" style={{ cursor: 'pointer', backgroundColor: 'rgb(164, 166, 179)'}}> */}\r\n                <div className=\"row \">\r\n                    <div className=\"col-12\">\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\" >\r\n                            <Form.Label> <b>Question {props.index + 1}</b></Form.Label>\r\n                            <Accordion.Toggle as={Alert.Link}\r\n                                onClick={() => setToggle(!toggle)}\r\n                                eventKey=\"0\"\r\n                                style={{ float: 'right', paddingRight: '20px', color: \"#775ecf\" }}\r\n                            >\r\n                                {toggle ? 'Collapse' : 'Expand'}\r\n                            </Accordion.Toggle>\r\n                            <TextareaAutosize\r\n                                className=\"quiz-inputFiled questiontextarea\"\r\n                                name=\"question\"\r\n                                onChange={props.onChangeFunc}\r\n                                value={props.quesObj.ques}\r\n                                placeholder=\"Type question here..\">\r\n\r\n                            </TextareaAutosize>\r\n                        </Form.Group>\r\n                    </div>\r\n                </div>\r\n                {/* </Accordion.Toggle> */}\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"optionA\" >\r\n                                    <Form.Label><b>Option A</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled\" onChange={props.onChangeFunc} value={props.quesObj.optA} name=\"optionA\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"optionB\" >\r\n                                    <Form.Label><b>Option B</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.optB} name=\"optionB\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"optionC\" >\r\n                                    <Form.Label><b>Option C</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.optC} name=\"optionC\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"optionD\" >\r\n                                    <Form.Label><b>Option D</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.optD} name=\"optionD\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"correctOption\" >\r\n                                    <Form.Label><b>Correct option</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.correctOpt} name=\"correctOption\" placeholder=\"Enter answer/text\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Button className=\"deletebtn\" onClick={props.onDeleteFunc} >Delete question</Button>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n            <hr className=\"mt-3 \"></hr>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default QuizQuestion;","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js",["185","186","187"],"import React, { Fragment } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Button from 'react-bootstrap/Button';\r\nimport QuizOption from './QuizOption';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ViewAnswer from './ViewAnswer';\r\nimport './quiz.css';\r\n\r\nconst QuizQues = () => {\r\n    const temp = [{\r\n        question: 'What does HTML stand for?',\r\n        optionA: 'Hyper Text Preprocessor',\r\n        optionB: 'Hyper Text Markup Language',\r\n        optionC: 'Hyper Text Multiple Language',\r\n        optionD: 'Hyper Text Multi Language',\r\n        correctOption: 'Hyper Text Markup Language'\r\n    },\r\n    {\r\n        question: 'Who is making the Web standards?',\r\n        optionA: 'The World Wide Web Consortium',\r\n        optionB: 'Google',\r\n        optionC: 'Mozilla',\r\n        optionD: 'Firefox',\r\n        correctOption: 'The World Wide Web Consortium'\r\n    },\r\n    {\r\n        question: 'Choose the correct HTML element for the largest heading:',\r\n        optionA: '<head>',\r\n        optionB: '<heading>',\r\n        optionC: '<h1>',\r\n        optionD: '<h6>',\r\n        correctOption: '<h1>'\r\n    },\r\n    {\r\n        question: 'Choose the correct HTML element to define important text',\r\n        optionA: '<strong>',\r\n        optionB: '<i>',\r\n        optionC: '<important>',\r\n        optionD: '<b>',\r\n        correctOption: '<strong>'\r\n    }\r\n\r\n    ];\r\n\r\n\r\n\r\n    return temp.map((ele, index) => {\r\n        return (\r\n            <Fragment key={index}>\r\n                <Accordion className='my-2'>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                                {`${index + 1}.`} {ele.question}\r\n                            </Card.Title>\r\n                            <QuizOption key={1} text={ele.optionA} isCorrect={ele.optionA === ele.correctOption ? true : false} />\r\n                            <QuizOption key={2} text={ele.optionB} isCorrect={ele.optionB === ele.correctOption ? true : false} />\r\n                            <QuizOption key={3} text={ele.optionC} isCorrect={ele.optionC === ele.correctOption ? true : false} />\r\n                            <QuizOption key={4} text={ele.optionD} isCorrect={ele.optionD === ele.correctOption ? true : false} />\r\n                            <ViewAnswer eKey='0' correctOption={ele.correctOption} />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Accordion>\r\n            </Fragment>\r\n        );\r\n    });\r\n\r\n    // return (\r\n    //     <Fragment>\r\n    //         <Accordion className='my-2'>\r\n    //             <Card>\r\n    //                 <Card.Body>\r\n    //                     <Card.Title>\r\n    //                         1. What does HTML stand for?\r\n    //             </Card.Title>\r\n    //                     <QuizOption text='Hyper Text Preprocessor' eKey='1' />\r\n    //                     <QuizOption text='Hyper Text Markup Language' eKey='2' />\r\n    //                     <QuizOption text='Hyper Text Multiple Language' eKey='3' />\r\n    //                     <QuizOption text='Hyper Text Multi Language' eKey='4' />\r\n    //                     <ViewAnswer eKey='2' />\r\n    //                 </Card.Body>\r\n    //             </Card>\r\n    //         </Accordion>\r\n    //     </Fragment>\r\n    // );\r\n};\r\n\r\nexport default QuizQues;","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js",["188","189"],"import React, { Fragment, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport './quiz.css';\r\n\r\nconst QuizOption = (props) => {\r\n    const [ansClicked, setAnsClicked] = useState(false);\r\n\r\n    const handleOnCLick = () => {\r\n        setAnsClicked(true);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={`mt-3 mb-3 pr-2 rounded option ${ansClicked && (props.isCorrect ? 'correct' : 'incorrect')}`}>\r\n                <Accordion.Toggle as={Button} onClick={handleOnCLick} variant=\"\" eventKey={props.isCorrect ? '0' : '1'}  >\r\n                    {props.text}\r\n                </Accordion.Toggle>\r\n                {ansClicked && (props.isCorrect ?\r\n                    <div className='icon tick' ><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div> :\r\n                    <div className='icon cross' ><i className=\"fa fa-times\" aria-hidden=\"true\"></i></div>\r\n                )}\r\n                {/* <div className='icon cross' ><i className=\"fa fa-times\" aria-hidden=\"true\"></i></div> */}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default QuizOption;\r\n","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\ViewAnswer.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\layout\\Navbar.js",["190","191","192"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/authActions\";\r\n\r\nconst Navbars = (props) => {\r\n    const { logout, onClick } = props;\r\n    const {isAuthenticated, user } = props.auth;\r\n    \r\n\r\n    const onlogout = () => {\r\n        logout();\r\n    }\r\n\r\n    const authLinks = (\r\n        <Fragment>\r\n            <span>\r\n                <img className=\"nav__user-img\" src=\"/profile.jpg\" />\r\n                <span className='user-name'>Hello {user && user.name.split(' ')[0]}</span>\r\n            </span>\r\n            <span className=\"logout-div\">\r\n                <a href=\"#\" onClick={onlogout}>\r\n                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                    <span className=\"hide-sm\"> Logout</span>\r\n                </a>\r\n            </span>\r\n        </Fragment>\r\n    );\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <Link to=\"/register\">Register</Link>\r\n            <Link to=\"/login\">Login</Link>\r\n        </Fragment>\r\n    );\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n            <div id='sidebar-btn' onClick={onClick} >\r\n                <i className='fas fa-bars menu-icon' ></i>\r\n            </div>\r\n            <Navbar.Brand className=\"brand-name\">\r\n                <img\r\n                    alt=\"\"\r\n                    src=\"./assets/img/logo.png\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{\" \"}\r\n                PlacePrep\r\n            </Navbar.Brand>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    { isAuthenticated ? authLinks: guestLinks}\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout})(Navbars);\r\n","E:\\project\\PlacePrep\\client\\src\\store\\configureStore.js",["193"],"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport rootReducer from './reducers/reducer';\r\n\r\n\r\nexport default function () {\r\n    return configureStore({\r\n        reducer: rootReducer,\r\n        middleware: [...getDefaultMiddleware()]\r\n    });\r\n}","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\reducer.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\reducers\\practiceQuizReducers.js",["194"],"import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    questions: [],\r\n    current: null,\r\n    filtered: null,\r\n    error: null,\r\n    loading: true\r\n    \r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\actions\\authActions.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\actions\\codeActions.js",["195","196","197","198"],"E:\\project\\PlacePrep\\client\\src\\components\\layout\\Spinner.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\layout\\Home.js",["199"],"E:\\project\\PlacePrep\\client\\src\\components\\code\\CodeQuestions.js",["200"],"E:\\project\\PlacePrep\\client\\src\\components\\code\\codeTableRow.js",["201","202","203","204"],"E:\\project\\PlacePrep\\client\\src\\components\\code\\Pagination.js",["205","206"],"E:\\project\\PlacePrep\\client\\src\\components\\code\\paginate.js",[],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":4,"column":50,"nodeType":"213","messageId":"214","endLine":4,"endColumn":60},{"ruleId":"211","severity":1,"message":"215","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":15},{"ruleId":"211","severity":1,"message":"216","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":16},{"ruleId":"211","severity":1,"message":"217","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":14},{"ruleId":"218","severity":1,"message":"219","line":18,"column":5,"nodeType":"220","messageId":"221","endLine":20,"endColumn":6},{"ruleId":"218","severity":1,"message":"219","line":22,"column":5,"nodeType":"220","messageId":"221","endLine":24,"endColumn":6},{"ruleId":"222","severity":1,"message":"223","line":20,"column":8,"nodeType":"224","endLine":20,"endColumn":10,"suggestions":"225"},{"ruleId":"211","severity":1,"message":"226","line":26,"column":34,"nodeType":"213","messageId":"214","endLine":26,"endColumn":43},{"ruleId":"222","severity":1,"message":"227","line":30,"column":8,"nodeType":"224","endLine":30,"endColumn":10,"suggestions":"228"},{"ruleId":"211","severity":1,"message":"229","line":11,"column":8,"nodeType":"213","messageId":"214","endLine":11,"endColumn":20},{"ruleId":"230","severity":1,"message":"231","line":38,"column":21,"nodeType":"232","endLine":38,"endColumn":77},{"ruleId":"222","severity":1,"message":"233","line":37,"column":8,"nodeType":"224","endLine":37,"endColumn":10,"suggestions":"234"},{"ruleId":"222","severity":1,"message":"235","line":57,"column":8,"nodeType":"224","endLine":57,"endColumn":17,"suggestions":"236"},{"ruleId":"211","severity":1,"message":"237","line":3,"column":31,"nodeType":"213","messageId":"214","endLine":3,"endColumn":34},{"ruleId":"211","severity":1,"message":"238","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":14},{"ruleId":"211","severity":1,"message":"237","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":11},{"ruleId":"211","severity":1,"message":"239","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":11},{"ruleId":"211","severity":1,"message":"240","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":12},{"ruleId":"211","severity":1,"message":"241","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":13},{"ruleId":"211","severity":1,"message":"242","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":35},{"ruleId":"243","severity":1,"message":"244","line":19,"column":17,"nodeType":"232","endLine":19,"endColumn":69},{"ruleId":"230","severity":1,"message":"231","line":23,"column":17,"nodeType":"232","endLine":23,"endColumn":48},{"ruleId":"245","severity":1,"message":"246","line":5,"column":1,"nodeType":"247","endLine":10,"endColumn":2},{"ruleId":"211","severity":1,"message":"248","line":1,"column":13,"nodeType":"213","messageId":"214","endLine":1,"endColumn":24},{"ruleId":"211","severity":1,"message":"249","line":11,"column":5,"nodeType":"213","messageId":"214","endLine":11,"endColumn":13},{"ruleId":"211","severity":1,"message":"250","line":12,"column":5,"nodeType":"213","messageId":"214","endLine":12,"endColumn":16},{"ruleId":"211","severity":1,"message":"251","line":105,"column":11,"nodeType":"213","messageId":"214","endLine":105,"endColumn":17},{"ruleId":"211","severity":1,"message":"251","line":124,"column":11,"nodeType":"213","messageId":"214","endLine":124,"endColumn":17},{"ruleId":"211","severity":1,"message":"216","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":16},{"ruleId":"222","severity":1,"message":"252","line":41,"column":8,"nodeType":"224","endLine":41,"endColumn":18,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":20,"column":21,"nodeType":"232","endLine":24,"endColumn":22},{"ruleId":"230","severity":1,"message":"231","line":20,"column":21,"nodeType":"232","endLine":24,"endColumn":22},{"ruleId":"254","severity":1,"message":"255","line":55,"column":21,"nodeType":"232","endLine":60,"endColumn":22},{"ruleId":"230","severity":1,"message":"231","line":55,"column":21,"nodeType":"232","endLine":60,"endColumn":22},{"ruleId":"256","severity":1,"message":"257","line":18,"column":29,"nodeType":"258","endLine":18,"endColumn":78},{"ruleId":"230","severity":1,"message":"259","line":20,"column":29,"nodeType":"232","endLine":24,"endColumn":30},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'SideBar' is defined but never used.","'MainView' is defined but never used.","'Navbar' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getQuestion' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["262"],"'resetCode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isAuthenticated', 'user.email', and 'user.name'. Either include them or remove the dependency array.",["263"],"'PrivateRoute' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getQuestion', 'props.match.params.id', and 'props.match.path'. Either include them or remove the dependency array.",["264"],"React Hook useEffect has missing dependencies: 'clearCurrent' and 'props.match.path'. Either include them or remove the dependency array.",["265"],"'Row' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Alert' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'actionTypes' is defined but never used.","'RUN_CODE' is defined but never used.","'SUBMIT_CODE' is defined but never used.","'config' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'clearFilter'. Either include it or remove the dependency array.",["266"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [getQuestion, id]",{"range":"277","text":"278"},"Update the dependencies array to be: [isAuthenticated, user.email, user.name]",{"range":"279","text":"280"},"Update the dependencies array to be: [getQuestion, props.match.params.id, props.match.path]",{"range":"281","text":"282"},"Update the dependencies array to be: [clearCurrent, current, props.match.path]",{"range":"283","text":"284"},"Update the dependencies array to be: [clearFilter, filtered]",{"range":"285","text":"286"},[662,664],"[getQuestion, id]",[866,868],"[isAuthenticated, user.email, user.name]",[1131,1133],"[getQuestion, props.match.params.id, props.match.path]",[1797,1806],"[clearCurrent, current, props.match.path]",[1239,1249],"[clearFilter, filtered]"]