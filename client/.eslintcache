[{"C:\\Major Projects\\PlacePrep\\client\\src\\index.js":"1","C:\\Major Projects\\PlacePrep\\client\\src\\App.js":"2","C:\\Major Projects\\PlacePrep\\client\\src\\store\\configureStore.js":"3","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\reducer.js":"4","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\authActions.js":"5","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Login.js":"6","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Register.js":"7","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js":"8","C:\\Major Projects\\PlacePrep\\client\\src\\components\\mainview\\MainView.js":"9","C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Navbar.js":"10","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js":"11","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js":"12","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js":"13","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js":"14","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js":"15","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js":"16","C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js":"17","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js":"18","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js":"19","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\EditQuiz.js":"20","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js":"21","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCardPage.js":"22","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\Coding.js":"23","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeQuestions.js":"24","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js":"25","C:\\Major Projects\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js":"26","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js":"27","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js":"28","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js":"29","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js":"30","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js":"31","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js":"32","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeTableRow.js":"33","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\quizActions.js":"34","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\codeActions.js":"35","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js":"36","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizTimer.js":"37","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizPageSub.js":"38","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizQuesSub.js":"39","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizOptionSub.js":"40","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubmissions.js":"41","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubTabRow.js":"42","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeProblem.js":"43","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\AptiTopicsTemplate.js":"44","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\AddTopics.js":"45","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\CreateAptiQuestion.js":"46","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\practiceProblemReducers.js":"47","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\practiceProblemActions.js":"48","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizPage.js":"49","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizQues.js":"50","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizOption.js":"51","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\ViewAnswer.js":"52","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\EditPracticeProblem.js":"53"},{"size":339,"mtime":1613570649133,"results":"54","hashOfConfig":"55"},{"size":1279,"mtime":1613734601379,"results":"56","hashOfConfig":"55"},{"size":292,"mtime":1613210742016,"results":"57","hashOfConfig":"55"},{"size":400,"mtime":1613830175329,"results":"58","hashOfConfig":"55"},{"size":2539,"mtime":1613663360706,"results":"59","hashOfConfig":"55"},{"size":3843,"mtime":1613569308899,"results":"60","hashOfConfig":"55"},{"size":4978,"mtime":1613569308899,"results":"61","hashOfConfig":"55"},{"size":6953,"mtime":1612705908067,"results":"62","hashOfConfig":"55"},{"size":2332,"mtime":1613986269621,"results":"63","hashOfConfig":"55"},{"size":2193,"mtime":1613569308899,"results":"64","hashOfConfig":"55"},{"size":1586,"mtime":1613746091152,"results":"65","hashOfConfig":"55"},{"size":1867,"mtime":1613569308915,"results":"66","hashOfConfig":"55"},{"size":2797,"mtime":1614001494263,"results":"67","hashOfConfig":"55"},{"size":7935,"mtime":1614007666470,"results":"68","hashOfConfig":"55"},{"size":2526,"mtime":1614001342125,"results":"69","hashOfConfig":"55"},{"size":787,"mtime":1613038343146,"results":"70","hashOfConfig":"55"},{"size":2904,"mtime":1614007940038,"results":"71","hashOfConfig":"55"},{"size":3111,"mtime":1613143500592,"results":"72","hashOfConfig":"55"},{"size":7299,"mtime":1613829749326,"results":"73","hashOfConfig":"55"},{"size":7964,"mtime":1613637061209,"results":"74","hashOfConfig":"55"},{"size":2076,"mtime":1613746131871,"results":"75","hashOfConfig":"55"},{"size":905,"mtime":1613822685104,"results":"76","hashOfConfig":"55"},{"size":1690,"mtime":1613569308899,"results":"77","hashOfConfig":"55"},{"size":8210,"mtime":1614002718212,"results":"78","hashOfConfig":"55"},{"size":12344,"mtime":1613569308899,"results":"79","hashOfConfig":"55"},{"size":533,"mtime":1613569308899,"results":"80","hashOfConfig":"55"},{"size":5157,"mtime":1613482655774,"results":"81","hashOfConfig":"55"},{"size":3802,"mtime":1613823469438,"results":"82","hashOfConfig":"55"},{"size":2707,"mtime":1613741477855,"results":"83","hashOfConfig":"55"},{"size":1133,"mtime":1613569308899,"results":"84","hashOfConfig":"55"},{"size":545,"mtime":1612952888849,"results":"85","hashOfConfig":"55"},{"size":5000,"mtime":1612952799088,"results":"86","hashOfConfig":"55"},{"size":1207,"mtime":1613569308899,"results":"87","hashOfConfig":"55"},{"size":6352,"mtime":1614008056592,"results":"88","hashOfConfig":"55"},{"size":2599,"mtime":1613569308915,"results":"89","hashOfConfig":"55"},{"size":751,"mtime":1613488906948,"results":"90","hashOfConfig":"55"},{"size":1612,"mtime":1613736124039,"results":"91","hashOfConfig":"55"},{"size":1982,"mtime":1613748240305,"results":"92","hashOfConfig":"55"},{"size":1793,"mtime":1613746043892,"results":"93","hashOfConfig":"55"},{"size":1106,"mtime":1613745866797,"results":"94","hashOfConfig":"55"},{"size":7674,"mtime":1614004773039,"results":"95","hashOfConfig":"55"},{"size":1737,"mtime":1614004724964,"results":"96","hashOfConfig":"55"},{"size":1017,"mtime":1613922814222,"results":"97","hashOfConfig":"55"},{"size":3436,"mtime":1614002142275,"results":"98","hashOfConfig":"55"},{"size":6693,"mtime":1614000058660,"results":"99","hashOfConfig":"55"},{"size":5584,"mtime":1613985913420,"results":"100","hashOfConfig":"55"},{"size":1739,"mtime":1613999651217,"results":"101","hashOfConfig":"55"},{"size":3985,"mtime":1614008056375,"results":"102","hashOfConfig":"55"},{"size":2022,"mtime":1613929039456,"results":"103","hashOfConfig":"55"},{"size":2145,"mtime":1613999442866,"results":"104","hashOfConfig":"55"},{"size":1197,"mtime":1613926540827,"results":"105","hashOfConfig":"55"},{"size":817,"mtime":1613985192532,"results":"106","hashOfConfig":"55"},{"size":6075,"mtime":1613988637964,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1u3doc7",{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"110"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"110"},"C:\\Major Projects\\PlacePrep\\client\\src\\index.js",[],["240","241"],"C:\\Major Projects\\PlacePrep\\client\\src\\App.js",["242","243"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Auth.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\nimport SideBar from \"./components/sidebar/SideBar\";\r\nimport MainView from \"./components/mainview/MainView\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadUser } from \"./store/actions/authActions\";\r\n\r\nconst App = (props) => {\r\n    const { loadUser } = props;\r\n    loadUser(false, true);\r\n    {\r\n        /* <div style={{ display: 'flex', height: '100vh' }}> */\r\n    }\r\n\r\n    {\r\n        /* </div> */\r\n    }\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                <>\r\n                    <Navbar />\r\n                    <div style={{ display: \"flex\", height: \"100vh\" }}>\r\n                        <SideBar />\r\n                        <MainView />\r\n                    </div>\r\n                </>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default connect(null, { loadUser })(App);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\store\\configureStore.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\reducer.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\authActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Login.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\Register.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\mainview\\MainView.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\layout\\Navbar.js",["244","245"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/authActions\";\r\n\r\nconst Navbars = (props) => {\r\n\r\n    const { logout } = props;\r\n    const {isAuthenticated, user } = props.auth;\r\n    const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n    const toggleSidebarBtn = () => {\r\n        setSidebarOpen(!sidebarOpen);\r\n    };\r\n\r\n    const onlogout = () => {\r\n        logout();\r\n    }\r\n\r\n    const authLinks = (\r\n        <Fragment>\r\n            <span>\r\n                <img className=\"nav__user-img\" src=\"/profile.jpg\" />\r\n                <span className='user-name'>Hello {user && user.name}</span>\r\n            </span>\r\n            <span>\r\n                <a href=\"#\" onClick={onlogout}>\r\n                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                    <span className=\"hide-sm\"> Logout</span>\r\n                </a>\r\n            </span>\r\n        </Fragment>\r\n    );\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <Link to=\"/register\">Register</Link>\r\n            <Link to=\"/login\">Login</Link>\r\n        </Fragment>\r\n    );\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n            <div id='sidebar-btn' onClick={toggleSidebarBtn} >\r\n                <i className='fas fa-bars menu-icon' ></i>\r\n            </div>\r\n            <Navbar.Brand className=\"brand-name\">\r\n                <img\r\n                    alt=\"\"\r\n                    src=\"./assets/img/logo.png\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{\" \"}\r\n                PlacePrep\r\n            </Navbar.Brand>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    { isAuthenticated ? authLinks: guestLinks}\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout})(Navbars);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js",["246","247"],"import React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Link } from 'react-router-dom';\r\nimport * as menuItemArrays from './MenuItemData';\r\nimport { connect } from 'react-redux';\r\n\r\nconst MenuList = (props) => {\r\n    const { auth: { user } } = props;\r\n\r\n    useEffect(() => {\r\n        if (user !== null) {\r\n            if (user.role === 'faculty') {\r\n                setMenuItems(menuItemArrays.faculty);\r\n            }\r\n            else if (user.role === 'admin') {\r\n                setMenuItems(menuItemArrays.admin);\r\n            }\r\n            else {\r\n                setMenuItems(menuItemArrays.student);\r\n            }\r\n        } else {\r\n            setMenuItems(menuItemArrays.student);\r\n        }\r\n    }, [user]);\r\n\r\n    let [menuItems, setMenuItems] = useState(menuItemArrays.student);\r\n\r\n\r\n    const [selected, setSelected] = useState(menuItems[0].name);\r\n    const [subMenus, setSubMenus] = useState({});\r\n\r\n    useLayoutEffect(() => {\r\n        let path = window.location.pathname;\r\n        if (path !== '/') {\r\n            path = path.endsWith('/') ? path.replace(/\\/$/, \"\") : path;\r\n        }\r\n        const parts = path.split('/');\r\n\r\n        if (parts.length !== 3) {\r\n            const selectedItem = menuItems.filter((ele) => {\r\n                return ele.to === path;\r\n            })[0];\r\n            setSelected(selectedItem?.name);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const newSubMenus = {};\r\n\r\n        menuItems.forEach((ele, index) => {\r\n            const hasSubMenus = !!ele.subMenuItems.length;\r\n\r\n            if (hasSubMenus) {\r\n                newSubMenus[index] = {};\r\n                newSubMenus[index]['isOpen'] = false;\r\n                newSubMenus[index]['selectedSubMenu'] = null;\r\n            }\r\n\r\n            let path = window.location.pathname;\r\n            path = path.endsWith('/') ? path.replace(/\\/$/, \"\") : path;\r\n            const parts = path.split('/');\r\n\r\n            let selectedItemIndex;\r\n            let selectedSubItemIndex;\r\n            if (parts.length === 3) {\r\n                const selectedItem = menuItems.filter((ele, index) => {\r\n                    if (ele.to === '/' + parts[1]) {\r\n                        selectedItemIndex = index;\r\n                    }\r\n                    return ele.to === '/' + parts[1];\r\n                })[0];\r\n\r\n                // const selectedItem = parts[1].toLowerCase();\r\n\r\n                selectedItem?.subMenuItems.filter((subEle, index) => {\r\n                    if (subEle.to === '/' + parts[2]) {\r\n                        selectedSubItemIndex = index;\r\n                    }\r\n                    return subEle.to === '/' + parts[2];\r\n                });\r\n\r\n                // const subSelectedItem = parts[2].toLowerCase();\r\n                // const selectedItemIndex = menuItems.findIndex(item => item.name.toLowerCase() === selectedItem);\r\n                // const selectedSubItemIndex = menuItems[selectedItemIndex] && menuItems[selectedItemIndex].subMenuItems.findIndex(subItem => subItem.name.toLowerCase() === subSelectedItem);\r\n\r\n                setSelected(selectedItem?.name);\r\n                if (selectedItemIndex !== -1) {\r\n                    newSubMenus[selectedItemIndex] = {};\r\n                    newSubMenus[selectedItemIndex]['isOpen'] = true;\r\n                }\r\n                if (selectedItemIndex !== -1 && selectedSubItemIndex !== -1) {\r\n                    newSubMenus[selectedItemIndex]['selectedSubMenu'] = selectedSubItemIndex;\r\n                }\r\n            }\r\n\r\n            setSubMenus(newSubMenus);\r\n        });\r\n    }, []);\r\n\r\n    const handleMenuItemClick = (name, index) => {\r\n        setSelected(name);\r\n\r\n        if (subMenus.hasOwnProperty(index)) {\r\n            const subMenusCopy = { ...subMenus };\r\n\r\n            subMenusCopy[index]['isOpen'] = !subMenus[index]['isOpen'];\r\n            subMenusCopy[index]['selectedSubMenu'] = null;\r\n            setSubMenus(subMenusCopy);\r\n        }\r\n        else {\r\n            const subMenusCopy = { ...subMenus };\r\n\r\n            for (let item in subMenus) {\r\n                subMenusCopy[item]['isOpen'] = false;\r\n                subMenusCopy[item]['selectedSubMenu'] = null;\r\n            }\r\n            setSubMenus(subMenusCopy);\r\n        }\r\n\r\n    };\r\n\r\n    const handleSubMenuItemClick = (menuItemIdx, subMenuIdx) => {\r\n        const subMenusCopy = { ...subMenus };\r\n        subMenusCopy[menuItemIdx]['selectedSubMenu'] = subMenuIdx;\r\n\r\n        setSubMenus(subMenusCopy);\r\n    };\r\n\r\n    return (\r\n        user ? <ul className='menu-list'>\r\n            {menuItems.map((ele, index) => {\r\n                const isItemSelected = selected === ele.name;\r\n                const hasSubMenus = !!ele.subMenuItems.length;\r\n                const isOpen = subMenus[index] && subMenus[index].isOpen;\r\n\r\n                const SubMenuListJSX = <div className='submenu-list'>\r\n                    <ul>\r\n                        {ele.subMenuItems.map((subMenuEle, subMenuIndex) => {\r\n                            const isSubMenuSelected = (subMenus[index] && subMenus[index].selectedSubMenu) === subMenuIndex;\r\n\r\n                            return (<Link key={subMenuIndex} to={`${ele.to}${subMenuEle.to}`} style={{ textDecoration: 'none' }} >\r\n                                <li className={`submenu-item ${isSubMenuSelected ? 'active' : ''}`} onClick={() => handleSubMenuItemClick(index, subMenuIndex)} >\r\n                                    <i className={`${subMenuEle.icon} menu-icon`} ></i>\r\n                                    <span className='menu-text' >{subMenuEle.name}</span>\r\n                                </li>\r\n                            </Link>);\r\n                        })}\r\n                    </ul>\r\n                </div>;\r\n\r\n\r\n                return ele.subMenuItems.length ?\r\n                    (<div key={index} >\r\n                        <Link to={ele.to} style={{ textDecoration: 'none' }}>\r\n                            <li className={`menu-item ${isItemSelected ? 'active' : ''}`} onClick={() => handleMenuItemClick(ele.name, index)} >\r\n                                <i className={`${ele.icon} menu-icon`} ></i>\r\n                                <span className='menu-text' >{ele.name}</span>\r\n                                {isOpen ? <i className=\"fas fa-angle-up dropdown-icon\" style={{ paddingTop: '4px' }}></i>\r\n                                    : <i className=\"fas fa-angle-down dropdown-icon\" style={{ paddingTop: '7px' }} ></i>}\r\n\r\n                            </li>\r\n                        </Link>\r\n                        <AnimatePresence>\r\n                            {(hasSubMenus && isOpen) &&\r\n                                <motion.nav\r\n                                    initial={{ opacity: 0, y: -15 }}\r\n                                    animate={{ opacity: 1, y: 0 }}\r\n                                    transition={{ duration: 0.35 }}\r\n                                    exit={{ opacity: 0, x: -30 }}\r\n                                >\r\n                                    {SubMenuListJSX}\r\n                                </motion.nav>\r\n                            }\r\n                        </AnimatePresence>\r\n                    </div>)\r\n                    :\r\n                    (<Link key={index} to={ele.to} style={{ textDecoration: 'none' }}>\r\n                        <li className={`menu-item ${isItemSelected ? 'active' : ''}`} onClick={() => handleMenuItemClick(ele.name, index)} >\r\n                            <i className={`${ele.icon} menu-icon`} ></i>\r\n                            <span className='menu-text' >{ele.name}</span>\r\n                        </li>\r\n                    </Link>);\r\n            }\r\n\r\n            )}\r\n        </ul> : <h3>Loading...</h3>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(MenuList);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js",["248"],"\r\nexport const admin = [\r\n    { name: 'Dashboard', to: '/', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'My Profile', to: '/me', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'Create a quiz', to: '/createQuiz', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Coding Questions', to: '/codeQuestions', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Create code question', to: '/createCodeQuestion', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'See all quizzes', to: '/quizzes', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Practice Problems', to: '/practiceProblems', icon: 'fa fa-pie-chart', subMenuItems: [] },\r\n];\r\n\r\n\r\nexport const faculty = [\r\n    { name: 'Dashboard', to: '/', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'My Profile', to: '/me', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'Create a quiz', to: '/createQuiz', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Coding Questions', to: '/codeQuestions', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Create code question', to: '/createCodeQuestion', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'See all quizzes', to: '/quizzes', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Practice Problems', to: '/practiceProblems', icon: 'fa fa-pie-chart', subMenuItems: [] }\r\n];\r\n\r\n\r\nexport const student = [\r\n    { name: 'Dashboard', to: '/', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'My Profile', to: '/me', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'Coding Questions', to: '/codeQuestions', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'See all quizzes', to: '/quizzes', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Quiz Submissions', to: '/quizSubmissions', icon: 'fa fa-pie-chart', subMenuItems: [] },\r\n    { name: 'Practice Problems', to: '/practiceProblems', icon: 'fa fa-pie-chart', subMenuItems: [] },\r\n];\r\n\r\nexport default [\r\n    { name: 'Dashboard', to: '/', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'My Profile', to: '/me', icon: 'fa fa-tachometer', subMenuItems: [] },\r\n    { name: 'Create a quiz', to: '/createQuiz', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Coding', to: '/code', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Coding Questions', to: '/codeQuestions', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Create a code question', to: '/createCodeQuestion', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'See all quizzes', to: '/quizzes', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Start a quiz', to: '/quiz', icon: 'fa fa-ticket', subMenuItems: [] },\r\n    { name: 'Quiz Submissions', to: '/quizSubmissions', icon: 'fa fa-pie-chart', subMenuItems: [] },\r\n    { name: 'Practice Problems', to: '/practiceProblems', icon: 'fa fa-pie-chart', subMenuItems: [] },\r\n];\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\EditQuiz.js",["249","250"],"import React, { useState, useEffect } from 'react';\r\nimport './quiz.css';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport QuizQuestion from './CreateQuizQuestion';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getQuiz,\r\n    updateQuiz,\r\n    deleteQuizQuestion,\r\n    setCurrentQuiz\r\n} from '../../store/actions/quizActions';\r\n\r\nconst EditQuiz = (props) => {\r\n    const { quiz: { current },\r\n        getQuiz,\r\n        updateQuiz,\r\n        deleteQuizQuestion,\r\n        setCurrentQuiz,\r\n        match } = props;\r\n\r\n    const slug = match.params.slug;\r\n    useEffect(() => {\r\n        getQuiz(slug);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (current !== null) {\r\n            // if User updates Quiz title then slug also updates\r\n            // Hence updating slug in the url\r\n            props.history.replace({ pathname: `/editQuiz/${current.slug}` });\r\n\r\n            let tempDeepCopy = JSON.parse(JSON.stringify(current));\r\n            setQuizLocal(tempDeepCopy)\r\n        }\r\n        else {\r\n            setQuizLocal({\r\n                title: '',\r\n                category: '',\r\n                topic: '',\r\n                duration: '',\r\n                questions: [{\r\n                    id: 0,\r\n                    question: '',\r\n                    answers: ['', '', '', ''],\r\n                    correctAnswer: ''\r\n                }]\r\n            })\r\n        }\r\n    }, [current]);\r\n\r\n    // let tempDeepCopy = JSON.parse(JSON.stringify(current));\r\n    const [quizLocal, setQuizLocal] = useState({\r\n        title: '',\r\n        category: '',\r\n        topic: '',\r\n        duration: '',\r\n        questions: [{\r\n            id: 0,\r\n            question: '',\r\n            answers: ['', '', '', ''],\r\n            correctAnswer: ''\r\n        }]\r\n    });\r\n\r\n    const [lastId, setLastId] = useState(0);\r\n\r\n    const handleAddQuesClick = () => {\r\n        const newQuesObj = {\r\n            id: lastId + 1,\r\n            question: '',\r\n            answers: ['', '', '', ''],\r\n            correctAnswer: ''\r\n        };\r\n\r\n        setLastId(lastId + 1);\r\n\r\n        const newQuesArray = [...quizLocal.questions, newQuesObj];\r\n        setQuizLocal({\r\n            ...quizLocal,\r\n            questions: newQuesArray\r\n        });\r\n\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setQuizLocal({\r\n            ...quizLocal,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleOnChangeQues = (e, index) => {\r\n        const quesArray = [...quizLocal.questions];\r\n        if (e.target.name === 'question' || e.target.name === 'correctAnswer') {\r\n            quesArray[index][e.target.name] = e.target.value;\r\n            setQuizLocal({\r\n                ...quizLocal,\r\n                questions: quesArray\r\n            });\r\n        }\r\n        else {\r\n            let optIndex = 0;\r\n            if (e.target.name === 'optionB') {\r\n                optIndex = 1;\r\n            }\r\n            else if (e.target.name === 'optionC') {\r\n                optIndex = 2;\r\n            }\r\n            else if (e.target.name === 'optionD') {\r\n                optIndex = 3;\r\n            }\r\n            quesArray[index].answers[optIndex] = e.target.value;\r\n            setQuizLocal({\r\n                ...quizLocal,\r\n                questions: quesArray\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    const handleOnDelete = (eleId) => {\r\n        const newQuesArray = quizLocal.questions.filter((ele) => {\r\n            let tempId = ele.id || ele._id;\r\n            return eleId !== tempId;\r\n        });\r\n\r\n        if (isNaN(eleId)) {\r\n            deleteQuizQuestion(eleId)\r\n        }\r\n\r\n        setQuizLocal({\r\n            ...quizLocal,\r\n            questions: newQuesArray\r\n        });\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        updateQuiz(quizLocal);\r\n        setCurrentQuiz(quizLocal);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {current ? (<Container className=\"container-quiz\">\r\n                <h3 className=\"text-center  mb-2 pt-4 \">QUIZ DETAILS</h3>\r\n                <div className=\"title-border mb-4\">\r\n                    <span></span>\r\n                </div>\r\n                <div className=\"createquizform pb-1\">\r\n                    <Form onSubmit={onSubmit} >\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"quiztitle\" >\r\n                                    <Form.Label><b>Quiz title</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled\" name=\"title\" value={quizLocal.title} onChange={handleOnChange} type=\"\" placeholder=\"Enter Title\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId=\"category\" >\r\n                                    <Form.Label><b>Quiz Category</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled\" name=\"category\" value={quizLocal.category} onChange={handleOnChange} type=\"\" placeholder=\"Quantitative/ Logical/ Other\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6 responsivelabel\">\r\n                                <Form.Group controlId=\"topics\" >\r\n                                    <Form.Label><b>Quiz topics</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" name=\"topic\" value={quizLocal.topic} onChange={handleOnChange} type=\"\" placeholder=\"Example: Probability, Trains...\" />\r\n                                </Form.Group>\r\n\r\n                            </div>\r\n                            <div className=\"col-sm-6 responsivelabel\">\r\n                                <Form.Group controlId=\"duration\" >\r\n                                    <Form.Label><b >Duration</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled quizDuration \" name=\"duration\" value={quizLocal.duration} onChange={handleOnChange} type=\"number\" placeholder=\"Minutes only\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <h3 className=\"text-center  mb-2 pt-2 \">ADD QUESTIONS</h3>\r\n                        <div className=\"title-border mb-3\">\r\n                            <span></span>\r\n                        </div>\r\n\r\n\r\n                        {quizLocal.questions.map((ele, index) => <QuizQuestion\r\n                            key={ele._id || ele.id}\r\n                            index={index}\r\n                            onDeleteFunc={() => handleOnDelete(ele.id || ele._id)}\r\n                            onChangeFunc={(e) => handleOnChangeQues(e, index)}\r\n                            quesObj={ele}\r\n                        />\r\n                        )}\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <Button className=\"addquestbtn mb-2\" onClick={handleAddQuesClick} > Add Next Question  </Button>\r\n                            </div>\r\n                            <div className=\"col-sm-6 text-center\">\r\n                                <Button className=\"createquiz mb-4\" type=\"submit\" > Update Quiz</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </Container>) : <h3>Loading..</h3>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        quiz: state.quiz\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    getQuiz,\r\n    updateQuiz,\r\n    deleteQuizQuestion,\r\n    setCurrentQuiz\r\n})(EditQuiz);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js",["251","252"],"import React, { useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport QuizQues from './QuizQues';\r\nimport QuizTimer from './QuizTimer';\r\nimport { connect } from 'react-redux';\r\nimport { getQuiz, submitQuiz } from '../../store/actions/quizActions';\r\nimport { loadUser } from '../../store/actions/authActions';\r\n\r\nconst QuizPage = (props) => {\r\n    const {\r\n        quiz: { current },\r\n        auth: { user },\r\n        loadUser,\r\n        getQuiz,\r\n        match\r\n    } = props;\r\n    const slug = match.params.slug;\r\n\r\n    useEffect(() => {\r\n        getQuiz(slug);\r\n        // loadUser(false, true);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        current ?\r\n            (<Container className='mt-3'>\r\n                <Card.Header className='quiz_header'>\r\n                    <Row >\r\n                        <Col lg={9} md={8} sm={7} xs={8} className='quiz_title_col' >\r\n                            <div  >{current.title}</div>\r\n                        </Col>\r\n                        <Col lg={3} md={4} sm={5} xs={4} className='quiz_timer_col' >\r\n                            {/* <span className='time_sec float-right mt-1 pr-1' >{timer.minutes}:{timer.seconds}</span> */}\r\n                            {user && <QuizTimer endAt={user.testWillEndAt} />}\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <QuizQues key={current._id} questions={current.questions} quizId={current._id} />\r\n                {/* <div className=\"text-center\" style={{ width: '200px', margin: 'auto' }}>\r\n                    <Button className=\"createquiz mb-4\" type=\"submit\"  >Submit Quiz</Button>\r\n                </div> */}\r\n            </Container>)\r\n            :\r\n            <h3>Quiz Not Found</h3>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuiz, submitQuiz, loadUser })(QuizPage);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCardPage.js",["253"],"import React, { useEffect } from 'react';\r\nimport QuizCard from './QuizCard';\r\nimport { connect } from 'react-redux';\r\nimport { getQuizzes } from '../../store/actions/quizActions';\r\n\r\nconst QuizCardPage = (props) => {\r\n    const {\r\n        auth: { user },\r\n        quiz: { quizzes }, getQuizzes } = props;\r\n\r\n    useEffect(() => {\r\n        if (user?.role === 'faculty') {\r\n            getQuizzes(user._id);\r\n        }\r\n        else if (user?.role === 'student') {\r\n            getQuizzes();\r\n        }\r\n    }, [user]);\r\n\r\n    return (\r\n        <>\r\n            {quizzes.length === 0 ?\r\n                <h3>No quizzes available</h3> :\r\n                quizzes.map((ele) => <QuizCard key={ele._id} quizObj={ele} />)}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuizzes })(QuizCardPage);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\Coding.js",["254"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"./Coding.css\";\r\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\r\nimport CodeDescription from \"./CodeDescription\";\r\nimport CodingSolution from \"./CodingSolution\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport {useParams} from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestion } from \"../../store/actions/codeActions\";\r\n\r\nconst Coding = (props) => {\r\n\r\n    const { getQuestion } = props;\r\n    const { current } = props.code\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        getQuestion(id)\r\n    }, [])\r\n\r\n    const [key, setKey] = useState(\"description\");\r\n    \r\n    return (\r\n        <Fragment>\r\n        { current !== null ?\r\n        <Row className=\"coding-container\">\r\n            <Col>\r\n                <Tabs className='navTabs' activeKey={key} onSelect={(e) => setKey(e)}>\r\n                    <Tab eventKey=\"description\" title={<span><i className=\"fa fa-list-alt\" aria-hidden=\"true\"></i>Description</span>}>\r\n                        <CodeDescription current={current}/>\r\n                    </Tab>\r\n                    <Tab eventKey=\"solution\" title={<span><i className=\"fa fa-flask\" aria-hidden=\"true\"></i>Solution</span>}>\r\n                        <CodingSolution current={current}/>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Col>\r\n            <Col className=\"editor-container\">\r\n                <CodeEditor/>\r\n            </Col>\r\n        </Row> : <h1>Loading</h1> }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code\r\n});\r\n\r\nexport default connect(mapStateToProps,{ getQuestion})(Coding);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeQuestions.js",["255","256"],"import React, { useEffect, Fragment } from \"react\";\r\nimport \"./CodeQuestDisp.css\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestions } from \"../../store/actions/codeActions\";\r\nimport CodeTableRow from \"./codeTableRow\";\r\n\r\nconst CodeQuestions = (props) => {\r\n    const { getQuestions } = props;\r\n    const { user } = props.auth;\r\n    const { questions } = props.code;\r\n    useEffect(() => {\r\n        getQuestions();\r\n        //     eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (questions !== null && questions.length === 0) {\r\n        return <h4>Currently There are No Question Available</h4>;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {questions !== null ? (\r\n                <Container className=\"container-codeQuest\">\r\n                    <h3 className=\"text-center  mb-2 pt-4 \">\r\n                        Coding Questions\r\n                    </h3>\r\n                    <div className=\"title-border mb-4\">\r\n                        <span></span>\r\n                    </div>\r\n                    <div className=\"displayQuest pb-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 pb-2\">\r\n                                <Form>\r\n                                    <Form.Group controlId=\"codingquestionSearch\">\r\n                                        <Form.Control\r\n                                            className=\" codingQuestSearch\"\r\n                                            type=\"\"\r\n                                            placeholder=\"Search question titles, descriptions or ID\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                        <table className=\"table  \">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Title</th>\r\n                                    <th scope=\"col\">Solution</th>\r\n                                    <th scope=\"col\">Difficulty</th>\r\n                                    <th scope=\"col\">Acceptance</th>\r\n                                    <th scope=\"col\">Operations</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tbodyCode\">\r\n                                {questions.map((question, index) => (\r\n                                    <CodeTableRow\r\n                                        question={question}\r\n                                        key={index}\r\n                                        id={index}\r\n                                        user={user}\r\n                                    />\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"row\">\r\n                            <div className=\"ml-3 \">\r\n                                <Form>\r\n                                    <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            className=\"dispCode-inputFiled rowsPerPg\"\r\n                                        >\r\n                                            <option className=\"optionSelect\">\r\n                                                10\r\n                                            </option>\r\n                                            <option className=\"optionSelect\">\r\n                                                25\r\n                                            </option>\r\n                                            <option className=\"optionSelect\">\r\n                                                50\r\n                                            </option>\r\n                                            <option className=\"optionSelect\">\r\n                                                100\r\n                                            </option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div>\r\n                            <span className=\"labelRowsPerPg mt-2 col-4\">\r\n                                rows per page.\r\n                            </span>\r\n\r\n                            <div className=\" paginatt \">\r\n                                <nav aria-label=\"Page navigation example\">\r\n                                    <ul className=\"pagination nav2\">\r\n                                        <li className=\"\">\r\n                                            <a\r\n                                                className=\"page-link\"\r\n                                                href=\"#\"\r\n                                                aria-label=\"Previous\"\r\n                                            >\r\n                                                <span\r\n                                                    aria-hidden=\"true\"\r\n                                                    className=\"pagntColor\"\r\n                                                >\r\n                                                    &laquo;\r\n                                                </span>\r\n                                            </a>\r\n                                        </li>\r\n                                        <li className=\" \">\r\n                                            <a\r\n                                                className=\"page-link pagntColor\"\r\n                                                href=\"#1\"\r\n                                            >\r\n                                                1\r\n                                            </a>\r\n                                        </li>\r\n                                        <li className=\"active\">\r\n                                            <a\r\n                                                className=\"page-link pagntColor \"\r\n                                                href=\"#2\"\r\n                                            >\r\n                                                2\r\n                                            </a>\r\n                                        </li>\r\n                                        <li className=\" \">\r\n                                            <a\r\n                                                className=\"page-link pagntColor \"\r\n                                                href=\"#3\"\r\n                                            >\r\n                                                3\r\n                                            </a>\r\n                                        </li>\r\n                                        <li className=\"\">\r\n                                            <a\r\n                                                className=\"page-link\"\r\n                                                href=\"#\"\r\n                                                aria-label=\"Next\"\r\n                                            >\r\n                                                <span\r\n                                                    aria-hidden=\"true\"\r\n                                                    className=\"pagntColor\"\r\n                                                >\r\n                                                    &raquo;\r\n                                                </span>\r\n                                            </a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            ) : (\r\n                    <h1>Loading..</h1>\r\n                )}\r\n        </Fragment>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    code: state.code,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuestions })(CodeQuestions);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js",["257"],"import React, { useState, useRef } from 'react';\r\n// import './quiz.css';\r\nimport { Button, Form, Alert, Row, Accordion } from 'react-bootstrap';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\n\r\nfunction QuizQuestion(props) {\r\n    const [toggle, setToggle] = useState(false);\r\n    const inpRef = useRef(null);\r\n\r\n    const handleOnFocus = () => {\r\n        if (!toggle) {\r\n            inpRef.current.click();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n\r\n            <Accordion>\r\n                {/* <Accordion.Toggle as={Row} eventKey=\"0\" style={{ cursor: 'pointer', backgroundColor: 'rgb(164, 166, 179)'}}> */}\r\n                <div className=\"row \">\r\n                    <div className=\"col-12\">\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\" >\r\n                            <Form.Label> <b>Question {props.index + 1}</b></Form.Label>\r\n                            <Accordion.Toggle as={Alert.Link}\r\n                                ref={inpRef}\r\n                                onClick={() => setToggle(!toggle)}\r\n                                eventKey=\"0\"\r\n                                style={{ float: 'right', paddingRight: '20px', color: \"#775ecf\" }}\r\n                            >\r\n                                {toggle ? 'Collapse' : 'Expand'}\r\n                            </Accordion.Toggle>\r\n                            <TextareaAutosize\r\n                                className=\"quiz-inputFiled questiontextarea\"\r\n                                name=\"question\"\r\n                                onFocus={handleOnFocus}\r\n                                onChange={props.onChangeFunc}\r\n                                value={props.quesObj.question}\r\n                                placeholder=\"Type question here..\">\r\n\r\n                            </TextareaAutosize>\r\n                        </Form.Group>\r\n                    </div>\r\n                </div>\r\n                {/* </Accordion.Toggle> */}\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionA-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option A</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled\" onChange={props.onChangeFunc} value={props.quesObj.answers[0]} name=\"optionA\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionB-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option B</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[1]} name=\"optionB\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionC-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option C</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[2]} name=\"optionC\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionD-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option D</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[3]} name=\"optionD\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`correctOption-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Correct option</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.correctAnswer} name=\"correctAnswer\" placeholder=\"Enter answer/text\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Button className=\"deletebtn\" onClick={props.onDeleteFunc} >Delete question</Button>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n            <hr className=\"mt-3 \"></hr>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default QuizQuestion;","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js",["258","259"],"import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { Link } from 'react-router-dom';\r\nimport './quiz.css';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    updateQuiz,\r\n    deleteQuiz,\r\n    startQuiz\r\n} from '../../store/actions/quizActions';\r\nimport { loadUser, setUserNull } from '../../store/actions/authActions';\r\n\r\nconst QuizCard = (props) => {\r\n    const {\r\n        auth: { user },\r\n        quizObj,\r\n        updateQuiz,\r\n        loadUser,\r\n        setUserNull,\r\n        deleteQuiz,\r\n        startQuiz } = props;\r\n\r\n    const handleOnClick = () => {\r\n        setUserNull();\r\n        startQuiz(quizObj._id);\r\n        // loadUser(false, true);\r\n    };\r\n\r\n    return (\r\n        <Card className='quiz_card'>\r\n            <Card.Header className='quiz_card_header text-center'>\r\n                <h3>{quizObj.title}</h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Table className='quiz_card_table text-center' >\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Category</th>\r\n                            <th scope=\"col\">Topics</th>\r\n                            <th scope=\"col\">Questions</th>\r\n                            <th scope=\"col\">Duration</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{quizObj.category}</td>\r\n                            <td>{quizObj.topic}</td>\r\n                            <td>{quizObj.questions.length}</td>\r\n                            <td>{quizObj.duration} Minutes</td>\r\n                        </tr>\r\n                        <tr>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n\r\n                {user.role === 'student' &&\r\n                    <div className='text-center' >\r\n                        <Link to={`/quiz/${quizObj.slug}`} onClick={handleOnClick} className=\"btn btn-primary start_quiz_btn mr-2\" >Start Quiz</Link>\r\n                    </div>}\r\n\r\n                {(user.role === 'faculty' || user.role === 'admin') &&\r\n\r\n                    <div className='text-center' >\r\n                        <Link to={`/editQuiz/${quizObj.slug}`} className=\"btn btn-primary start_quiz_btn mr-2\" >Edit</Link>\r\n                        <button onClick={() => deleteQuiz(quizObj._id)} className=\"btn btn-primary start_quiz_btn mr-2\" >Delete</button>\r\n                        <button onClick={() => updateQuiz({ _id: quizObj._id, active: !quizObj.active })} className=\"btn btn-primary start_quiz_btn mr-2\" >{quizObj.active ? 'Deactivate' : 'Activate'}</button>\r\n                    </div>\r\n                }\r\n            </Card.Body>\r\n            <Card.Footer className='quiz_card_footer' style={{ backgroundColor: 'white' }}>\r\n                {user.role === 'student' &&\r\n                    <label htmlFor=\"name\">Uploader: {quizObj.author ? quizObj.author.name : 'Fahad Khan'}</label>}\r\n                {(user.role === 'faculty' || user.role === 'admin') &&\r\n                    <Link to={`/quizSubmissions/${quizObj._id}`} className='alert-link' style={{ color: '#775ecf' }} >Submissions</Link>}\r\n                <label htmlFor=\"name\" style={{ float: 'right' }}>Last updated on {new Date(quizObj.createdAt).toLocaleString('en-us', { day: '2-digit', month: 'short', year: '2-digit', hour: '2-digit', minute: '2-digit' })}</label>\r\n            </Card.Footer>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    quiz: state.quiz,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    updateQuiz,\r\n    deleteQuiz,\r\n    startQuiz,\r\n    loadUser,\r\n    setUserNull\r\n})(QuizCard);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js",["260"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Button from 'react-bootstrap/Button';\r\nimport QuizOption from './QuizOption';\r\nimport './quiz.css';\r\nimport { connect } from 'react-redux';\r\nimport { submitQuiz } from '../../store/actions/quizActions';\r\n\r\nconst QuizQues = (props) => {\r\n    const { submitQuiz } = props;\r\n\r\n    let tempUserAnswers;\r\n    useEffect(() => {\r\n        tempUserAnswers = props.questions.map((ele) => {\r\n            return {\r\n                questionId: ele._id,\r\n                selectedAnswer: ''\r\n            };\r\n        });\r\n        setUserAnswers(tempUserAnswers);\r\n    }, [tempUserAnswers]);\r\n\r\n    const [userAnswers, setUserAnswers] = useState(null);\r\n\r\n    const handleOptClick = (index, ans) => {\r\n        console.log('clcic', index);\r\n        let tempArr = [...userAnswers];\r\n        tempArr[index] = { ...tempArr[index], selectedAnswer: ans };\r\n        setUserAnswers(tempArr);\r\n    };\r\n\r\n    const handleOnClick = () => {\r\n\r\n        submitQuiz(props.quizId, { userAnswers: userAnswers });\r\n        tempUserAnswers = props.questions.map((ele) => {\r\n            return {\r\n                questionId: ele._id,\r\n                selectedAnswer: ''\r\n            };\r\n        });\r\n        setUserAnswers(tempUserAnswers);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            { props.questions.map((ele, index) => (\r\n                userAnswers ? (\r\n                    <Accordion key={index} className='my-2'>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    {`${index + 1}.`} {ele.question}\r\n                                </Card.Title>\r\n                                {ele.answers.map((ansEle, ansIdx) => <QuizOption\r\n                                    key={ansIdx}\r\n                                    onClickFunc={() => handleOptClick(index, ansEle)}\r\n                                    isClicked={ansEle === userAnswers[index].selectedAnswer}\r\n                                    text={ansEle} />)}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Accordion>) :\r\n                    <h3 key={index}>Loading...</h3>)\r\n            )}\r\n            <div className=\"text-center\" onClick={handleOnClick} style={{ width: '200px', margin: 'auto' }}>\r\n                <Button className=\"createquiz mb-4\"  >Submit Quiz</Button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitQuiz })(QuizQues);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\coding\\codeTableRow.js",["261","262","263","264","265","266"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { connect } from \"react-redux\";\r\nimport { deleteQuestion } from \"../../store/actions/codeActions\";\r\n\r\nconst codeTableRow = ({ question, id, user, deleteQuestion }) => {\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\" >{id + 1}</th>\r\n            <td ><Link className=\"questTitle\" to={`/code/${question._id}`}>{question.title}</Link></td>\r\n            <td className=\"\"><span><a className=\"fa fa-book questSol\" aria-hidden=\"true\" href=\"#\"></a></span></td>\r\n            <td className=\"\"><span className=\" diffMod badge  \">{question.difficulty}</span></td>\r\n            <td>53.4 %</td>\r\n            {/* {user.role === 'faculty' &&  */}\r\n            <td>\r\n                <span>\r\n                    <a className=\"fa fa-pencil-square operation-E mr-3 \" aria-hidden=\"true\" href=\"#\"></a>\r\n                </span>\r\n                <span >\r\n                    <a className=\"fa fa-trash operation-D\" aria-hidden=\"true\" href=\"#\" onClick={() => deleteQuestion(question._id)}></a>\r\n                </span>\r\n            </td>\r\n            {/* } */}\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default connect(null, {deleteQuestion})(codeTableRow)\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\quizActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\codeActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js",["267"],"import React, { Fragment, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport './quiz.css';\r\n\r\nconst QuizOption = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={`mt-3 mb-3 pr-2 rounded option ${(props.isClicked && 'correct')}`}>\r\n                <Accordion.Toggle as={Button} onClick={props.onClickFunc} variant=\"\" eventKey={props.isCorrect ? '0' : '1'}  >\r\n                    {props.text}\r\n                </Accordion.Toggle>\r\n                \r\n                {/* <div className='icon cross' ><i className=\"fa fa-times\" aria-hidden=\"true\"></i></div> */}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default QuizOption;\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\QuizTimer.js",["268","269","270"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst QuizTimer = (props) => {\r\n\r\n    let durInSec = Math.round((new Date(props.endAt).getTime() - new Date().getTime()) / 1000);\r\n    let durMin = Math.floor(durInSec / 60);\r\n    let durSec = durInSec % 60;\r\n\r\n    const [countdownDate, setCountdownDate] = useState(new Date(props.endAt).getTime());\r\n    const [timer, setTimer] = useState({\r\n        minutes: durMin,\r\n        seconds: durSec\r\n    });\r\n\r\n    let myInterval;\r\n    useEffect(() => {\r\n        myInterval = setInterval(() => setNewTime(), 1000);\r\n\r\n        return () => clearInterval(myInterval);\r\n    }, [timer]);\r\n\r\n    const setNewTime = () => {\r\n        if (timer.seconds <= 0 && timer.minutes <= 0) {\r\n            return clearInterval(myInterval);\r\n        }\r\n        else if (countdownDate) {\r\n            const currentTime = new Date().getTime();\r\n\r\n            const distanceToDate = countdownDate - currentTime;\r\n\r\n            let minutes = Math.floor(\r\n                (distanceToDate % (1000 * 60 * 60)) / (1000 * 60),\r\n            );\r\n            let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000);\r\n            setTimer({ minutes, seconds });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        (timer.minutes <= 0 && timer.seconds <= 0) ?\r\n            (<span className='time_sec float-right mt-1 pr-1' >Time's Up!</span>)\r\n            :\r\n        (<span className='time_sec float-right mt-1 pr-1' >{timer.minutes < 10 ? `0${timer.minutes}` : timer.minutes}:{timer.seconds < 10 ? `0${timer.seconds}` : timer.seconds}</span>)\r\n    );\r\n};\r\n\r\nexport default QuizTimer;\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizPageSub.js",["271","272"],"import React, { useEffect, useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport QuizQuesSub from './QuizQuesSub';\r\nimport { connect } from 'react-redux';\r\nimport { getQuizSubmission } from '../../../store/actions/quizActions';\r\n\r\nconst QuizPageSub = (props) => {\r\n    const {\r\n        quiz: { currentSubmission },\r\n        getQuizSubmission,\r\n        match\r\n    } = props;\r\n    const quizSubId = match.params.id;\r\n\r\n    useEffect(() => {\r\n        getQuizSubmission(quizSubId);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        (currentSubmission && currentSubmission.quiz.questions) ?\r\n            (<Container className='mt-3'>\r\n                <Card.Header className='quiz_header'>\r\n                    <Row >\r\n                        <Col lg={9} md={8} sm={7} xs={8} className='quiz_title_col' >\r\n                            <div  >{currentSubmission.quiz.title}</div>\r\n                        </Col>\r\n                        <Col lg={3} md={4} sm={5} xs={4} className='quiz_timer_col' >\r\n                            <span className='time_sec float-right mt-1 pr-1' >{currentSubmission.timeTaken.minutes < 10 ? `0${currentSubmission.timeTaken.minutes}` : currentSubmission.timeTaken.minutes}:{currentSubmission.timeTaken.seconds < 10 ? `0${currentSubmission.timeTaken.seconds}` : currentSubmission.timeTaken.seconds}</span>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <QuizQuesSub key={currentSubmission._id} userAns={currentSubmission.userAnswers} questions={currentSubmission.quiz.questions} quizId={currentSubmission.quiz._id} />\r\n            </Container>)\r\n            :\r\n            <h3>Loading...</h3>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuizSubmission })(QuizPageSub);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizQuesSub.js",["273","274"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport QuizOptionSub from './QuizOptionSub';\r\nimport '../quiz.css';\r\nimport { connect } from 'react-redux';\r\nimport { submitQuiz } from '../../../store/actions/quizActions';\r\n\r\nconst QuizQues = (props) => {\r\n    const { userAns } = props;\r\n\r\n    const [userAnswers, setUserAnswers] = useState(userAns);\r\n\r\n    return (\r\n        <>\r\n            { props.questions.map((ele, index) => (\r\n                userAnswers ? (\r\n                    <Accordion key={index} className='my-2'>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    {`${index + 1}.`} {ele.question}\r\n                                </Card.Title>\r\n                                {ele.answers.map((ansEle, ansIdx) => <QuizOptionSub\r\n                                    key={ansIdx}\r\n                                    isCorrect={ansEle === ele.correctAnswer}\r\n                                    isClicked={ansEle === userAnswers[index].selectedAnswer}\r\n                                    text={ansEle} />)}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Accordion>) :\r\n                    <h3 key={index}>Loading...</h3>)\r\n            )}\r\n            {/* <div className=\"text-center\" onClick={handleOnClick} style={{ width: '200px', margin: 'auto' }}>\r\n                <Button className=\"createquiz mb-4\"  >Submit Quiz</Button>\r\n            </div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitQuiz })(QuizQues);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizOptionSub.js",["275"],"import React, { Fragment, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport '../quiz.css';\r\n\r\nconst QuizOption = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <div className={`mt-3 mb-3 pr-2 rounded option ${(props.isClicked) ? (props.isCorrect ? 'correct' : 'incorrect') : (props.isCorrect && 'correct')}`}>\r\n                <Accordion.Toggle as={Button} onClick={props.onClickFunc} variant=\"\" eventKey={props.isCorrect ? '0' : '1'}  >\r\n                    {props.text}\r\n                </Accordion.Toggle>\r\n                {props.isClicked ? (props.isCorrect ?\r\n                    <div className='icon tick' ><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div> :\r\n                    <div className='icon cross' ><i className=\"fa fa-times\" aria-hidden=\"true\"></i></div>)\r\n                    : (props.isCorrect && <div className='icon tick' ><i className=\"fa fa-check\" aria-hidden=\"true\"></i></div>)\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default QuizOption;\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubmissions.js",["276","277","278","279"],"import React, { useEffect, Fragment } from 'react';\r\nimport \"../../coding/CodeQuestDisp.css\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport QuizSubTabRow from './QuizSubTabRow';\r\nimport { connect } from 'react-redux';\r\nimport { getQuizSubmissions, getQuizSubmission } from '../../../store/actions/quizActions';\r\n\r\nconst QuizSubmissions = (props) => {\r\n    const { auth: { user },\r\n        quiz: { submissions }, getQuizSubmissions, getQuizSubmission, match } = props;\r\n\r\n    const { quizId } = match.params;\r\n\r\n    useEffect(() => {\r\n        if (user?.role === 'student') {\r\n            getQuizSubmissions({ user: user._id });\r\n        }\r\n        else if (user?.role === 'faculty') {\r\n            getQuizSubmissions({ quiz: quizId });\r\n        }\r\n        return () => {\r\n        };\r\n    }, [user]);\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            {submissions !== null ? (<Container className=\"container-codeQuest\">\r\n                <h3 className=\"text-center  mb-2 pt-4 \">\r\n                    Coding Questions\r\n        </h3>\r\n                <div className=\"title-border mb-4\">\r\n                    <span></span>\r\n                </div>\r\n                <div className=\"displayQuest pb-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 pb-2\">\r\n                            <Form>\r\n                                <Form.Group controlId=\"codingquestionSearch\">\r\n                                    <Form.Control\r\n                                        className=\" codingQuestSearch\"\r\n                                        type=\"\"\r\n                                        placeholder=\"Search question titles, descriptions or ID\"\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <table className=\"table  \">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">{user?.role === 'student' ? 'Title' : 'Name'}</th>\r\n                                <th scope=\"col\">Submitted At</th>\r\n                                <th scope=\"col\">Time Taken</th>\r\n                                <th scope=\"col\">Score</th>\r\n                                {(user?.role === 'faculty' || user?.role === 'admin') && <th scope=\"col\">Operation</th>}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"tbodyCode\">\r\n                            {submissions.map((ele, index) => <QuizSubTabRow key={ele._id} name={ele.user.name} eleObj={ele} idx={index} />)}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"row\">\r\n                        <div className=\"ml-3 \">\r\n                            <Form>\r\n                                <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        className=\"dispCode-inputFiled rowsPerPg\"\r\n                                    >\r\n                                        <option className=\"optionSelect\">\r\n                                            10\r\n                                </option>\r\n                                        <option className=\"optionSelect\">\r\n                                            25\r\n                                </option>\r\n                                        <option className=\"optionSelect\">\r\n                                            50\r\n                                </option>\r\n                                        <option className=\"optionSelect\">\r\n                                            100\r\n                                </option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                        <span className=\"labelRowsPerPg mt-2 col-4\">\r\n                            rows per page.\r\n                </span>\r\n\r\n                        <div className=\" paginatt \">\r\n                            <nav aria-label=\"Page navigation example\">\r\n                                <ul className=\"pagination nav2\">\r\n                                    <li className=\"\">\r\n                                        <a\r\n                                            className=\"page-link\"\r\n                                            href=\"#\"\r\n                                            aria-label=\"Previous\"\r\n                                        >\r\n                                            <span\r\n                                                aria-hidden=\"true\"\r\n                                                className=\"pagntColor\"\r\n                                            >\r\n                                                &laquo;\r\n                                    </span>\r\n                                        </a>\r\n                                    </li>\r\n                                    <li className=\" \">\r\n                                        <a\r\n                                            className=\"page-link pagntColor\"\r\n                                            href=\"#1\"\r\n                                        >\r\n                                            1\r\n                                </a>\r\n                                    </li>\r\n                                    <li className=\"active\">\r\n                                        <a\r\n                                            className=\"page-link pagntColor \"\r\n                                            href=\"#2\"\r\n                                        >\r\n                                            2\r\n                                </a>\r\n                                    </li>\r\n                                    <li className=\" \">\r\n                                        <a\r\n                                            className=\"page-link pagntColor \"\r\n                                            href=\"#3\"\r\n                                        >\r\n                                            3\r\n                                </a>\r\n                                    </li>\r\n                                    <li className=\"\">\r\n                                        <a\r\n                                            className=\"page-link\"\r\n                                            href=\"#\"\r\n                                            aria-label=\"Next\"\r\n                                        >\r\n                                            <span\r\n                                                aria-hidden=\"true\"\r\n                                                className=\"pagntColor\"\r\n                                            >\r\n                                                &raquo;\r\n                                    </span>\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>) :\r\n                (\r\n                    <h1>Loading..</h1>\r\n                )\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuizSubmissions, getQuizSubmission })(QuizSubmissions);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubTabRow.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeProblem.js",["280"],"import React, { useEffect } from 'react';\r\nimport AptiTopicsTemplate from './AptiTopicsTemplate';\r\nimport { connect } from 'react-redux';\r\nimport { getCategoryAndTopic } from '../../store/actions/practiceProblemActions';\r\n\r\n\r\nconst PracticeProblem = (props) => {\r\n    const { practiceProblem: { catAndTopic }, getCategoryAndTopic } = props;\r\n\r\n    useEffect(() => {\r\n        getCategoryAndTopic();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {catAndTopic ?\r\n                <>\r\n                    { catAndTopic.distinctCategory.map((ele, index) => <AptiTopicsTemplate\r\n                        key={index}\r\n                        title={ele}\r\n                        topics= {catAndTopic.distinctTopicByCat[index]}\r\n                    />)}\r\n                </>\r\n                : <h3>Loading...</h3>}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    practiceProblem: state.practiceProblem\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCategoryAndTopic })(PracticeProblem);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\AptiTopicsTemplate.js",["281","282"],"import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./practiceProblem.css\";\r\nimport slugify from 'slugify';\r\nimport { Container, Button, Form, Accordion, Card, Alert } from 'react-bootstrap';\r\n\r\nconst AptiTopicsTemplate = (props) => {\r\n    const { topics, title } = props;\r\n\r\n    return (\r\n\r\n        <Container className=\"container-problems\">\r\n            <Accordion>\r\n                <Accordion.Toggle\r\n                    as={Alert.Link}\r\n                    eventKey=\"0\"\r\n                    style={{ color: \"#775ecf\" }}\r\n                >\r\n                    <h3 className=\"text-center mb-3 pt-4 text-capitalize\">{title}</h3>\r\n                </Accordion.Toggle>\r\n\r\n                <div className=\"title-border mb-4\">\r\n                    <span></span>\r\n                </div>\r\n                <Accordion.Collapse\r\n                    eventKey=\"0\">\r\n                    <>\r\n                        <div className=\"row mr-2 ml-2\">\r\n                            <div className=\"col-12 \">\r\n                                <Form>\r\n                                    <Form.Group controlId=\"codingquestionSearch\" >\r\n                                        <Form.Control className=\" searchField\" type=\"\" placeholder=\"Search Topics\" />\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                        <hr className=\"hr-1 pb-2\"></hr>\r\n\r\n                        <div className=\"Topics pb-4\">\r\n\r\n                            {/* Topics component starts here */}\r\n                            {topics.map((ele, index) =>\r\n                                <div key={index} className=\"row topic mb-3 pb-2 pt-2\">\r\n                                    <div className=\"col-sm-6 topic-left\">\r\n                                        <h5 className=\"topic-name\">{ele}</h5>\r\n                                    </div>\r\n                                    <div className=\"col-sm-6 \">\r\n                                        <div className=\"topic-right\">\r\n                                            <span>\r\n                                                <i className=\"fa fa-trash operation-D mr-3 mt-1 op\" aria-hidden=\"true\" ></i>\r\n                                            </span>\r\n                                            <Link to={`/practiceproblems/${slugify(ele, { lower: true })}`} >\r\n                                                <span>\r\n                                                    <i className=\"fa fa-chevron-circle-right operation-D mr-3 mt-1 op\" aria-hidden=\"true\" ></i>\r\n                                                </span>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            {/* Topics component ends here */}\r\n\r\n                            <div className=\"text-center\">\r\n                                <Link to=\"/addtopic\"><Button className=\"Addmore-btn mt-2\" >Add More Topics</Button></Link>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n        </Container >\r\n    );\r\n};\r\nexport default AptiTopicsTemplate;","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\AddTopics.js",["283"],"import React, { useState } from 'react';\r\nimport '../quiz/quiz.css';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CreateAptiQuestion from './CreateAptiQuestion';\r\nimport { connect } from 'react-redux';\r\nimport { addTopic } from '../../store/actions/practiceProblemActions';\r\n\r\nconst AddTopics = (props) => {\r\n    const { auth: { user }, addTopic } = props;\r\n\r\n    const [aptiInfo, setAptiInfo] = useState({\r\n        topic: '',\r\n        category: 'quantitative analysis'\r\n    });\r\n    const [apti, setApti] = useState([{\r\n        id: 0,\r\n        author: '',\r\n        topic: '',\r\n        category: '',\r\n        question: '',\r\n        answers: ['', '', '', ''],\r\n        correctAnswer: '',\r\n        explanation: ''\r\n    }]);\r\n\r\n    const [lastId, setLastId] = useState(0);\r\n\r\n    const handleAddQuesClick = () => {\r\n        const newQuesObj = {\r\n            id: lastId + 1,\r\n            author: aptiInfo.author,\r\n            topic: aptiInfo.topic,\r\n            category: aptiInfo.category,\r\n            question: '',\r\n            answers: ['', '', '', ''],\r\n            correctAnswer: '',\r\n            explanation: ''\r\n        };\r\n\r\n        setLastId(lastId + 1);\r\n\r\n        const newQuesArray = [...apti, newQuesObj];\r\n        setApti(newQuesArray);\r\n\r\n    };\r\n\r\n    const handleOnChangeQues = (e, index) => {\r\n        const quesArray = [...apti];\r\n        if (e.target.name === 'question' || e.target.name === 'correctAnswer' || e.target.name === 'explanation') {\r\n            quesArray[index][e.target.name] = e.target.value;\r\n            setApti(quesArray);\r\n        }\r\n        else {\r\n            let optIndex = 0;\r\n            if (e.target.name === 'optionB') {\r\n                optIndex = 1;\r\n            }\r\n            else if (e.target.name === 'optionC') {\r\n                optIndex = 2;\r\n            }\r\n            else if (e.target.name === 'optionD') {\r\n                optIndex = 3;\r\n            }\r\n            quesArray[index].answers[optIndex] = e.target.value;\r\n            setApti(quesArray);\r\n        }\r\n\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setAptiInfo({\r\n            ...aptiInfo,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleOnDelete = (eleId) => {\r\n        const newQuesArray = apti.filter((ele) => {\r\n            return ele.id !== eleId;\r\n        });\r\n        setApti(newQuesArray);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let tempApti = apti.map((ele) => {\r\n            ele.topic = aptiInfo.topic;\r\n            ele.category = aptiInfo.category;\r\n            ele.author = user._id;\r\n            return ele;\r\n        });\r\n        // addTopic(tempApti);\r\n        // {\r\n        //     aptiQuestions : []\r\n        // }\r\n        console.log('temp', tempApti);\r\n        addTopic({\r\n            aptiQuestions: tempApti\r\n        });\r\n\r\n        setAptiInfo({\r\n            topic: '',\r\n            category: 'quantitative analysis'\r\n        });\r\n\r\n        setApti([{\r\n            id: 0,\r\n            author: '',\r\n            topic: '',\r\n            category: '',\r\n            question: '',\r\n            answers: ['', '', '', ''],\r\n            correctAnswer: '',\r\n            explanation: ''\r\n        }]);\r\n    };\r\n\r\n    return (\r\n        <Container className=\"container-quiz\">\r\n            <h3 className=\"text-center  mb-2 pt-4 \">TOPIC DETAILS</h3>\r\n            <div className=\"title-border mb-4\">\r\n                <span></span>\r\n            </div>\r\n            <div className=\"createquizform pb-1\">\r\n                <Form onSubmit={onSubmit}  >\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Form.Group controlId=\"topic\" >\r\n                                <Form.Label><b>Enter Topic</b></Form.Label>\r\n                                <Form.Control className=\"quiz-inputFiled\" name=\"topic\" value={apti.topic} onChange={handleOnChange} placeholder=\"Enter Topic\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <Form.Group controlId=\"category\" >\r\n                                <Form.Label><b>Select Category</b></Form.Label>\r\n                                <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                    <Form.Control as=\"select\" className=\"quiz-inputFiled\" name='category' onChange={handleOnChange}  >\r\n                                        <option className=\"optionSelect\" value='quantitative analysis' >Quantitative Analysis</option>\r\n                                        <option className=\"optionSelect\" value='logical reasoning' >Logical Reasoning</option>\r\n                                        <option className=\"optionSelect\" value='verbal ability' >Verbal Ability</option>\r\n                                        <option className=\"optionSelect\" value='other topics' >Other</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                    <h3 className=\"text-center  mb-2 pt-2 \">ADD QUESTIONS</h3>\r\n                    <div className=\"title-border mb-3\">\r\n                        <span></span>\r\n                    </div>\r\n\r\n                    {/* Questions Samples start Here */}\r\n                    {apti.map((ele, index) => <CreateAptiQuestion\r\n                        key={ele.id}\r\n                        index={index}\r\n                        onDeleteFunc={() => handleOnDelete(ele.id)}\r\n                        onChangeFunc={(e) => handleOnChangeQues(e, index)}\r\n                        quesObj={ele}\r\n                    />)}\r\n                    {/* Question sample end here */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Button className=\"addquestbtn mb-2\" onClick={handleAddQuesClick}  > Add Next Question  </Button>\r\n                        </div>\r\n                        <div className=\"col-sm-6 text-center\">\r\n                            <Button className=\"createquiz mb-4\" type='submit' >Add Topic</Button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        auth: state.auth,\r\n        practiceProblem: state.practiceProblem\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, { addTopic })(AddTopics);","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\CreateAptiQuestion.js",["284"],"import React, { useState, useRef } from 'react';\r\n// import './quiz.css';\r\nimport { Button, Form, Alert, Row, Accordion } from 'react-bootstrap';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nconst CreateAptiQuestion = (props) => {\r\n    const [toggle, setToggle] = useState(false);\r\n    const inpRef = useRef(null);\r\n\r\n    const handleOnFocus = () => {\r\n        if (!toggle) {\r\n            inpRef.current.click();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n\r\n            <Accordion>\r\n                <div className=\"row \">\r\n                    <div className=\"col-12\">\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\" >\r\n                            <Form.Label> <b>Question {props.index + 1}</b></Form.Label>\r\n                            <Accordion.Toggle as={Alert.Link}\r\n                                ref={inpRef}\r\n                                onClick={() => setToggle(!toggle)}\r\n                                eventKey=\"0\"\r\n                                style={{ float: 'right', paddingRight: '20px', color: \"#775ecf\" }}\r\n                            >\r\n                                {toggle ? 'Collapse' : 'Expand'}\r\n                            </Accordion.Toggle>\r\n                            <TextareaAutosize\r\n                                className=\"quiz-inputFiled questiontextarea\"\r\n                                name=\"question\"\r\n                                onFocus={handleOnFocus}\r\n                                onChange={props.onChangeFunc}\r\n                                value={props.quesObj.question}\r\n                                placeholder=\"Type question here..\">\r\n\r\n                            </TextareaAutosize>\r\n                        </Form.Group>\r\n                    </div>\r\n                </div>\r\n                {/* </Accordion.Toggle> */}\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionA-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option A</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled\" onChange={props.onChangeFunc} value={props.quesObj.answers[0]} name=\"optionA\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionB-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option B</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[1]} name=\"optionB\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionC-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option C</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[2]} name=\"optionC\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`optionD-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Option D</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.answers[3]} name=\"optionD\" placeholder=\"\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-sm-6\">\r\n                                <Form.Group controlId={`correctOption-${props.quesObj._id}`} >\r\n                                    <Form.Label><b>Correct option</b></Form.Label>\r\n                                    <Form.Control className=\"quiz-inputFiled \" onChange={props.onChangeFunc} value={props.quesObj.correctAnswer} name=\"correctAnswer\" placeholder=\"Enter answer/text\" />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-4\">\r\n                            <div className=\"col-sm-9\">\r\n                                <Form.Label><b>Explanation</b></Form.Label>\r\n                                <TextareaAutosize className=\"quiz-inputFiled questiontextarea\" onChange={props.onChangeFunc} value={props.quesObj.explanation} name=\"explanation\" placeholder=\"\" ></TextareaAutosize>\r\n                            </div>\r\n                            {props.onDeleteFunc && <div className=\"col-sm-3\">\r\n                                <Button className=\"deletebtn\" onClick={props.onDeleteFunc} >Delete question</Button>\r\n                            </div>}\r\n                        </div>\r\n                        <hr className=\"mb-4 mt-4\"></hr>\r\n                    </>\r\n                </Accordion.Collapse>\r\n            </Accordion>\r\n            <hr className=\"mt-3 \"></hr>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default CreateAptiQuestion;","C:\\Major Projects\\PlacePrep\\client\\src\\store\\reducers\\practiceProblemReducers.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\store\\actions\\practiceProblemActions.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizPage.js",["285","286","287","288"],"import React, { useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PracticeQuizQues from './PracticeQuizQues';\r\nimport QuizTimer from '../quiz/QuizTimer';\r\nimport { connect } from 'react-redux';\r\nimport { getPracticeProblems } from '../../store/actions/practiceProblemActions';\r\nimport { loadUser } from '../../store/actions/authActions';\r\n\r\nconst QuizPage = (props) => {\r\n    const {\r\n        practiceProblem: { questions },\r\n        auth: { user },\r\n        loadUser,\r\n        getPracticeProblems,\r\n        match\r\n    } = props;\r\n    const slug = match.params.slug;\r\n\r\n    useEffect(() => {\r\n        getPracticeProblems(slug);\r\n        // loadUser(false, true);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        questions ?\r\n            (<Container className='mt-3'>\r\n                <Card.Header className='quiz_header'>\r\n                    <Row >\r\n                        <Col lg={9} md={8} sm={7} xs={8} className='quiz_title_col' >\r\n                            <div  >{questions[0]?.topic}</div>\r\n                        </Col>\r\n                        {/* <Col lg={3} md={4} sm={5} xs={4} className='quiz_timer_col' >\r\n                           {user && <QuizTimer endAt={user.testWillEndAt} />}\r\n                        </Col> */}\r\n                    </Row>\r\n                </Card.Header>\r\n                <PracticeQuizQues key={0} questions={questions} />\r\n                {/* <div className=\"text-center\" style={{ width: '200px', margin: 'auto' }}>\r\n                    <Button className=\"createquiz mb-4\" type=\"submit\"  >Submit Quiz</Button>\r\n                </div> */}\r\n            </Container>)\r\n            :\r\n            <h3>Loading...</h3>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    practiceProblem: state.practiceProblem,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPracticeProblems, loadUser })(QuizPage);\r\n","C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizQues.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizOption.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\ViewAnswer.js",[],"C:\\Major Projects\\PlacePrep\\client\\src\\components\\practiceProblems\\EditPracticeProblem.js",["289","290","291"],"import React, { useState, useEffect } from 'react';\r\nimport '../quiz/quiz.css';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport CreateAptiQuestion from './CreateAptiQuestion';\r\nimport { connect } from 'react-redux';\r\nimport { updatePracticeProblem, getPracticeProblem } from '../../store/actions/practiceProblemActions';\r\n\r\nconst EditPracticeProblem = (props) => {\r\n    const { auth: { user },\r\n        practiceProblem: { current },\r\n        updatePracticeProblem,\r\n        getPracticeProblem,\r\n        match\r\n    } = props;\r\n    const id = match.params.id;\r\n\r\n    useEffect(() => {\r\n        getPracticeProblem(id);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (current !== null) {\r\n            let tempDeepCopy = JSON.parse(JSON.stringify(current));\r\n\r\n            setApti(tempDeepCopy);\r\n        } else {\r\n            setApti({\r\n                author: '',\r\n                topic: '',\r\n                category: 'quantitative analysis',\r\n                question: '',\r\n                answers: ['', '', '', ''],\r\n                correctAnswer: '',\r\n                explanation: ''\r\n            });\r\n        }\r\n    }, [current]);\r\n\r\n    const [apti, setApti] = useState({\r\n        author: '',\r\n        topic: '',\r\n        category: 'quantitative analysis',\r\n        question: '',\r\n        answers: ['', '', '', ''],\r\n        correctAnswer: '',\r\n        explanation: ''\r\n    });\r\n\r\n    const handleOnChangeQues = (e, index) => {\r\n        const quesObj = { ...apti };\r\n        if (e.target.name === 'question' || e.target.name === 'correctAnswer' || e.target.name === 'explanation') {\r\n            quesObj[e.target.name] = e.target.value;\r\n            setApti(quesObj);\r\n        }\r\n        else {\r\n            let optIndex = 0;\r\n            if (e.target.name === 'optionB') {\r\n                optIndex = 1;\r\n            }\r\n            else if (e.target.name === 'optionC') {\r\n                optIndex = 2;\r\n            }\r\n            else if (e.target.name === 'optionD') {\r\n                optIndex = 3;\r\n            }\r\n            quesObj.answers[optIndex] = e.target.value;\r\n            setApti(quesObj);\r\n        }\r\n\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setApti({\r\n            ...apti,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // addTopic(tempApti);\r\n        // {\r\n        //     aptiQuestions : []\r\n        // }\r\n        console.log('temp', apti);\r\n        updatePracticeProblem(apti);\r\n\r\n        // setApti([{\r\n        //     id: 0,\r\n        //     author: aptiInfo.author,\r\n        //     topic: aptiInfo.topic,\r\n        //     category: aptiInfo.category,\r\n        //     question: '',\r\n        //     answers: ['', '', '', ''],\r\n        //     correctAnswer: '',\r\n        //     explanation: ''\r\n        // }]);\r\n    };\r\n\r\n    return (\r\n        <Container className=\"container-quiz\">\r\n            <h3 className=\"text-center  mb-2 pt-4 \">TOPIC DETAILS</h3>\r\n            <div className=\"title-border mb-4\">\r\n                <span></span>\r\n            </div>\r\n            <div className=\"createquizform pb-1\">\r\n                <Form onSubmit={onSubmit}  >\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Form.Group controlId=\"topic\" >\r\n                                <Form.Label><b>Enter Topic</b></Form.Label>\r\n                                <Form.Control className=\"quiz-inputFiled\" name=\"topic\" value={apti.topic} onChange={handleOnChange} placeholder=\"Enter Topic\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <Form.Group controlId=\"category\" >\r\n                                <Form.Label><b>Select Category</b></Form.Label>\r\n                                <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                    <Form.Control as=\"select\" className=\"quiz-inputFiled\" name='category' value={apti.category} onChange={handleOnChange}  >\r\n                                        <option className=\"optionSelect\" value='quantitative analysis'  >Quantitative Analysis</option>\r\n                                        <option className=\"optionSelect\" value='logical reasoning'  >Logical Reasoning</option>\r\n                                        <option className=\"optionSelect\" value='verbal ability' >Verbal Ability</option>\r\n                                        <option className=\"optionSelect\" value='other topics' >Other</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                    <h3 className=\"text-center  mb-2 pt-2 \">ADD QUESTIONS</h3>\r\n                    <div className=\"title-border mb-3\">\r\n                        <span></span>\r\n                    </div>\r\n\r\n                    {/* Questions Samples start Here */}\r\n                    <CreateAptiQuestion\r\n                        key={apti._id}\r\n                        index={0}\r\n                        onChangeFunc={(e) => handleOnChangeQues(e, 0)}\r\n                        quesObj={apti} />\r\n                    {/* Question sample end here */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-4 text-center\" style={{ margin: 'auto' }}>\r\n                            <Button className=\"createquiz mb-4\" type='submit' >Update</Button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        auth: state.auth,\r\n        practiceProblem: state.practiceProblem\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, { updatePracticeProblem, getPracticeProblem })(EditPracticeProblem);",{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":16,"column":5,"nodeType":"298","messageId":"299","endLine":18,"endColumn":6},{"ruleId":"296","severity":1,"message":"297","line":20,"column":5,"nodeType":"298","messageId":"299","endLine":22,"endColumn":6},{"ruleId":"300","severity":1,"message":"301","line":24,"column":17,"nodeType":"302","endLine":24,"endColumn":69},{"ruleId":"303","severity":1,"message":"304","line":28,"column":17,"nodeType":"302","endLine":28,"endColumn":48},{"ruleId":"305","severity":1,"message":"306","line":45,"column":8,"nodeType":"307","endLine":45,"endColumn":10,"suggestions":"308"},{"ruleId":"305","severity":1,"message":"309","line":98,"column":8,"nodeType":"307","endLine":98,"endColumn":10,"suggestions":"310"},{"ruleId":"311","severity":1,"message":"312","line":33,"column":1,"nodeType":"313","endLine":44,"endColumn":3},{"ruleId":"305","severity":1,"message":"314","line":24,"column":8,"nodeType":"307","endLine":24,"endColumn":10,"suggestions":"315"},{"ruleId":"305","severity":1,"message":"316","line":49,"column":8,"nodeType":"307","endLine":49,"endColumn":17,"suggestions":"317"},{"ruleId":"318","severity":1,"message":"319","line":16,"column":9,"nodeType":"320","messageId":"321","endLine":16,"endColumn":17},{"ruleId":"305","severity":1,"message":"314","line":25,"column":8,"nodeType":"307","endLine":25,"endColumn":10,"suggestions":"322"},{"ruleId":"305","severity":1,"message":"323","line":18,"column":8,"nodeType":"307","endLine":18,"endColumn":14,"suggestions":"324"},{"ruleId":"305","severity":1,"message":"325","line":19,"column":8,"nodeType":"307","endLine":19,"endColumn":10,"suggestions":"326"},{"ruleId":"303","severity":1,"message":"304","line":98,"column":45,"nodeType":"302","endLine":102,"endColumn":46},{"ruleId":"303","severity":1,"message":"304","line":136,"column":45,"nodeType":"302","endLine":140,"endColumn":46},{"ruleId":"318","severity":1,"message":"327","line":3,"column":31,"nodeType":"320","messageId":"321","endLine":3,"endColumn":34},{"ruleId":"318","severity":1,"message":"328","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":13},{"ruleId":"318","severity":1,"message":"319","line":20,"column":9,"nodeType":"320","messageId":"321","endLine":20,"endColumn":17},{"ruleId":"305","severity":1,"message":"329","line":15,"column":27,"nodeType":"330","endLine":20,"endColumn":11},{"ruleId":"331","severity":1,"message":"332","line":11,"column":36,"nodeType":"302","endLine":11,"endColumn":99},{"ruleId":"303","severity":1,"message":"304","line":11,"column":36,"nodeType":"302","endLine":11,"endColumn":99},{"ruleId":"331","severity":1,"message":"332","line":17,"column":21,"nodeType":"302","endLine":17,"endColumn":102},{"ruleId":"303","severity":1,"message":"304","line":17,"column":21,"nodeType":"302","endLine":17,"endColumn":102},{"ruleId":"331","severity":1,"message":"332","line":20,"column":21,"nodeType":"302","endLine":20,"endColumn":133},{"ruleId":"303","severity":1,"message":"304","line":20,"column":21,"nodeType":"302","endLine":20,"endColumn":133},{"ruleId":"318","severity":1,"message":"333","line":1,"column":27,"nodeType":"320","messageId":"321","endLine":1,"endColumn":35},{"ruleId":"318","severity":1,"message":"334","line":1,"column":38,"nodeType":"320","messageId":"321","endLine":1,"endColumn":44},{"ruleId":"318","severity":1,"message":"335","line":9,"column":27,"nodeType":"320","messageId":"321","endLine":9,"endColumn":43},{"ruleId":"305","severity":1,"message":"336","line":17,"column":22,"nodeType":"330","endLine":17,"endColumn":59},{"ruleId":"318","severity":1,"message":"333","line":1,"column":28,"nodeType":"320","messageId":"321","endLine":1,"endColumn":36},{"ruleId":"305","severity":1,"message":"337","line":20,"column":8,"nodeType":"307","endLine":20,"endColumn":10,"suggestions":"338"},{"ruleId":"318","severity":1,"message":"339","line":1,"column":37,"nodeType":"320","messageId":"321","endLine":1,"endColumn":46},{"ruleId":"318","severity":1,"message":"340","line":12,"column":25,"nodeType":"320","messageId":"321","endLine":12,"endColumn":39},{"ruleId":"318","severity":1,"message":"333","line":1,"column":27,"nodeType":"320","messageId":"321","endLine":1,"endColumn":35},{"ruleId":"318","severity":1,"message":"341","line":11,"column":52,"nodeType":"320","messageId":"321","endLine":11,"endColumn":69},{"ruleId":"305","severity":1,"message":"342","line":24,"column":8,"nodeType":"307","endLine":24,"endColumn":14,"suggestions":"343"},{"ruleId":"303","severity":1,"message":"304","line":97,"column":41,"nodeType":"302","endLine":101,"endColumn":42},{"ruleId":"303","severity":1,"message":"304","line":135,"column":41,"nodeType":"302","endLine":139,"endColumn":42},{"ruleId":"305","severity":1,"message":"344","line":12,"column":8,"nodeType":"307","endLine":12,"endColumn":10,"suggestions":"345"},{"ruleId":"318","severity":1,"message":"333","line":1,"column":17,"nodeType":"320","messageId":"321","endLine":1,"endColumn":25},{"ruleId":"318","severity":1,"message":"346","line":6,"column":46,"nodeType":"320","messageId":"321","endLine":6,"endColumn":50},{"ruleId":"318","severity":1,"message":"347","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":24},{"ruleId":"318","severity":1,"message":"327","line":3,"column":31,"nodeType":"320","messageId":"321","endLine":3,"endColumn":34},{"ruleId":"318","severity":1,"message":"348","line":7,"column":8,"nodeType":"320","messageId":"321","endLine":7,"endColumn":17},{"ruleId":"318","severity":1,"message":"349","line":15,"column":17,"nodeType":"320","messageId":"321","endLine":15,"endColumn":21},{"ruleId":"318","severity":1,"message":"319","line":16,"column":9,"nodeType":"320","messageId":"321","endLine":16,"endColumn":17},{"ruleId":"305","severity":1,"message":"350","line":25,"column":8,"nodeType":"307","endLine":25,"endColumn":10,"suggestions":"351"},{"ruleId":"318","severity":1,"message":"347","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":24},{"ruleId":"318","severity":1,"message":"349","line":10,"column":21,"nodeType":"320","messageId":"321","endLine":10,"endColumn":25},{"ruleId":"305","severity":1,"message":"352","line":20,"column":8,"nodeType":"307","endLine":20,"endColumn":10,"suggestions":"353"},"no-native-reassign",["354"],"no-negated-in-lhs",["355"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'menuItems'. Either include it or remove the dependency array.","ArrayExpression",["356"],"React Hook useEffect has a missing dependency: 'menuItems'. Either include it or remove the dependency array.",["357"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'getQuiz' and 'slug'. Either include them or remove the dependency array.",["358"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["359"],"no-unused-vars","'loadUser' is assigned a value but never used.","Identifier","unusedVar",["360"],"React Hook useEffect has a missing dependency: 'getQuizzes'. Either include it or remove the dependency array.",["361"],"React Hook useEffect has missing dependencies: 'getQuestion' and 'id'. Either include them or remove the dependency array.",["362"],"'Row' is defined but never used.","'Alert' is defined but never used.","Assignments to the 'tempUserAnswers' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'useState' is defined but never used.","'useRef' is defined but never used.","'setCountdownDate' is assigned a value but never used.","Assignments to the 'myInterval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'getQuizSubmission' and 'quizSubId'. Either include them or remove the dependency array.",["363"],"'useEffect' is defined but never used.","'setUserAnswers' is assigned a value but never used.","'getQuizSubmission' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQuizSubmissions' and 'quizId'. Either include them or remove the dependency array.",["364"],"React Hook useEffect has a missing dependency: 'getCategoryAndTopic'. Either include it or remove the dependency array.",["365"],"'Card' is defined but never used.","'TextareaAutosize' is defined but never used.","'QuizTimer' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPracticeProblems' and 'slug'. Either include them or remove the dependency array.",["366"],"React Hook useEffect has missing dependencies: 'getPracticeProblem' and 'id'. Either include them or remove the dependency array.",["367"],"no-global-assign","no-unsafe-negation",{"desc":"368","fix":"369"},{"desc":"368","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"371","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},"Update the dependencies array to be: [menuItems]",{"range":"390","text":"391"},{"range":"392","text":"391"},"Update the dependencies array to be: [getQuiz, slug]",{"range":"393","text":"394"},"Update the dependencies array to be: [current, props.history]",{"range":"395","text":"396"},{"range":"397","text":"394"},"Update the dependencies array to be: [getQuizzes, user]",{"range":"398","text":"399"},"Update the dependencies array to be: [getQuestion, id]",{"range":"400","text":"401"},"Update the dependencies array to be: [getQuizSubmission, quizSubId]",{"range":"402","text":"403"},"Update the dependencies array to be: [getQuizSubmissions, quizId, user]",{"range":"404","text":"405"},"Update the dependencies array to be: [getCategoryAndTopic]",{"range":"406","text":"407"},"Update the dependencies array to be: [getPracticeProblems, slug]",{"range":"408","text":"409"},"Update the dependencies array to be: [getPracticeProblem, id]",{"range":"410","text":"411"},[1452,1454],"[menuItems]",[3651,3653],[631,633],"[getQuiz, slug]",[1405,1414],"[current, props.history]",[759,761],[510,516],"[getQuizzes, user]",[621,623],"[getQuestion, id]",[639,641],"[getQuizSubmission, quizSubId]",[846,852],"[getQuizSubmissions, quizId, user]",[406,408],"[getCategoryAndTopic]",[829,831],"[getPracticeProblems, slug]",[701,703],"[getPracticeProblem, id]"]